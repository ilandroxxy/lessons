# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

'''
# Сеть задана IP-адресом 192.168.32.128 и сетевой маской 255.255.255.192.

# Адрес сети = IP-адрес узла & Маска сети
# где & - это побитовая конъюнкция

print(12 & 6)  # 4

print(192 & 255, 168 & 255, 32 & 255, 128 & 192)  # Адрес сети = 211 46 0 0

# IP адрес это четыре числа разделенные точкой: 211.46.35.250
# На каждое число выделяется по 1 байту, что эквивалентно 8 битам
# Таким образом числа могут лежать в диапазоне от 0 до 255
# Потому что bin(255)[2:] == '11111111'


# Маска сети имеет длину 32 бита (4 числа по 8 бит)
# И маска сети имеет вид: 111111...000000
# 255.255.255.192 == 11111111.11111111.11111111.11000000
# (всего бит 32, единиц 26, нулей 32- 26 = 6)


# Сеть задана IP-адресом 192.168.32.128 и сетевой маской 255.255.255.192.
# Найдите адрес этой сети по заданому узлу и маске

from ipaddress import *
net = ip_network('192.168.32.128/255.255.255.192', 0)
print(net)  # 192.168.32.128/26 где 26 - это кол-во единиц в маске
print(net.network_address)  # 192.168.32.128
print(net.netmask)  # 255.255.255.192
'''


# № 15326 Досрочная волна 2024 (Уровень: Базовый)
# Сеть задана IP-адресом 105.224.200.224 и сетевой маской 255.255.255.224.
# Сколько в этой сети IP-адресов, для которых количество единиц в двоичной
# записи IP-адреса кратно 4? В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('105.224.200.224/255.255.255.224', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 4 == 0:
        cnt += 1
print(cnt)
'''


# № 17709 (Уровень: Базовый)
# Сеть задана IP-адресом 235.53.0.0 и сетевой маской 255.255.224.0.
# Сколько в этой сети IP-адресов, для которых количество единиц в
# двоичной записи IP-адреса кратно 5, а сами адреса в двоичном виде
# заканчиваются на 110? В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('235.53.0.0/255.255.224.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 5 == 0:
        if s[-3:] == '110':
            cnt += 1
print(cnt)
'''


# https://education.yandex.ru/ege/task/107063cb-939e-4120-bcda-122ea21c55cb
# Сеть задана IP-адресом 101.157.240.0 и маской сети 255.255.252.0.
# Сколько в этой сети IP-адресов, для которых в двоичной записи IP-адреса
# суммарное количество единиц в левых двух байтах больше суммарного количества
# единиц в правых двух байтах.
'''
from ipaddress import *
net = ip_network('101.157.240.0/255.255.252.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'  #
    if s[:16].count('1') > s[16:].count('1'):
        cnt += 1
print(cnt)

# ip = 234.54.243.45
# 1   1   1  1   байт
# 8   8   8  8   бит
# ip[:8], ip[8:16], ip[16:24], ip[24:]
'''

# № 18615 (Уровень: Средний)
'''
from ipaddress import *
for mask in range(11, 32+1):
    net = ip_network(f'143.131.211.37/{mask}', 0)
    k = 0
    for ip in net:
        s = f'{ip:b}'
        if s.count('1') == 10:
            k += 1
    if k == 15:
        print(mask)
'''


# № 18159 (Уровень: Базовый)
# Для узла с IP-адресом 205.154.212.20 адрес сети равен 205.154.192.0.
# Чему равно наибольшее возможное значение третьего слева байта маски?
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'205.154.212.20/{mask}', 0)
    if '205.154.192.0' in str(net):
        print(net, net.netmask)
        # 205.154.192.0/18 255.255.192.0
        # 205.154.192.0/19 255.255.224.0
'''


# https://education.yandex.ru/ege/task/1ccbbaa1-306e-40fd-938a-5a219f70f4b2

# Два узла, находящиеся в разных подсетях, имеют
# IP-адреса 118.187.59.255 и 118.187.65.115.
# В масках обеих подсетей одинаковое количество единиц.
# Укажите наибольшее возможное количество единиц в масках этих подсетей.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'118.187.59.255/{mask}', 0)
    net2 = ip_network(f'118.187.65.115/{mask}', 0)
    if net1 != net2:
        print(mask)
'''




# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 12, 13, 14]
# КЕГЭ  = []
# на следующем уроке:

