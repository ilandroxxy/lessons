# region Домашка: ************************************************************


# endregion Домашка: ************************************************************
# #
# #
# region Урок: ************************************************************


'''
import time
start = time.time()

# def divisors(x):
#     div = []
#     for j in range(1, x+1):
#         if x % j == 0:
#             div.append(j)
#     return div
# Скорость работы простой функции на 1_000_000_000: 17.484

def divisors(x):
    div = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))

print(divisors(16))  # [1, 2, 4, 8, 16]
print(divisors(24))  # [1, 2, 3, 4, 6, 8, 12, 24]
print(divisors(1_000_000_000))

# Скорость работы хорошей функции на 1_000_000_000: 0.001150


end = time.time()
print(end - start)
'''


# № 18148 (Уровень: Базовый)
# (В. Колчев) Пусть M – сумма минимального и максимального натуральных делителей целого числа,
# не считая единицы и самого числа. Если таких делителей у числа нет, то считаем значение M равным нулю.
# Напишите программу, которая перебирает целые числа, бо́льшие 900 000,
# в порядке возрастания и ищет среди них такие, для которых
# M оканчивается на 46. В ответе запишите в первом столбце таблицы первые
# пять найденных чисел в порядке возрастания, а во втором столбце – соответствующие им значения M.
# Количество строк в таблице для ответа избыточно
'''
def divisors(x):
    div = []
    for j in range(2, int(x**0.5)+1):  # не считая единицы и самого числа
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


cnt = 0
for x in range(900_000+1, 10**10):
    d = divisors(x)
    if len(d) >= 2:
        M = min(d) + max(d)
        if M % 100 == 46:
            print(x, M)
            cnt += 1
            if cnt == 5:
                break
'''


# № 18192 (Уровень: Базовый)
# (Д. Бахтиев) Напишите программу, которая перебирает целые числа,
# бо́льшие 1 000 000, в порядке возрастания и ищет среди них те, которые
# имеют ровно 3 простых делителя. В ответе запишите 5 наименьших таких
# чисел в порядке возрастания.
# Справа от каждого такого числа укажите его наибольший простой делитель
'''
def divisors(x):
    div = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))

cnt = 0
for x in range(1_000_000+1, 10**10):
    d = [j for j in divisors(x) if len(divisors(j)) == 2]
    if len(d) == 3:
        print(x, max(d))
        cnt += 1
        if cnt == 5:
            break
'''

# 2 -> [1, 2]  # простое
# 5 -> [1, 5]  # простое
# 13 -> [1, 13]  # простое
# 7 -> [1, 7]  # простое
# 8 -> [1, 2, 4, 8]  # составное


# № 19778 (Уровень: Средний)
'''
def divisors(x):
    div = []
    for j in range(2, int(x**0.5)+1):  # не считая самого числа
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


cnt = 0
for x in range(9_500_000+1, 10**10):
    d = [j for j in divisors(x) if len(divisors(j)) == 0]
    # целую часть среднего арифметического всех простых делителей
    if len(d) > 0:
        F = sum(d) // len(d)
        if F != 0 and F % 813 == 0:
            print(x, F)
            cnt += 1
            if cnt == 5:
                break
'''

# d = [j for j in divisors(x) if j != 9 and j != x and j % 10 == 9]


# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19-21, 22, 23, 25]
# КЕГЭ = []
# на следующем уроке:


# Первый пробник 7.03.25:
# Арина 12/29 -> 56 вторичных баллов +[1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 23] -[7, 13, 17, 19-21, 18, 25]

# Второй пробник 20.05.25:
# Арина 21/29 -> 80 вторичных баллов +[1-5, ..] -[6, 11, 17, 24, 26, 27]
