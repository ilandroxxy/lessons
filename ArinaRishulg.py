# region Домашка: ************************************************************


# endregion Домашка: ************************************************************
# #
# #
# region Урок: ************************************************************

# № 20833 (Уровень: Средний)
'''
from itertools import *
n = 0
for p in product('0123456789', repeat=5):
    num = ''.join(p)
    if num[0] != '0':
        n += 1
        if n % 15 == 0:
            for x in '02468':
                num = num.replace(x, '2')
            for x in '13579':
                num = num.replace(x, '1')
            if '11' not in num and '22' not in num:
                print(n)
'''


# Узел сети
# Маска сети
# Адрес сети = Узел сети & Маска сети (net - Адрес сети)
# & - побитовая конъюнкция (встроена в пайтон)
'''
print(14 & 6)  # 6

print(bin(14)[2:])
print(bin(6)[2:])

# Через Адрес сети мы сможем пробегать IP адреса сети 


from ipaddress import *
net = ip_network('Узел сети/Маска сети', 0)
for ip in net:
'''

#    255  .   255  .  248   .  0
# 11111111.11111111.11111000.00000000

# mask = 21 (единиц в маске)
# 32 - mask = 11


# № 20902 Апробация 05.03.25 (Уровень: Базовый)
# Сеть задана IP-адресом 172.16.80.0 и маской сети 255.255.248.0.
# Сколько в этой сети IP-адресов, для которых количество единиц
# в двоичной записи IP-адреса не кратно 2?
# В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('172.16.80.0/255.255.248.0', 0)
# print(net)  # 172.16.80.0/21 - 21 это кол-во единиц в маске сети
cnt = 0
for ip in net:
    b = f'{ip:b}'  # двоичная запись IP-адреса
    if b.count('1') % 2 == 0:
        cnt += 1
print(cnt)


print(f'{8:b}')  # 1000


n = 8
print(bin(n)[2:])  # 1000
print(oct(n)[2:])  # 10
print(hex(n)[2:])  # 8

print(f'{n:b}')  # 1000
print(f'{n:o}')  # 10
print(f'{n:x}')  # 8
'''


# Сеть задана IP-адресом 172.16.192.0 и маской сети 255.255.192.0.
# Сколько в этой сети IP-адресов, для которых количество единиц в двоичной записи IP-адреса не кратно 5?
# В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('172.16.192.0/255.255.192.0', 0)
cnt = 0
for ip in net:
    b = f'{ip:b}'
    if b.count('1') % 5 != 0:
        cnt += 1
print(cnt)
'''


# № 21412 Досрочная волна 2025 (Уровень: Базовый)
# Сеть задана IP-адресом одного из входящих в неё узлов 143.168.72.213 и сетевой маской 255.255.255.240.
# Определите наибольший IP-адрес данной сети, который может быть присвоен компьютеру.
# В ответе укажите найденный IP-адрес без разделителей.

# Адрес сети и широковещательный адрес не могут быть
# использованы для адресации сетевых устройств.
'''
from ipaddress import *
net = ip_network('143.168.72.213/255.255.255.240', 0)
for ip in net:
    print(ip)
    # 143.168.72.222 - берем предпоследний 
    # 143.168.72.223 - последний не берем
'''


# № 10150 (Уровень: Базовый)
# Для узла с IP-адресом 145.192.94.230
# адрес сети равен 145.192.80.0.
# Чему равен третий слева байт маски?
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'145.192.94.230/{mask}', 0)
    if '145.192.80.0' in str(net):
        print(net, mask, net.netmask)
        # 145.192.80.0/20 20 255.255.240.0
'''

# № 18955 (Уровень: Средний)
# Укажите наибольшее возможное количество единиц в маске этой сети.

from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'200.154.190.12/{mask}', 0)
    net2 = ip_network(f'200.154.184.0/{mask}', 0)
    if net1 == net2:
        print(mask, 32-mask)


# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 18, 19-21]
# КЕГЭ = []
# на следующем уроке: 2, 13, 17, 9, 5


# Первый пробник 7.03.25:
# Арина 12/29 -> 56 вторичных баллов +[1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 23] -[7, 13, 17, 19-21, 18, 25]
