# region Домашка: ************************************************************


# endregion Домашка: ************************************************************
# #
# #
# region Урок: ************************************************************

'''
# Открытие файла
M = [int(x) for x in open('0. files/17.txt')]
R = []  # сюда мы будем складывать результаты



# Рассмотрим основные прототипы 17 номера:

# i  0  1  2  3  4
M = [1, 2, 3, 4, 5]
# len(M) == 5

# 1. Под парой подразумевается два идущих подряд элемента последовательности
# 12 23 34 45
for i in range(len(M)-1):
    x, y = M[i], M[i+1]


# 2. Под тройкой подразумевается три идущих подряд элемента последовательности
# 123 234 345
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
'''


# № 21416 Досрочная волна 2025 (Уровень: Базовый)
# в которых произведение максимального и минимального элементов
# тройки больше суммы всех отрицательных элементов последовательности.
'''
M = [int(x) for x in open('0. files/17.txt')]
A = [x for x in M if x < 0]  # всех отрицательных элементов последовательности
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if max(x, y, z) * min(x, y, z) > sum(A):
        R.append(x + y + z)
print(len(R), max(R))
'''


# № 17636 Основная волна 19.06.24 (Уровень: Средний)

# в которых хотя бы один элемент оканчивается на 3
# и является трёхзначным числом

# а сумма всех элементов меньше максимального элемента последовательности,
# оканчивающегося на 3 и являющегося трёхзначным числом
'''
M = [int(x) for x in open('0. files/17.txt')]
A = [x for x in M if str(x)[-1] == '3' and 100 <= abs(x) <= 1000]
# A = [x for x in M if abs(x) % 10 == 3 and len(str(abs(x))) == 3]
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if (x in A) + (y in A) + (z in A) >= 1:
        if (x + y + z) < max(A):
            R.append(x + y + z)
print(len(R), max(R))
'''


# № 17558 Основная волна 08.06.24 (Уровень: Базовый)

# в которых хотя бы одно число отрицательно

# а сумма чисел пары меньше количества чисел
# последовательности, кратных 32
'''
M = [int(x) for x in open('0. files/17.txt')]
A = [x for x in M if abs(x) % 32 == 0]
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x < 0) + (y < 0) >= 1:
        if (x + y) < len(A):
            R.append(x + y)
print(len(R), max(R))
'''


# № 19249 ЕГКР 21.12.24 (Уровень: Базовый)

# в которых хотя бы один элемент является
# пятизначным числом и оканчивается на 43

# а сумма квадратов элементов тройки не больше
# квадрата максимального элемента последовательности,
# являющегося пятизначным числом и оканчивающегося на 43.
'''
M = [int(x) for x in open('0. files/17.txt')]
A = [x for x in M if abs(x) % 100 == 43 and len(str(abs(x))) == 5]
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if (x in A) + (y in A) + (z in A) >= 1:
        if (x**2 + y**2 + z**2) <= max(A)**2:
            R.append(x**2 + y**2 + z**2)
print(len(R), min(R))
'''


# № 16264 Джобс 03.05.24 (Уровень: Базовый)
# в которых хотя бы одно число кратно минимальному
# двузначному значению последовательности, которое кратно сумме своих цифр.
'''
M = [int(x) for x in open('0. files/17.txt')]
A = [x for x in M if len(str(abs(x))) == 2 and x % sum(map(int, str(x))) == 0]
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x % min(A) == 0) + (y % min(A) == 0) >= 1:
        R.append(x + y)
print(len(R), max(R))
'''



# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 18, 19-21]
# КЕГЭ = []
# на следующем уроке: 2, 9, 5 СРЕЗЫ и ГЕНЕРАТОРЫ


# Первый пробник 7.03.25:
# Арина 12/29 -> 56 вторичных баллов +[1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 23] -[7, 13, 17, 19-21, 18, 25]
