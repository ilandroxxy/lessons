# region Домашка: ******************************************************************

'''
def F(n):
    if (n**0.5).is_integer():
        return n**0.5
    else:
        return F(n + 1) + 1


print(int(F(4850) + F(5000)))
'''

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# № 17562 Основная волна 08.06.24 (Уровень: Базовый)
# У исполнителя есть три команды, которым присвоены номера:
# A. Прибавить 1
# B. Прибавить 2
# C. Прибавить 3
# Сколько существует программ, которые преобразуют число 5 в число 11,
# и при этом траектория вычислений содержит число 7?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a+3, b)


print(F(5, 7) * F(7, 11))

def F(a, b):
    if a >= b:
        return a == b   # True + False + True == 2
    return F(a+1, b) + F(a+2, b) + F(a+3, b)


print(F(5, 7) * F(7, 11))
'''


from functools import *

@lru_cache(None)
def F(a, b):
    if a >= b or a == 100:
        return a == b
    summa = 0
    if a + (a % 10) != a:
        summa += F(a + (a % 10), b)
    if a + (a % 68) != a:
        summa += F(a + (a % 68), b)
    if a ** 2 != a:
        summa += F(a ** 2, b)
    return summa

print(F(2, 68) * F(68, 680))


# Если после выполнения команды получается такое же число,
# то команду нельзя применять к этому числу

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 15, 16, 23]
# КЕГЭ  = []
# на следующем уроке:
