# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# № 21902 Открытый вариант 2025 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n), где n – целое число, задан следующими соотношениями:
# F(n)=n при n≥2025;
# F(n)=n×2+F(n+2), если n<2025.
# Чему равно значение выражения F(82)–F(81)?
'''
def F(n):
    if n >= 2025:
        return n
    if n < 2025:
        return n * 2 + F(n + 2)

print(F(82) - F(81))  # 1945
'''


#
# № 21415 Досрочная волна 2025 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n), где n – целое число, задан следующими соотношениями:
# F(n)=1 при n≤5;
# F(n)=n+F(n–2), если n>5.
# Чему равно значение выражения F(2126)–F(2122)?
'''
import sys
sys.setrecursionlimit(10**8)

def F(n):
    if n <= 5:
        return 1
    if n > 5:
        return n + F(n - 2)

print(F(2126) - F(2122))  # 4250
# RecursionError: maximum recursion depth exceeded
'''


# № 23562 Пересдача 03.07.25 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n) и G(n), где n – целое число, задан следующими соотношениями:
# F(n)=G(n−1);
# G(n)=3×n, если n≤9.
# G(n)=G(n−2)+1, если n>9.
# Чему равно значение выражения F(47995)?
'''
import sys
sys.setrecursionlimit(10**8)

def F(n):
    return G(n-1)

def G(n):
    if n <= 9:
        return 3 * n
    if n > 9:
        return G(n - 2) + 1

print(F(47995))
# RecursionError: maximum recursion depth exceeded
'''


# № 20906 Апробация 05.03.25 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=1 при n=1;
# F(n)=n×F(n−1), если n>1.
# Чему равно значение выражения (F(2024)/4+F(2023))/F(2022)?
'''
import sys
sys.setrecursionlimit(10**8)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n - 1)

print((F(2024) // 4 + F(2023)) // F(2022))
# print((F(2024) / 4 + F(2023)) / F(2022))
#        ~~~~~~~~^~~
# OverflowError: integer division result too large for a float
'''


# № 18931 Новогодний вариант 2025 (Уровень: Базовый)
# (М. Попков) Снежная Королева создала волшебную функцию
# F(n), которая помогает ей вычислять силу зимы. Эта функция определяется следующим образом:
# F(n)=n−1, при n⩽3;
# F(n)=F(n−2)+n/2−F(n−4), если n>3 и n чётно;
# F(n)=F(n−1)×n+F(n−2), если n>3 и n нечётно, где n – целое неотрицательное число.
# Королева решила узнать, насколько велика сила зимы в её королевстве.
# Для этого вычислите значение выражения: F(4952)+2×F(4958)+F(4964).
'''
from functools import *

@lru_cache(None)
def F(n):
    if n <= 3:
        return n - 1
    if n > 3 and n % 2 == 0:
        return F(n - 2) + n / 2 - F(n - 4)
    if n > 3 and n % 2 != 0:
        return F(n - 1) * n + F(n - 2)

for i in range(5000):
    F(i)

print(F(4952)+2 * F(4958) + F(4964))
'''


# № 23375 Резервный день 19.06.25 (Уровень: Базовый)
# Алгоритм вычисления значения функции F(n) и G(n), где
# n – целое число, задан следующими соотношениями:
# F(n)=G(n−1)+G(n−3);
# G(n)=3×n, если n≤9.
# G(n)=G(n−4)+2, если n>9.
# Чему равно значение выражения F(42999)?
'''
import sys
sys.setrecursionlimit(10**8)
def F(n):
    return G(n - 1) + G(n - 3)
def G(n):
    if n <= 9:
        return 3 * n
    if n > 9:
        return G(n - 4)+2

print(F(42999))
'''


# 23200
# Алгоритм вычисления значения функции
# F(n), где n – целое число, задан следующими соотношениями:
# F(n)=n при n<10;
# F(n)=3n+F(n−3), если n≥10.
# Чему равно значение выражения (F(6250)+2×F(6244))/F(6238)?
# В ответе запишите целую часть полученного числа
'''
import sys
sys.setrecursionlimit(10**8)
def F(n):
    if n < 10:
        return n
    if n >= 10:
        return 3*n + F(n - 3)
for i in range(7000):
    F(i)
print((F(6250) + 2 * F(6244)) // F(6238))
'''


# № 19597 (Уровень: Базовый)
'''
import sys
sys.setrecursionlimit(10**8)
def F(n):
    if n < 15:
        return 4
    if n >= 15 and n % 3 == 0:
        return F(2 * n/3)+n - 1
    if n >= 15 and n % 3 != 0:
        return F(n - 1)+3

for n in range(1000):
    if F(n) == 251:
        print(n)
'''


# № 13299 Открытый курс "Слово пацана" (Уровень: Базовый)
import sys
sys.setrecursionlimit(10**8)
def F(n):
    if n <= 3:
        return 1
    if n > 3 and n % 3 == 0:
        return F(n/3) + 4*n
    if n > 3 and n % 3 != 0:
        return n * n * n - 26

for n in range(1000):
    if F(n) < 300:
        print(n)


# # endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 13, 14, 16, 25]
# КЕГЭ = []
# на следующем уроке:
