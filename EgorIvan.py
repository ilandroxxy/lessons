# region Домашка: ******************************************************************

# № 13094 (Уровень: Средний)
'''
cnt = 0
from itertools import product
for p in product('12345678', repeat=9):
    num = ''.join(p)
    # if num[0] != '0':
    N = [x for x in num if num.count(x) <= 3]
    if len(N) == len(num):
        for x in '2468':
            num = num.replace(x, '*')
        for x in '13579':
            num = num.replace(x, '+')
        if '**' not in num and '++' not in num:
            cnt += 1
            print(cnt)
'''
from ipaddress import ip_network

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Какие есть прототипы:
# Узел и Маска
# Узел и Адрес сети
# Узел и Узел


'''
#    net
# Адрес сети = Узел сети & Маска сети

# & - побитовая конъюнкция

print(14 % 5)  # 4

print(f'{14:b}')  # 1110
print(f'{5:b}')  # 101

# ip = '112.160.0.0' - числа лежат в диапазоне от 0 до 255
# 4байта 1   1  1 1
# 1 байт = 8 бит, то есть 255_10 == 11111111_2

# Маска сети (255.240.0.0) принимает вид: 11111... замет 00000....
# Единиц 12: '11111111.11110000.00000000.00000000'


from ipaddress import *
net = ip_network('112.160.0.0/255.240.0.0')
print(net)  # 112.160.0.0/12  12 - это кол-во единиц в маске 
'''


# № 17632 Основная волна 19.06.24 (Уровень: Базовый)
# Сеть задана IP-адресом 112.160.0.0 и сетевой маской 255.240.0.0.
# Сколько в этой сети IP-адресов, для которых
# количество единиц в двоичной записи IP-адреса кратно 5?
'''
from ipaddress import *
net = ip_network('112.160.0.0/255.240.0.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 5 == 0:
        cnt += 1
print(cnt)
'''

'''
from ipaddress import *
net = ip_network('112.160.0.0/255.240.0.0', 0)

print(net.num_addresses)  # 1048576 - Сколько в этой сети IP-адресов

cnt = 0
for ip in net:
    cnt += 1
print(cnt)  # 1048576 - Сколько в этой сети IP-адресов
'''


# № 23751 Демоверсия 2026 (Уровень: Базовый)
#
# Адрес сети и широковещательный адрес не могут быть использованы для адресации сетевых устройств.
# Сеть задана IP-адресом одного из входящих в неё узлов 191.128.66.83 и сетевой маской 255.192.0.0.
# Найдите в данной сети наибольший IP-адрес, который может быть назначен компьютеру.
'''
from ipaddress import *
net = ip_network('191.128.66.83/255.192.0.0', 0)
for ip in net:
    print(ip)  # 191.191.255.254
'''
# 191191255254


# № 18928 Новогодний вариант 2025 (Уровень: Базовый)

# IP-адрес сети: 192.168.248.176
# Сетевая маска: 255.255.255.240
# Необходимо узнать, сколько в этой сети IP-адресов, для которых
# количество единиц и нулей в двоичной записи IP-адреса одинаково.
'''
from ipaddress import *
net = ip_network('192.168.248.176/255.255.255.240', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') == s.count('0'):
        cnt += 1
print(cnt)
'''

# Варианты маски сети:
# [Единиц: 0, Нулей: 32] 000000....000
# [Единиц: 1, Нулей: 31] 100000....000
# [Единиц: 2, Нулей: 30] 110000....000
# [Единиц: 3, Нулей: 29] 111000....000
# [Единиц: 4, Нулей: 28] 111100....000
# [Единиц: 5, Нулей: 27] 111110....000
# ....
# [Единиц: 31, Нулей: 1] 111111....110
# [Единиц: 32, Нулей: 0] 111111....111
'''
for mask in range(0, 32+1):
    print(mask)
'''

# № 18955 (Уровень: Средний)
# Два узла, находящиеся в одной сети, имеют IP-адреса 200.154.190.12 и 200.154.184.0.
# Укажите наибольшее возможное количество единиц в маске этой сети.
'''
from ipaddress import *
for mask in range(0, 32+1):
    net1 = ip_network(f'200.154.190.12/{mask}', 0)
    net2 = ip_network(f'200.154.184.0/{mask}', 0)
    if net1 == net2:  # находящиеся в одной сети
        print(mask)
'''


# № 18159 (Уровень: Базовый)
# Для узла с IP-адресом 205.154.212.20 адрес сети равен 205.154.192.0.
# Чему равно наибольшее возможное значение третьего слева байта маски?
'''
from ipaddress import *
for mask in range(0, 32+1):
    net = ip_network(f'205.154.212.20/{mask}', 0)
    if '205.154.192.0' in str(net):
        print(net, mask, net.netmask)
        # 205.154.192.0/18 18 255.255.192.0
        # 205.154.192.0/19 19 255.255.224.0
'''


# № 17972 (Уровень: Базовый)
# Сеть задана IP-адресом 123.222.111.192 и маской сети 255.255.255.248.
# Сколько в этой сети IP-адресов, для которых
# количество нулей в двоичной записи четвертого
# байта IP-адреса не делится без остатка на 3?
'''
from ipaddress import *
net = ip_network('123.222.111.192/255.255.255.248', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    print(ip, s)
    print(s[:8], s[8:16], s[16:24], s[24:])
    print('-----------')
    if s[24:].count('0') % 3 != 0:
        cnt += 1
print(cnt)
'''



# № 16324 Открытый вариант 2024 (Уровень: Базовый)
# Сеть задана IP-адресом 122.159.136.144 и маской сети 255.255.255.248.
# Сколько в этой сети IP-адресов, для которых количество
# единиц в двоичной записи IP-адреса не кратно 4?
'''
from ipaddress import *
net = ip_network('122.159.136.144/255.255.255.248', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 4 != 0:
        cnt += 1
print(cnt)
'''


# № 15326 Досрочная волна 2024 (Уровень: Базовый)
# Сеть задана IP-адресом 105.224.200.224 и сетевой маской 255.255.255.224.
# Сколько в этой сети IP-адресов,
# для которых количество единиц в двоичной записи IP-адреса кратно 4?
'''
from ipaddress import *
net = ip_network('105.224.200.224/255.255.255.224', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 4 == 0:
        cnt += 1
print(cnt)
'''


# № 14948 (Уровень: Базовый)
# Сеть задана IP-адресом 192.168.32.128 и маской сети 255.255.255.192.

# Сколько в этой сети IP-адресов, для которых
# сумма единиц в двоичной записи IP-адреса чётна?
'''
from ipaddress import *
net = ip_network('192.168.32.128/255.255.255.192', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 2 == 0:
        cnt += 1
print(cnt)
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 13, 14]
# КЕГЭ = []
# на следующем уроке:
