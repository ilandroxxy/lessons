# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************

# –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
'''
a = 5  # int (integer) - —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
print(4 + 5, type(4 + 5))  # 9 <class 'int'>

b = 5.0  # float (—á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π) - –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–¥—Ä–æ–±–∏)
print(4 / 2, type(4 / 2))  # 2.0 <class 'float'>

c = '5'  # str (string) - —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Å–∏–º–≤–æ–ª—ã, –±—É–∫–≤—ã, —Å–ª–æ–≤–∞, —Ç–µ–∫—Å—Ç –∏ —Ç–¥
print(a * 4, c * 4)  # 20 5555

print('Hello ' * 4)  # Hello Hello Hello Hello
# –ü—Ä–∏ —É–º–Ω–æ–∂–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, —Å—Ç—Ä–æ–∫–∞ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è
print('Hello, ' + 'world!')
# –°—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –º–µ–∂–¥—É —Å–æ–±–æ–π –∫–æ–Ω–∫–∞—Ç–µ–Ω–∏—Ä–æ–≤–∞—Ç—å (—Å–∫–ª–µ–∏–≤–∞—Ç—å)

d0 = False  # bool (Boolean) - —ç–ª–µ–º–µ–Ω—Ç—ã –ë—É–ª–µ–≤–æ–π –∞–ª–≥–µ–±—Ä—ã (–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ª–æ–≥–∏–∫–∞)
d1 = True
print(4 % 2 == 0)  # True
print('3' not in '02468')  # True

n = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
if n % 2 == 0:
    print('–ß–µ—Ç–Ω–æ–µ')
else:
    print('–ù–µ—á–µ—Ç–Ω–æ–µ')
'''


# –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π)
'''
A = [1, 2, 3]   # list (—Å–ø–∏—Å–æ–∫)
# 1. –ú–æ–≥—É —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –¥–∞–Ω–Ω—ã—Ö, –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤ (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –º–∞—Å—Å–∏–≤–∞)
# 2. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä - –∏–Ω–¥–µ–∫—Å
# 3. –ò–Ω–¥–µ–∫—Å—ã –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å 0 –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å -1
# 4. –ò—Å–ø–æ–ª—å–∑—É—è –∏–Ω–¥–µ–∫—Å—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º—ã –º–æ–∂–µ–º –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö


# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(M[0], M[-1])  # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ú
M[0], M[-1] = 'A', 'E'
print(M)  # ['A', 'b', 'c', 'd', 'E']


B = (1, 2, 3)  # tuple (–∫–æ—Ä—Ç–µ–∂)
# 1. –ü–æ—á—Ç–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–¥–µ–Ω—Ç–∏—á–µ–Ω —Å–ø–∏—Å–∫–∞–º, –Ω–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ä—Ç–µ–∂–∞

C = {1, 2, 3}  # set (–º–Ω–æ–∂–µ—Å—Ç–≤–æ)
# 1. –í –º–Ω–æ–∂–µ—Å—Ç–≤–∞—Ö –Ω–µ –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–ø–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç–æ –µ—Å—Ç—å
# –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤–∞ - —Ä–∞–∑–ª–∏—á–Ω—ã–µ

print({1, 2, 3, 3, 4})  # {1, 2, 3, 4}
'''


'''
M = [2, 2.0, '2', True, 2+2, 4/2, '2'*2, 2 != 4, [1, 2, 3], (1, 2, 3), {1, 2, 3}]
for elem in M:
    print(type(elem), elem)
    # <class 'int'> 2
    # <class 'float'> 2.0
    # <class 'str'> 2
    # <class 'bool'> True
    # <class 'int'> 4
    # <class 'float'> 2.0
    # <class 'str'> 22
    # <class 'bool'> True
    # <class 'list'> [1, 2, 3]
    # <class 'tuple'> (1, 2, 3)
    # <class 'set'> {1, 2, 3}
'''


# –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>
# ValueError: invalid literal for int() with base 10: '5.0'

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>


a = int(a)
print(a, type(a))  # 5 <class 'int'>


A = [1, 2, 2, 3, 3, 4]
print(A, type(A))  # [1, 2, 2, 3, 3, 4] <class 'list'>

A = tuple(A)
print(A, type(A))  # (1, 2, 2, 3, 3, 4) <class 'tuple'>

A = set(A)
print(A, type(A))  # {1, 2, 3, 4} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3, 4] <class 'list'>

A = list(A)
print(A, set(A))  # [1, 2, 3, 4] {1, 2, 3, 4}
'''


# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
'''
s = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ')  # 56
print(s, type(s))  # 56 <class 'str'>

x = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
print(x, type(x))  # 56 <class 'int'>
# ValueError: invalid literal for int() with base 10: 'ergegrre'
'''


# –†–∞–±–æ—Ç–∞ —Å f-—Å—Ç—Ä–æ–∫–∞–º–∏
'''
weather = '–æ–±–ª–∞—á–Ω–æ'
temperature = int(input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: '))
# "–°–µ–≥–æ–¥–Ω—è –æ–±–ª–∞—á–Ω–æ, –∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ 24 –≥—Ä–∞–¥—É—Å–∞!"
print("–°–µ–≥–æ–¥–Ω—è ", weather, ", –∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ", temperature, " –≥—Ä–∞–¥—É—Å–∞!")
print("–°–µ–≥–æ–¥–Ω—è " + weather + ", –∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(temperature) + " –≥—Ä–∞–¥—É—Å–∞!")
print("–°–µ–≥–æ–¥–Ω—è {}, –∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {} –≥—Ä–∞–¥—É—Å–∞!".format(weather, temperature))
print(f"–°–µ–≥–æ–¥–Ω—è {weather}, –∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {temperature} –≥—Ä–∞–¥—É—Å–∞!")
'''


# –ë–∞–∑–æ–≤–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ –≤ python
'''
a, b = 7, 2
print(f'{a} + {b} = {a+b} \n'  # \n - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É 
      f'{a} - {b} = {a-b} \n'
      f'{a} * {b} = {a*b}')

# print(a * b)  # 14
print()  # –≤ –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ print() –µ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É '\n'


print(f'{a} / {b} = {a/b} \n'   # 3.5 - –û–±—ã—á–Ω–æ–µ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ (–¥—Ä–æ–±–∏)
      f'{a} // {b} = {a//b} \n'  # 3 - –¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ, —Ç–æ –µ—Å—Ç—å –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ü–µ–ª—É—é —á–∞—Å—Ç—å 
      f'{a} % {b} = {a%b}')  # 1 - –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è (–æ—Ç –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞)  3 —Ü–µ–ª—ã—Ö (1/2)

n = 123
print(n % 10)  # 3 - —Ç–∞–∫ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É —á–∏—Å–ª–∞
print(n % 100)  # 23 - —Ç–∞–∫ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –¥–≤–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ü–∏—Ñ—Ä—ã —á–∏—Å–ª–∞

n = -123
print(n % 10)  # 7
print(n % 100)  # 77 - –Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏

n = -123
print(abs(n) % 10)  # 3
# abs() - –≤–∑—è—Ç–∏–µ –º–æ–¥—É–ª—è –æ—Ç —á–∏—Å–ª–∞


n = 1243  # –¥–ª–∏–Ω–∞ (–∫–æ–ª-–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤ 4)
print(len(str(n)))
# len() –≤–∑—è—Ç–∏–µ –¥–ª–∏–Ω—ã/–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ/—Å–ø–∏—Å–∫–µ/–∫–æ—Ä—Ç–µ–∂–µ

n = -1243  # –¥–ª–∏–Ω–∞ (–∫–æ–ª-–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤ 5)
print(len(str(n)))  # 5
print(len(str(abs(n))))  # 4

print()

print(f'–í–æ–∑–≤–µ–¥–µ–º —á–∏—Å–ª–æ {a} –≤ —Å—Ç–µ–ø–µ–Ω—å {b}: {a} ** {b} = {a ** b}')
# –í–æ–∑–≤–µ–¥–µ–º —á–∏—Å–ª–æ 7 –≤ —Å—Ç–µ–ø–µ–Ω—å 2: 7 ** 2 = 49


from math import sqrt
print(f'–í–æ–∑—å–º–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –æ—Ç —á–∏—Å–ª–∞ 16: {sqrt(16)}')
# –í–æ–∑—å–º–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –æ—Ç —á–∏—Å–ª–∞ 16: 4.0

print(f'–í–æ–∑—å–º–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –æ—Ç —á–∏—Å–ª–∞ 16: {16 ** (1/2)}')
# –í–æ–∑—å–º–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –æ—Ç —á–∏—Å–ª–∞ 16: 4.0

print(f'–í–æ–∑—å–º–µ–º –∫—É–±–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–µ–Ω—å –æ—Ç —á–∏—Å–ª–∞ 27: {27 ** (1/3)}')
# –í–æ–∑—å–º–µ–º –∫—É–±–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–µ–Ω—å –æ—Ç —á–∏—Å–ª–∞ 27: 3.0
'''


# –û–±—É—Å–¥–∏–º –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏
'''
import math  # –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –Ω–æ –≤–µ–∑–¥–µ –ø—Ä–∏–¥–µ—Ç—Å—è —Ç–∞—Å–∫–∞—Ç—å math.
print(math.factorial(5))  # 120
print(math.sqrt(16))  # 4.0

import math as m  # –ö–æ—Ä–æ—Ç–∫–∏–π —Å–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∏–º–µ–Ω–µ–º m
print(m.sqrt(16))  # 4.0

from math import sqrt, factorial, fmod  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
print(sqrt(16))  # 4.0

from math import *  # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ä–∞–∑—É –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
print(sqrt(16))  # 4.0
print(factorial(5))  # 120
'''

# üìå –°–ø–∏—Å–æ–∫ –ø–æ–ª–µ–∑–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–∏ –ï–ì–≠ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ! #tpy #useful


# 1‚É£ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —á–µ—Ä–µ–ø–∞—à–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è 6 –Ω–æ–º–µ—Ä–∞ –∫–æ–¥–æ–º:
'''
import turtle as t

t.tracer(0)

size = 40
for i in range(4):
    t.fd(10 * size)  # t.bk(10)
    t.rt(90)  # t.lt(90)

t.up()
t.down()

x, y = 0, 0
t.goto(x, y)
t.dot(2, 'red')

t.done()
'''

# 2‚É£ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ itertools –¥–ª—è —Ä–µ—à–µ–Ω–∏—è 1, 8, 9, 12, 24 –Ω–æ–º–µ—Ä–æ–≤ –∫–æ–¥–æ–º:
'''
from itertools import product, permutations

combinations = list(product([1, 2, 3], repeat=2))
for combination in combinations:
    print(combination)
    # (1, 1)
    # (1, 2)
    # (1, 3)
    # (2, 1)
    # (2, 2)
    # (2, 3)
    # (3, 1)
    # (3, 2)
    # (3, 3)

perms = list(permutations("abc", r=2))
for perm in perms:
    print(''.join(perm))
    # abc
    # acb
    # bac
    # bca
    # cab
    # cba
'''

# 3‚É£ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ ipaddress –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ 13 –Ω–æ–º–µ—Ä–∞:
'''
from ipaddress import *
net = ip_network('–∞–¥—Ä–µ—Å —É–∑–ª–∞/–º–∞—Å–∫–∞', 0)
print(net, net.netmask, net.num_addresses)
'''

# 4‚É£ –î–≤–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è 16 –Ω–æ–º–µ—Ä–∞:
'''
# –û–¥–Ω–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≥–ª—É–±–∏–Ω—É —Ä–µ–∫—É—Ä—Å–∏–∏:
import sys
sys.setrecursionlimit(10000)


# –í—Ç–æ—Ä–∞—è —É—Å–∫–æ—Ä—è–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:
from functools import *
@lru_cache(None)
def F(n):
 '''


# 5‚É£ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ fnmatch –¥–ª—è —Ä–µ—à–µ–Ω–∏—è 25 –Ω–æ–º–µ—Ä–∞ —Å –º–∞—Å–∫–∞–º–∏:
'''
from fnmatch import fnmatch
if fnmatch('123', '*?3'):
    pass
'''

# 6‚É£ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ string —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
'''
import string
alphabet = string.ascii_uppercase
print(alphabet)  # ABCDEFGHIJKLMNOPQRSTUVWXYZ

print(string.punctuation)
# !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~

alphabet = string.digits + string.ascii_uppercase
print(alphabet)  # 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
print(alphabet[:16])  # 0123456789ABCDEF
'''

# 7‚É£ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ math —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:
'''
import math as m
print(m.sqrt(16))
print(m.ceil(7/2))

print(round(5.5))  # 6 - –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –ø–æ –º–∞—Ç–µ–º–∞–∫—Ç–∏–∫–µ
print(m.floor(5.5))  # 5 - –æ–∫—Ä—É–≥–ª—è–µ—Ç –≤–Ω–∏–∑
print(m.ceil(5.2))  # 6 - –æ–∫—Ä—É–≥–ª—è–µ—Ç –≤–≤–µ—Ä—Ö
'''

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = []
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
