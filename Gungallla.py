# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************

# i  01234
s = 'abcde'
'''
print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–æ–∫–∏ s: {s[0]}')
print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–æ–∫–∏ s: {s[-1]}')

# –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–æ–∫–∏ s: a
# –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–æ–∫–∏ s: e

for x in s:
    print(x, end=' ')  # a b c d e
print()


for i in range(len(s)):
    print(s[i], end=' ')
print()  # a b c d e

# –°—Ç—Ä–æ–∫–∏ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–ø–∏—Å–∫–æ–≤ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –≤ –º–æ–º–µ–Ω—Ç–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å –∏—Ö


s = '12321'  # –ø–∞–ª–∏–Ω–¥—Ä–æ–º
if s == s[::-1]:
    print('–ø–∞–ª–∏–Ω–¥—Ä–æ–º')
else:
    print('–Ω–µ—Ç')


s = '12321'  # 3 –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ 000
s = s[:2] + '000' + s[3:]
print(s)  # 1200021
'''

# –°—Ä–µ–∑—ã —Å—Ç—Ä–æ–∫ —Ç–∞–∫–∏–µ –∂–µ –∫–∞–∫ –∏ —É —Å–ø–∏—Å–∫–æ–≤
'''
# i  01234
s = 'abcde'

print(s[2:4])  # cd
print(s[:4])  # abcd
print(s[2:])  # cde
print(s[0::2])  # ace
print(s[1::2])  # bd
print(s[::-1])  # edcba
print(s[1:-1])  # bcd
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫
'''
s = '23121321321'
# print(sum(s)) - –Ω–µ—Ç —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
print(len(s))  # - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ s
print(min(s), max(s))  # 1 3
print(sorted(s))  # ['1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '3']
print(sorted(s, reverse=True))  # ['3', '3', '3', '2', '2', '2', '2', '1', '1', '1', '1']


alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
print(alphabet)  # ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']

print(set(s))  # {'1', '3', '2'}
'''

# üêç –í—Å–µ –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠¬†#tpy¬†



# 2‚É£ .lower() –∏ .upper()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä —Å—Ç—Ä–æ–∫–∏. lower() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, –∞ upper() ‚Äì –≤ –≤–µ—Ä—Ö–Ω–∏–π.
'''
text = "–ü—Ä–ò–≤–ï—Ç"
print(text.lower()) # "–ø—Ä–∏–≤–µ—Ç"
print(text.upper()) # "–ü–†–ò–í–ï–¢"
'''


# 3‚É£ .replace()
# –ú–µ—Ç–æ–¥ replace(old, new, count) –∑–∞–º–µ–Ω—è–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É old –Ω–∞ new –≤ —Å—Ç—Ä–æ–∫–µ count —Ä–∞–∑.
'''
text = "–Ø –ª—é–±–ª—é Python!"
new_text = text.replace("Python", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
print(new_text) # "–Ø –ª—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ!"


s = '123213123123'
s = s.replace('1', '*', 3)
print(s)  # *232*3*23123
'''


# 4‚É£  .split()
# –ú–µ—Ç–æ–¥ split(separator) —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é. –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–±–µ–ª.
'''
text = "—è–±–ª–æ–∫–æ –≥—Ä—É—à–∞ –±–∞–Ω–∞–Ω"
fruits = text.split() # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑–¥–µ–ª—è–µ—Ç –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
print(fruits) # ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']


ip = '123.45.234.9'
print(ip.split('.'))  # ['123', '45', '234', '9']
'''


# 5‚É£ .join()
# –ú–µ—Ç–æ–¥ join(iterable) —Å–æ–µ–¥–∏–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ (–∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞) –≤ —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º.
'''
fruits = ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']
result = ', '.join(fruits)
print(result)  # "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, –±–∞–Ω–∞–Ω"

ip = ['123', '45', '234', '9']
print('|'.join(ip))  # 123|45|234|9
'''


# 6‚É£ .find()
# –ú–µ—Ç–æ–¥ find(substring) –∏—â–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–µ—Ä–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞. –ï—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1.
'''
text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
index = text.find("–º–∏—Ä")
print(index) # 8

text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
index = text.index("–º–∏—Ä")
print(index) # 8


text = "21332132123121"
index_l = text.find("1")
index_r = text.rfind("1")
print(index_l, index_r) # 8

text = "21332132123121"
index_l = text.index("1")
index_r = text.rindex("1")
print(index_l, index_r) # 8
'''


# 7‚É£ .count()
# –ú–µ—Ç–æ–¥ count(substring) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É.
'''
text = "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, —è–±–ª–æ–∫–æ"
count = text.count("—è–±–ª–æ–∫–æ")
print(count) # 2
'''


# 8‚É£ .startswith() –∏ .endswith()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –µ—é.
'''
text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
print(text.startswith("–ü—Ä–∏–≤–µ—Ç"))  # True
print(text.endswith("–º–∏—Ä!"))  # True
'''

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = [2, 6]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
