# region Домашка: ******************************************************************

# № 5627 (Уровень: Средний)
# Опеделите количество строк таблицы, содержащих числа,
# для которых выполнено хотя бы одно из условий:

# – в строке есть хотя бы одно повторяющееся число;
# – будучи упорядоченными, все числа строки образуют арифметическую прогрессию.
'''
k = 0
for s in open('files/9.csv'):
    flag = 0
    a = [int(x) for x in s.split(',')]
    a = sorted(a)
    if len(set(a)) != len(a):
        flag += 1
    if (a[5] - a[4] == a[4] - a[3] == a[3] - a[2] == a[2] - a[1] == a[1] - a[0]):
        flag += 1
    if flag >= 1:
        k += 1
print(k)
'''

'''
k = 0
for s in open('files/9.csv'):
    a = [int(x) for x in s.split(',')]
    copied1 = [x for x in a if a.count(x) > 1]
    s = sorted(a)
    if len(copied1) > 0 or (s[5] - s[4] == s[4] - s[3] == s[3] - s[2] == s[2] - s[1] == s[1] - s[0]):
        k += 1
print(k)
'''

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


# № 23764 Демоверсия 2026 (Уровень: Базовый)
# – символ «?» означает ровно одну произвольную цифру;
# – символ «*» означает любую последовательность цифр произвольной длины;
# в том числе «*» может задавать и пустую последовательность.

# Среди натуральных чисел, не превышающих 10**10,
# найдите все числа, соответствующие маске 3?12?14*5, делящиеся на 1917 без остатка.

# В ответе запишите в первом столбце таблицы все найденные числа
# в порядке возрастания, а во втором столбце – соответствующие им
# результаты деления этих чисел на 1917.
'''
from fnmatch import *
for i in range(1917, 10**10, 1917):
    if fnmatch(str(i), '3?12?14*5'):
        print(i, i//1917)

'''


# № 23763 Демоверсия 2026 (Уровень: Базовый)
# Пусть M – сумма минимального и максимального натуральных делителей
# целого числа, не считая единицы и самого числа.

# Напишите программу, которая перебирает целые числа, бо́льшие 800 000,
# в порядке возрастания и ищет среди них такие, для которых M оканчивается на 4.

# В ответе запишите в первом столбце таблицы первые пять найденных чисел
# в порядке возрастания, а во втором столбце – соответствующие им значения M.

'''      
def d(x):
    a=[]
    for i in range(2, int(x**0.5)+1):
        if x%i==0:
            a+=[i, x//i]
    return sorted(set(a))

k=0
for i in range(800_001, 10**10):
    a=d(i)
    if len(a)>=2:
        M=min(a)+max(a)
        if str(M)[-1]=='4':
            if k!=5:
                print(i, M)
                k+=1
                if k==5:
                    break
'''

# № 23282 Основная волна 11.06.25 (Уровень: Средний)

# Пусть М - сумма минимального и максимального простых натуральных делителей
# целого числа, не считая самого числа.
# Напишите программу, которая перебирает целые числа, большие 5 400 000,
# в порядке возрастания и ищет среди них такие, для которых М больше 60 000
# и является палиндромом,

# В ответе запишите в первом столбце
# таблицы первые  пять найденных чисел в порядке возрастания,
# а во втором столбце - соответствующие им значения М.
'''
def prime(x):
    if x <= 1:
        return False
    for i in range(2, int(x**0.5)+1):
        if x % i == 0:
            return False
    return True
    

def d(x):
    a=[]
    for i in range(2, int(x**0.5)+1):
        if x%i==0:
            a+=[i, x//i]
    return sorted(set(a))
k=0
for i in range(5400001, 10**10):
    a=[j for j in d(i) if prime(j) == True]
    if len(a)>0:
        M=min(a)+max(a)
        if M>60000:
            if str(M)[::-1] == str(M):
                print(i, M)
                k += 1
                if k==5:
                    break
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 23, 25]
# КЕГЭ  = []
# на следующем уроке: 19-21
