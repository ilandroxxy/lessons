# region Домашка: ******************************************************************

# № 4196 (Уровень: Базовый)
'''
def F(x, A):
    return ((x % 3 == 0) <= (x % 5 != 0)) or (x+A >= 90)

for A in range(1, 100):
    if all(F(x, A) for x in range(1, 10000)):
        print(A)
        break
'''

'''
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) + 3 * G(n - 1)
def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) - 2 * G(n - 1)


summa = sum([int(x) for x in str(F(18))])
print(summa)
'''

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


# № 17562 Основная волна 08.06.24 (Уровень: Базовый)
# У исполнителя есть три команды, которым присвоены номера:
# A. Прибавить 1
# B. Прибавить 2
# C. Прибавить 3

# Сколько существует программ, которые преобразуют число 5 в число 11,
# и при этом траектория вычислений содержит число 7?
'''
def F(a, b):  # a - start, b - stop
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a+3, b)

print(F(5, 7) * F(7, 11))



def F(a, b):  # a - start, b - stop
    if a >= b:
        return a == b
    return F(a+1, b) + F(a+2, b) + F(a+3, b)

print(F(5, 7) * F(7, 11))
'''


# № 17640 Основная волна 19.06.24 (Уровень: Базовый)
'''
# У исполнителя есть две команды, которые обозначены латинскими буквами:
# A. Вычти 2
# B. Найти целую часть от деления на 2
#
# Сколько существует программ, для которых при исходном числе 32 результатом является число 1
# и при этом тракетория вычислений содержит число 14?


def F(a, b):
    if a <= b:
        return a == b
    return F(a - 2, b) + F(a // 2, b)

print(F(32, 14) * F(14, 1))
'''


# № 16387 ЕГКР 27.04.24 (Уровень: Базовый)
# У исполнителя есть три команды, которым присвоены номера:
# A. Прибавить 1
# B. Прибавить 2
# C. Умножить на 3
#
# Сколько существует программ, для которых при исходном числе 2 результатом является число 18,
# и при этом траектория вычислений содержит число 9 и не содержит числа 16?
'''
def F(a, b):
    if a <= b or a == 16:
        return a == b
    return F(a, b) + F(a, b) + F(a, b)


print(F(2, 9) * F(9, 18))
'''


# № 17781 (Уровень: Сложный)
# A. Прибавить 1
# B. Прибавить сумму всех делителей
#
# Первая команда увеличивает число на 1, вторая – увеличивает
# число на сумму всех его натуральных делителей (включая 1 и само число).
# Сколько существует программ, для которых при исходном числе
# 2 результатом является число 62?
'''
def divisors(x):
    div = []
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))


def F(a, b):
    if a >= b:
        return a == b
    return F(a+1, b) + F(a + sum(divisors(a)), b)

print(F(2, 62))
'''
'''
def sumdiv(n):
    return sum([j for j in range(1, n + 1) if n % j == 0])


def F(a, b):
    if a >= b:
        return a == b
    return F(a + 1, b) + F(a + sumdiv(a), b)


print(F(2, 62))
'''


# № 11240 (Уровень: Средний)
# У исполнителя есть три команды, которые обозначены латинскими буквами:
# A. Прибавить 2
# B. Возвести в квадрат
# C. Умножить на 3

# Сколько существует программ, для которых при исходном числе 2 результатом является
# число 64, если после выполнения команды B можно выполнить только команду A или C?
'''
def F(a, b, c):
    if a >= b:
        return a == b
    if c == 'B':
        return F(a + 2, b, 'A') + F(a * 3, b, 'C')
    return F(a+2, b, 'A') + F(a**2, b, 'B') + F(a*3, b, 'C')

print(F(2, 64, ''))
'''


# № 10027 (Уровень: Базовый)
# У исполнителя есть три команды, которым присвоены номера:
# A. Прибавить 2
# B. Прибавить 3
# C. Умножить на 2
# Сколько существует программ, для которых при исходном числе 5
# результатом является число 30, а первая в них команда - A или B?
'''
def F(a, b, c):
    if a >= b:
        return a == b and c[0] in 'AB'
    return F(a+2, b, c+'A') + F(a+3, b, c+'B') + F(a*2, b, c+'C')


print(F(5, 30, ''))
'''



# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# todo Разобрать № 4333 Пробный 06.2022 /dev/inf advanced (Уровень: Средний)
# У исполнителя есть три команды, которым присвоены номера:
# 1. Прибавить 1
# 2. Прибавить 3
# 3. Возвести в квадрат

# Известно, что исполнитель не может повторить команду,
# выполненную на предыдущем шаге.
#
# Сколько существует программ, для которых при исходном числе 1 результатом
# является число 25, и при этом траектория вычислений содержит число 5,
# но не содержит число 6?
'''
def F(a, b, c):
    if a >= b or a == 6:
        return a == b
    if c == '1':
        return F(a + 3, b, '2') + F(a ** 2, b, '3')
    if c == '2':
        return F(a + 1, b, '1') + F(a ** 2, b, '3')
    if c == '3':
        return F(a + 1, b, '1') + F(a + 3, b, '2')
    return F(a + 1, b, '1') + F(a + 3, b, '2') + F(a ** 2, b, '3')


print(F(1, 5, '') * F(5, 25, ''))
'''

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 15, 16, 23, 25]
# КЕГЭ  = []
# на следующем уроке:
