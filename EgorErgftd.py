# region Домашка: ******************************************************************

# № 16372 ЕГКР 27.04.24 (Уровень: Базовый)
'''
import turtle as t
t.tracer(0)  # Отключает анимацию отрисовки
t.lt(90)
t.down()
l = 15

# Тут пишем псевдокод
for _ in range(2):
    t.fd(23*l)
    t.lt(90)
    t.bk(27*l)
    t.lt(90)

t.up()
t.bk(5*l)
t.rt(90)
t.fd(11*l)
t.lt(90)
t.down()

for _ in range(2):
    t.fd(26*l)
    t.rt(90)
    t.fd(32*l)
    t.rt(90)

t.up()
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x*l, y*l)
        t.dot(3, 'red')
t.update()
t.done()
'''

# print(17*2 + 11*24 + 33*27)

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес узла: 199.145.130.81
# Маска: 255.255.128.0

# Адрес сети = IP-адрес узла & Маска сети

# IP адрес состоит из 4 числе, на каждое из которых выделяется по 1 байту (8 бит)
# Эти числа могут принимать значения от 0 до 255, 11111111_2 = 255_10
'''
# Длина маски сети 32 бита, а так же она принимает вид: 1111111...0000
a = f'{255:b}'.zfill(8)
b = f'{255:b}'.zfill(8)
c = f'{128:b}'.zfill(8)
d = f'{0:b}'.zfill(8)
print(f'{a}.{b}.{c}.{d}')
# 11111111.11111111.10000000.00000000
'''

# Тип 13 №9164
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес узла: 199.145.130.81
# Маска: 255.255.128.0
'''
from ipaddress import *
net = ip_network('199.145.130.81/255.255.128.0', 0)
print(net)  # 199.145.128.0/17 - 17 это кол-во единиц в маске сети
# 11111111.11111111.10000000.00000000
'''


# Тип 13 №9304
# Для узла с IP-адресом 227.138.127.144 адрес сети равен 227.138.64.0.
# Чему равен третий слева байт маски? Ответ запишите в виде десятичного числа.

'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'227.138.127.144/{mask}', 0)
    print(net, net.netmask)
    # 227.138.64.0/18 255.255.192.0
'''

'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'227.138.127.144/{mask}', 0)
    if str(net) == f'227.138.64.0/{mask}':
        print(net, net.netmask)
'''
# 192


# Тип 13 №60255
# Сеть задана IP-адресом 192.168.32.160 и маской сети 255.255.255.240.
# Сколько в этой сети IP-адресов, для которых сумма единиц в двоичной записи IP-адреса чётна?
'''
from ipaddress import *
net = ip_network('192.168.32.160/255.255.255.240', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 2 == 0:
        cnt += 1
print(cnt)
'''


# Тип 13 №18624
# Узлы с IP-адресами 98.162.78.139 и 98.162.78.154 находятся в одной сети.
# Чему равно наибольшее количество возможных единиц в маске этой сети?
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'98.162.78.139/{mask}', 0)
    net2 = ip_network(f'98.162.78.154/{mask}', 0)
    if net1 == net2:
        print(net2.netmask, mask, 32-mask)
'''


#  № 11662 (Уровень: Базовый)
'''
from ipaddress import *
net = ip_network('123.222.111.192/255.255.255.248', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s[24:].count('1') % 3 != 0:
        cnt += 1
print(cnt)
'''

'''
from ipaddress import *
net = ip_network('151.192.0.0/255.224.0.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('0') == s.count('1'):
        cnt += 1
print(cnt)


from ipaddress import *
net = ip_network('214.96.0.0/255.240.0.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('0') % 3 == 0:
        cnt += 1
print(cnt)
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14]
# КЕГЭ  = []
# на следующем уроке:
