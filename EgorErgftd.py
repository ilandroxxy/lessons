# region Домашка: ******************************************************************
'''
from math import prod
M = [int(x) for x in input()]
print(prod(M))
print(sum(M))
'''
# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Условные операторы if, elif, else

# x, y = int(input('x: ')), int(input('y: '))
'''
x, y = 6, 7
if x > 0 and y > 0:  # if - если
    print('Первая четверть')
elif x < 0 and y > 0:  # elif - иначе если
    print('Вторая четверть')
elif x < 0 and y < 0:
    print('Третья четверть')
elif x > 0 and y < 0:
    print('Четвертая четверть')
else:  # else - иначе
    print('Точка лежит на оси(ях)')
print('КОНЕЦ')
'''

'''
x, y = int(input('x: ')), int(input('y: '))
if x > 0:
    if y > 0:  # x > 0, y > 0
        print('Первая четверть')
    else:  # x > 0, y <= 0
        print('Четвертая четверть')
else:
    if y > 0:  # x <= 0, y > 0
        print('Вторая четверть')
    else:  # x <= 0, y <= 0
        print('Третья четверть')
'''


# Логические связки: and, or, not, ^, ==, !=
'''
a, b = 7, -4
if a > 0 and b > 0:  # and - гарантирует, что оба верные
    print('YES 1')
if a > 0 or b > 0:  # or - хотя бы одно из условий истинно
    print('YES 2')
if (a > 0) ^ (b > 0):  # ^ - только одно из условий верно 
    print('YES 3')
'''

'''
print(14 and 5)  # 5 - конъюнкция
print(14 & 5)   # 4 - операция побитовой конъюнкции
print(bin(14)[2:])
print(bin(5)[2:])
'''


# Найдите кол-во и максимальную сумму троек, в которых только лишь два элемента двузначные
'''
M = [[1123, 43, 534], [213, 43, 56], [243, 23, 12], [1232, 432, 234]]
R = []
for troika in M:
    x, y, z = troika
    if (len(str(x)) == 2) + (len(str(y)) == 2) + (len(str(z)) == 2) == 2:
        R.append(x + y + z)
print(len(R), max(R))


M = [[1123, 43, 534], [213, 43, 56], [243, 23, 12], [1232, 432, 234]]
R = []
for troika in M:
    x, y, z = troika
    if len([p for p in (x, y, z) if len(str(p)) == 2]) == 2:
        R.append(x + y + z)
print(len(R), max(R))
'''


# Импортирование библиотек в Python
'''
import useful   # любая библиотека это просто .py файл
print(useful.orel_or_reshka())
'''

# Как обращаться к библиотекам:
'''
import math
print(math.sqrt(16))

import math as m  # переименовываю библиотеку
print(m.sqrt(16))

from math import sqrt, prod, ceil, lcm  # импортирует только выбранные функции
print(sqrt(16))

from math import *  # импортирует сразу все функции
print(sqrt(16))
'''
# Через сочетание клавиш ctrl + B можно посмотреть описание функции и содержимое библиотеки.


# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ  = []
# на следующем уроке:
