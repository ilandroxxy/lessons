# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Три прототипа для решения

# Тип 24 №27691
# Определите максимальное количество идущих
# подряд символов A.
'''
# Вариант 1 - через поиск
s = open('0. files/24.txt').readline()
# print(s)  # воспользоваться ctrl + F
# BBBBACAAAAAAACBB - длина подстроки 7

# Вариант 2 - ака 17 номер (через пары)
s = open('0. files/24.txt').readline()
count = 1  # длина промежуточных последовательностей
maxi = 0  # длина самой длинной последовательности
for i in range(len(s) - 1):
    # if s[i] == 'A' and s[i+1] == 'A':
    if s[i:i+2] == 'AA':
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)


# Вариант 3 - через замену
s = open('0. files/24.txt').readline()
s = s.replace('B', 'C').replace('C', ' ')
print(max([len(x) for x in s.split()]))
'''


# Тип 24 №59817
# Определите максимальное количество идущих подряд символов,
# среди которых никакие две буквы из набора букв A, B и C (с учетом повторений) не записаны подряд.
'''
s = open('0. files/24.txt').readline()
s = s.replace('A', 'B').replace('B', 'C').replace('C', '*')
while '**' in s:
    s  = s.replace('**', '* *')

print(max([len(x) for x in s.split()]))

'''


# Тип 24 №36037
# Определите максимальное количество идущих подряд
# символов, среди которых нет подстроки XZZY.
'''
s = open('0. files/24.txt').readline()
s = s.replace('XZZY', 'XZZ ZZY')
print(max([len(x) for x in s.split()]))
'''


# Тип 24 №59848
# Необходимо найти самую длинную подстроку, которая
# может являться числом в 24-ричной системе счисления.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
s = open('0. files/24.txt').readline()
for x in alphabet[24:]:
    s = s.replace(x, ' ')
print(max([len(x) for x in s.split()]))
'''


# Тип 24 №27421
# Определите максимальное количество идущих подряд символов,
# среди которых каждые два соседних различны.
'''
s = open('0. files/24.txt').readline()
count = 1
maxi = 0
for i in range(len(s)-1):
    if s[i] != s[i+1]:
        count += 1
        maxi = max(maxi, count)
    else:
        count = 1
print(maxi)
'''


# Тип 24 №27689
# Определите максимальную длину цепочки вида XYZXYZXYZ...
# (составленной из фрагментов XYZ, последний фрагмент может быть неполным).
'''
s = open('0. files/24.txt').readline()
count = 2
maxi = 0
for i in range(len(s)-2):
    if s[i:i+3] in ('XYZ', 'YZX', 'ZXY'):
        count += 1
        maxi = max(maxi, count)
    else:
        count = 2
print(maxi)
'''


# Тип 24 №68525
# Текстовый файл состоит из заглавных букв латинского алфавита
# Q, R, W и цифр 1, 2, 4. Определите в прилагаемом файле максимальное
# количество идущих подряд символов, среди которых ни одна буква
# не стоит рядом с буквой, а цифра — с цифрой.
'''
s = open('0. files/24.txt').readline()
s = s.replace('1', '2').replace('4', '2')
s = s.replace('Q', 'W').replace('R', 'W')

while 'WW' in s or '22' in s:
    s = s.replace('WW', 'W W').replace('22', '2 2')
print(max([len(x) for x in s.split()]))
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24.1, 25]
# КЕГЭ  = []
# на следующем уроке:


# Первый пробник 21.12.24:
# Егор -
# Михаил 8/18 -> 46 вторичных баллов +[2, 4, 6, 12, 14, 15, 16, 23] -[1, 3, 5, 7, 8, 9, 11, 13, 17, 25]
