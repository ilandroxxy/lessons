# region Домашка: ************************************************************

# № 17633 Основная волна 19.06.24 (Уровень: Базовый)
'''
R = []
for x in range(2030+1):
    n = 6**260 + 6 ** 160 + 6**60 - x
    M = []
    while n > 0:
        M.append(n % 6)
        n //= 6
    M.reverse()
    if M.count(0) == 202:
        R.append(x)
print(min(R))
'''

# endregion Домашка: *********************************************************
#
# #
# region Урок: ************************************************************

# Тип 12 №16890
# Какая строка получится в результате применения приведённой ниже
# программы к строке, состоящей из 85 единиц?

# ПОКА нашлось (11111)
#   заменить (111, 2)
#   заменить (222, 1)
'''
s = '1' * 85
while '11111' in s:
    s = s.replace('111', '2', 1)
    s = s.replace('222', '1', 1)
print(s)  # 211
'''

# № 17675 Пересдача 04.07.24 (Уровень: Базовый)
# Какая строка получится в результате применения приведённой
# ниже программы к строке, состоящей из 134 идущих подряд цифр 9?
# В ответе запишите полученную строку.
#
#   ПОКА нашлось (22222) ИЛИ нашлось (9999)
#     ЕСЛИ нашлось (22222)
#       ТО заменить (22222, 99)
#       ИНАЧЕ заменить (9999, 2)
'''
s = '9' * 134
while '22222' in s or '9999' in s:
    if '22222' in s:
        s = s.replace('22222', '99', 1)
    else:
        s = s.replace('9999', '2', 1)

print(s)
'''


# Тип 12 №27299
# Дана программа для Редактора:
# ПОКА нашлось (111)
#   заменить (111, 2)
#   заменить (222, 11)
#
# К исходной строке, содержащей более 60 единиц и не содержащей
# других символов, применили приведённую выше программу.
# В результате получилась строка 221.
# Какое наименьшее количество единиц могло быть в исходной строке?
'''
R = []
for n in range(61, 1000):
    s = '1' * n
    while '111' in s:
        s = s.replace('111', '2', 1)
        s = s.replace('222', '11', 1)
    if s == '221':
        R.append(n)
        
print(min(R))
'''


# Тип 12 №35986
# Дана программа для редактора:
# ПОКА НЕ нашлось (00)
#   заменить (01, 210)
#   заменить (02, 320)
#   заменить (03, 3012)

# Известно, что исходная строка начиналась с нуля и заканчивалась нулём,
# а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка,
# содержащая 23 единицы, 48 двоек и 41 тройку.
# Сколько цифр было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'
            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '320', 1)
                s = s.replace('03', '3012', 1)
            if s.count('1') == 23 and s.count('2') == 48 and s.count('3') == 41:
                print(x + y + z + 2)
'''

# Тип 12 №55629
# Дана программа для редактора:
# ПОКА НЕ нашлось (00)
#   заменить (02, 101)
#   заменить (11, 2)
#   заменить (12, 21)
#   заменить (010, 00)

# Известно, что исходная строка A содержала
# ровно два нуля — на первом и на последнем месте,
# а также поровну единиц и двоек, при этом всего в строке A было
# более 200 цифр. После выполнения данной программы получилась
# строка B, сумма цифр которой оказалась простым числом.
# Какое наименьшее количество единиц могло быть в строке A?

'''
def prime(n):  # 24 : 2....23
    if n <= 1:
        return False
    for j in range(2, n):
        if n % j == 0:
            return False
    return True


for n in range(100, 1000):
    s = '0' + '1' * n + '2' * n + '0'
    while '00' not in s:
        s = s.replace('02', '101', 1)
        s = s.replace('11', '2', 1)
        s = s.replace('12', '21', 1)
        s = s.replace('010', '00', 1)
    # summa = 0
    # for x in s:
    #     summa += int(x)

    summa = sum([int(x) for x in s])
    if prime(summa):
        print(n)
        break
'''


# Тип 12 №25844
# На вход приведённой ниже программе поступает строка, начинающаяся с символа «>»,
# а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.
#
# Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.
#
# ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)
#    ЕСЛИ нашлось (>1)
#       ТО заменить (>1, 22>)
#    ЕСЛИ нашлось (>2)
#       ТО заменить (>2, 2>)
#    ЕСЛИ нашлось (>3)
#       ТО заменить (>3, 1>)
'''
s = '>' + '1' * 11 + '2' * 12 + '3' * 30
while '>1' in s or '>2' in s or '>3' in s:
    if '>1' in s:
        s = s.replace('>1', '22>', 1)
    if '>2' in s:
        s = s.replace('>2', '2>', 1)
    if '>3' in s:
        s = s.replace('>3', '1>', 1)

# ValueError: invalid literal for int() with base 10: '>'
summa = sum([int(x) for x in s if x.isdigit()])
print(summa)


s = '123f1w24'
summa = sum([int(x) for x in s if x.isdigit()])
print(summa)
'''


# Какая строка получится в результате применения приведённой
# ниже программы к строке вида 1…12…2 (39 единиц и 39 двоек)?

# ПОКА нашлось (111)
#   заменить (111, 2)
#   заменить (222, 1)
'''
s = '1' * 39 + '2' * 39
while '111' in s:
    s = s.replace('111', '2', 1)
    s = s.replace('222', '1', 1)
print(s)  # 12
'''

# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# ФИПИ = [2, 5, 6, 12, 14]
# КЕГЭ = []
# на следующем уроке:
