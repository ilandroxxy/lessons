# region Домашка: ************************************************************

# Решу ЕГЭ № 18483 (Уровень: Базовый)
# Логическая функция F задаётся выражением ((y → w) ≡ (x → ¬z)) ∧ (x ∨ w).
'''
print('x y z w F')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((y <= w) == (x <= (not z))) and (x or w)
                if F == 0:
                    print(x, y, z, w, int(F))


for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((y <= w) == (x <= (not z))) and (x or w)
                if F == 1:
                    print(x, y, z, w, int(F))
'''


# Решу ЕГЭ № 52173 (Уровень: Базовый)
# Логическая функция F задаётся выражением: (z ≡ ¬x) → ((w → ¬y) ∧ (y → x)).
'''
print('x y z w F')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((z == (not x)) <= ((w <= (not y)) and (y <= x)))
                if F == 0:
                    print(x, y, z, w, int(F))


for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((z == (not x)) <= ((w <= (not y)) and (y <= x)))
                if F == 1:
                    print(x, y, z, w, int(F))

'''
# endregion Домашка: *********************************************************
#
# #
# region Урок: ************************************************************

# Тип 6 №47404
# В начальный момент Черепаха находится в начале координат, её голова
# направлена вдоль положительного направления оси ординат, хвост опущен.
# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 4 [Вперёд 10 Направо 90]
# Направо 30
# Повтори 5 [Вперёд 6 Направо 60 Вперёд 6 Направо 120].
'''
import turtle as t  # Переименовали библиотеку в t
t.screensize(-10000, 10000)  # Добавляем масштаб окна, чтобы регулировать его
t.tracer(0)  # Отключает анимацию отрисовки (мгоновенная отрисовка)
t.lt(90)  # t.left(90) - изначально по условию необходимо повернуть голову вверх
l = 20  # Переменная для регулировки масштаба окна

# Тут пишем псевдокод:
for i in range(4):
    t.fd(10 * l)
    t.rt(90)
t.rt(30)
t.color('green')
for i in range(5):
    t.fd(6 * l)
    t.rt(60)
    t.fd(6 * l)
    t.rt(120)

t.up()  # Поднять перо отрисовки (поднять хвост)
for x in range(-50, 50):  # Тут перебираем координаты точек
    for y in range(-50, 50):
        t.goto(x * l, y * l)  # Перемещаемся в конкретную координату
        t.dot(3, 'red')  # Рисуем точку толщины 2 и красного цвета

t.update()  # Необходима для .tracer()
t.done()  # Фиксация окна отрисовки, чтобы оно не закрывалось.
'''


# Тип 6 №59739
# Черепахе был дан для исполнения следующий алгоритм:
#
# Повтори 2 [Вперёд 3 Налево 90 Назад 10 Налево 90]
# Поднять хвост
# Назад 10 Направо 90 Вперед 8 Налево 90
# Опустить хвост
# Повтори 2 [Вперёд 16 Направо 90 Вперёд 8 Направо 90].

import turtle as t
t.screensize(-10000, 10000)
t.tracer(0)
t.lt(90)
l = 40

# Тут пишем псевдокод:
for i in range(2):
    t.fd(3 * l)
    t.lt(90)
    t.bk(10 * l)
    t.lt(90)
t.up()  # t.penup()
t.bk(10 * l)
t.rt(90)
t.fd(8 * l)
t.lt(90)
t.down()  # t.pendown()
for i in range(2):
    t.fd(16 * l)
    t.rt(90)
    t.fd(8 * l)
    t.rt(90)

t.up()
for x in range(-50, 50):  # Тут перебираем координаты точек
    for y in range(-50, 50):
        t.goto(x * l, y * l)  # t.setpos(x * l, y * l)
        t.dot(2, 'red')

t.update()
t.done()



# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# ФИПИ = [2]
# КЕГЭ = []
# на следующем уроке:
