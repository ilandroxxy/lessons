# region Домашка: ************************************************************


# endregion Домашка: *********************************************************
# #
# #
# region Урок: ************************************************************

# 11
# Известно, что для хранения 703 569 серийных номеров доступно не более 77 Мбайт памяти.
'''
sym = 246
byte = (77 * 1024 * 1024) / 703569
print(byte)  # 114.758
byte = 114
bit = byte * 8
print(bit/246)  # 3.707
i = 3   # alp[2**2+1 : 2**3]
'''
# Ответ: 8



# 14
'''
R = []
for x in range(1, 2300+1):
    n = 7**350 + 7**150 - x
    b = 7  # система счисления (основание)
    M = []
    while n > 0:
        M.append(n % b)
        n //= b
    M.reverse()
    if M.count(0) == 200:
        R.append(x)
print(max(R))
'''


#16
'''
import sys
sys.setrecursionlimit(20000)
def F(n):
    if n >= 2025:
        return n
    if n < 2025:
        return (n*2) + F(n+2)
    
print(F(82)-F(81))
'''

'''
1. 37
2. xwzy
3. 6146
4. 6
5. 64
6. 113
7. ?
8. ?
9. ?
10. 39
11. 8
12. 46
13. 9883255254
14. 2001
15. 4
16. 1945
17. ?
18. ?
19. 22
20. 18 21
21. 17
22. 218
23. 360
24.
25. ?
'''


# № 21706 ЕГКР 19.04.25 (Уровень: Базовый)
'''
sym = 119
byte = 23 * 2**20 / 125_300
print(byte)  # 192.476 -> 193
bit = byte * 8
i = bit / sym
print(i)  # 12.939 -> 13

# i = 13 alp[2**12+1 : 2**13]
print(2**12+1)  # 4097
'''


# № 17674 Пересдача 04.07.24 (Уровень: Средний)
'''
alp = 10 + 26 + 450
i = 9  # 2 ** 9 >= 486

byte = 100 * 2**10 / 575
print(byte)  # 178.0869 -> 179
bit = byte * 8
sym = bit / i
print(sym)  # 158.2 -> 159
'''


# № 21702 ЕГКР 19.04.25 (Уровень: Базовый)
'''
pixels = 7680 * 4320
i = 16
v = pixels * i

# card = 9 * 1024 * 1024 * 1024 * 8
card = 9 * 2**33

print(card // v)  # 145 - помещается на одну карту

print(4010 // 145)  # 27 - карт было использовано
print(4010 % 145)  # 95 - сколько фотографий осталось на последней
'''

# № 21406 Досрочная волна 2025 (Уровень: Базовый)
'''
pixels = 3840 * 2160
i = 17
v = pixels * i

pixels2 = 1280 * 720
i2 = 5
v2 = pixels2 * i2


print((v * 120 - v2 * 120) / 2**13)
'''

'''
a = 2
b = 44_000
c = 16
t = 45 * 60
v = a * b * c * t
bit = 55 * 1024 * 8 * 15
print((v + bit)/245_839_600)
# 15.49123
'''


# № 21908 Открытый вариант 2025 (Уровень: Базовый)
'''
from re import *
s = open('0. files/24.txt').readline()
num = r'([1-D][0-D]*[02468AC])'
M = [x.group() for x in finditer(num, s)]
maxi = 0
for x in M:
    print(x)
    maxi = max(maxi, len(x))
print(maxi)
'''

# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# ФИПИ = [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 25]
# КЕГЭ = [5, 8]
# на следующем уроке:


# Второй пробник 10.02.25:
# 7/29 -> 42 вторичных баллов +[1, 4, 6, 12, 14, 15, 16] -[3, 5, 8, 23, 25]
