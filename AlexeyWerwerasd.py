# region Домашка: ************************************************************


# endregion Домашка: *********************************************************
#
# #
# region Урок: ************************************************************

# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1
'''
print(M[0])  # 'a' - Первый элемент списка М
print(M[-1])  # 'e' - Последний элемент списка М

# Срезы - позволяют брать часть последовательности

print(M[2:4])  # ['c', 'd']
print(M[:4])  # ['a', 'b', 'c', 'd'] - Берем все, что слева до 4 индекса (не включая)
print(M[2:])  # ['c', 'd', 'e'] - Берем все, что справа начиная со 2 индекса
print(M[::-1])  # ['e', 'd', 'c', 'b', 'a'] - элементы списка в обратном порядке 
'''


# № 17859 Демоверсия 2025 (Уровень: Базовый)
# Укажите максимальное число R, которое может быть результатом
# работы данного алгоритма, при условии, что N не больше 12.
'''
R = []
for n in range(1, 12+1):
    # s = bin(n)[2:]  # 1. Строится двоичная запись числа N.
    s = f'{n:b}'  # 1. Строится двоичная запись числа N.
    if n % 2 == 0:
        s = '10' + s   # а) если число чётное, то к двоичной записи числа слева дописывается 10;
    else:
        s = '1' + s + '01'  # б) если число нечётное, то к двоичной записи числа слева дописывается 1 и справа дописывается 01.
    r = int(s, 2)  # 3. Результат переводится в десятичную систему и выводится на экран.
    R.append(r)
print(max(R))
'''


# № 17668 Пересдача 04.07.24 (Уровень: Базовый)
# Укажите минимальное число R, которое может быть результатом
# работы данного алгоритма, при условии, что N больше 27.
'''
R = []
for n in range(28, 10000):
    s = f'{n:b}'
    if s.count('1') % 2 == 0:  # если сумма цифр в двоичной записи чётная
        s = '10' + s[2:] + '0'  # то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 10
    else:
        s = '11' + s[2:] + '1'  # то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 11.
    r = int(s, 2)  # Результат переводится в десятичную систему и выводится на экран.
    R.append(r)
print(min(R))
'''


# № 17624 Основная волна 19.06.24 (Уровень: Базовый)
# Укажите минимальное число R, которое превышает число
# 75 и может являться результатом работы данного алгоритма.
'''
R = []
for n in range(1, 10000):
    s = f'{n:b}'
    for i in range(2):  # над этой записью производятся те же действия — справа дописывается остаток от деления суммы её цифр на 2.
        s = s + str(s.count('1') % 2)  # складываются все цифры двоичной записи числа N, и остаток от деления суммы на 2 дописывается в конец числа (справа).
    r = int(s, 2)
    if r > 75:
        R.append(r)
print(min(R))
'''


# № 16371 ЕГКР 27.04.24 (Уровень: Базовый)
# Укажите минимальное число R, не меньшее, чем 195,
# которое может быть получено в результате работы алгоритма.
'''
R = []
for n in range(1, 10000):
    s = f'{n:b}'
    if n % 3 == 0:  # если число N делится на 3
        s = s + s[-2:]  # то к этой записи дописываются 2 последние двоичные цифры;
    else:
        x = (n % 3) * 3  # то остаток от деления умножается на 3
        s = s + f'{x:b}'  # переводится в двоичную запись и дописывается в конец числа.
    r = int(s, 2)
    if r > 195:
        R.append(r)

print(min(R))
'''

# Функция для перевода из 10сс в n-ную, где n < 10:
'''
def convert(n, b):  # n - number, b - base system
    r = ''
    while n > 0:
        r += str(n % b)
        n //= b
    return r[::-1]

print(convert(8, 2))  # 1000
'''

# № 16371 ЕГКР 27.04.24 (Уровень: Базовый)
# Укажите минимальное число R, не меньшее, чем 195,
# которое может быть получено в результате работы алгоритма.
'''
def convert(n, b):  # n - number, b - base system
    r = ''
    while n > 0:
        r += str(n % b)
        n //= b
    return r[::-1]


R = []
for n in range(1, 10000):
    s = convert(n, 2)
    if n % 3 == 0:  # если число N делится на 3
        s = s + s[-2:]  # то к этой записи дописываются 2 последние двоичные цифры;
    else:
        x = (n % 3) * 3  # то остаток от деления умножается на 3
        s = s + f'{x:b}'  # переводится в двоичную запись и дописывается в конец числа.
    r = int(s, 2)
    if r > 195:
        R.append(r)

print(min(R))
'''

# № 9774 Основная волна 20.06.23 (Уровень: Средний)
# Укажите минимальное число R, большее 133, которое
# может быть получено с помощью описанного алгоритма.
'''
def convert(n, b):  # n - number, b - base system
    r = ''
    while n > 0:
        r += str(n % b)
        n //= b
    return r[::-1]


R = []
for n in range(1, 10000):
    s = convert(n, 3)
    if n % 3 == 0:  # если число N делится на 3
        s = s + s[-2:]  # то к этой записи дописываются две последние троичные цифры;
    else:
        x = (n % 3) * 5  # то остаток от деления умножается на 5
        s = s + convert(x, 3)  # переводится в троичную запись и дописывается в конец числа.
    r = int(s, 3)
    if r > 133:
        R.append(r)

print(min(R))
'''

# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# ФИПИ = [2, 5, 6]
# КЕГЭ = []
# на следующем уроке:
