# region Домашка: ******************************************************************

# № 5553 (Уровень: Базовый)
'''
from itertools import *
R = []
for p in permutations('СОТОЧКА'):
    word = ''.join(p)
    if 'ОО' in word or 'ОА' in word or 'АО' in word:
        R.append(word)
print(len(set(R)))
'''


# № 6901 (Уровень: Средний)
'''
from itertools import *
n = 0
last = 0
for p in product(sorted('БАРШ'), repeat=5):
    word = ''.join(p)
    n += 1
    sogl = [x for x in word if x in 'БРШ']
    if len(sogl) <= 3:
        copied = [x for x in word if word.count(x) == 2]
        not_copied = [x for x in word if word.count(x) == 1]
        if len(not_copied) == 3 and len(copied) == 2:
            last = n
print(last)


from itertools import *
n = 0
last = 0
for p in product(sorted('БАРШ'), repeat=5):
    word = ''.join(p)
    n += 1
    sogl = [x for x in word if x in 'БРШ']
    if len(sogl) <= 3:
        if len(set(word)) == 4:
            last = n
print(last)
'''

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

'''
# IP-адреса это четыре числа разделенные точкой
# 222.190.122.24 -> на каждое число выделяется по 1 байту = 8 бит
# Тогда длина IP-адреса в двоичном виде будет 32 бита = 4 * 8

print('.'.join([bin(int(x))[2:].zfill(8) for x in '222.190.122.24'.split('.')]))
# '222.190.122.24'
# ['222', '190', '122', '24']
# [222, 190, 122, 24]
# ['11011110', '10111110', '1111010', '11000']
# ['11011110', '10111110', '01111010', '00011000']
# 11011110.10111110.01111010.00011000

# ip-адреса сети они лежат в Адресе сети
# Адрес сети = Узел сети & Маска сети, где & это побитовая конъюнкция
print(12 & 6)  # 4

print('.'.join([bin(int(x))[2:].zfill(8) for x in '123.222.111.192'.split('.')]))
print('.'.join([bin(int(x))[2:].zfill(8) for x in '255.255.255.248'.split('.')]))
# 01111011.11011110.01101111.11000000 - узел сети 
# 11111111.11111111.11111111.11111000 - маска сети 
# 01111011.11011110.01101111.11000000 - адрес сети 

# for mask in range(32+1):
'''

# Сеть задана узлом IP-адреса 123.222.111.192 и маской сети 255.255.255.248.
# Сколько в этой сети IP-адресов, для которых количество нулей в двоичной
# записи четвертого байта IP-адреса не делится без остатка на 3?
# В ответе укажите только число.

'''
from ipaddress import *
net = ip_network('123.222.111.192/255.255.255.248', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s[24:].count('0') % 3 != 0:
        cnt += 1
print(cnt)
'''


'''
#  байт 1   2   3   4     1         2       3         4
# ip = 123.222.111.199 01111011 11011110 01101111 11000111
ip = '01111011110111100110111111000111'
print(ip[:8])  # первый байт
print(ip[8:16])  # второй байт
print(ip[16:24])  # третий байт
print(ip[24:])  # четвертый байт

from ipaddress import *
net = ip_network('123.222.111.192/255.255.255.248', 0)
print(net)  # 123.222.111.192/29 - где 29 это количество 1 в маске сети
print(net.network_address)  # 123.222.111.192
print(net.netmask)  # 255.255.255.248
# Какое кол-во нулей в маске? 32 - 29 = 3
'''

# № 18862 (Уровень: Базовый)
'''
from ipaddress import *
net = ip_network('172.140.68.0/255.255.248.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('0') > 15:
        cnt += 1
print(cnt)
'''


# № 18159 (Уровень: Базовый)
# Для узла с IP-адресом 205.154.212.20 адрес сети равен 205.154.192.0.
# Чему равно наибольшее возможное значение третьего слева байта маски?
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'205.154.212.20/{mask}', 0)

    if '205.154.192.0' in str(net):
        print(net.netmask)
        # 255.255.192.0
        # 255.255.224.0
'''
# Ответ: 224


# № 16260 Джобс 03.05.24 (Уровень: Средний)
# Известно два узла с IP-адресами 123.20.103.136 и 123.20.103.151
# принадлежат разным сетям с одинаковой маской.
#
# Определите значение 4 байта маски в этих сетях.
# Найденное значение представьте в десятичной системе счисления.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'123.20.103.136/{mask}', 0)
    net2 = ip_network(f'123.20.103.151/{mask}', 0)
    if net1 != net2:
        print(net1.netmask)
        # 255.255.255.240
        # 255.255.255.248
        # 255.255.255.252
        # 255.255.255.254
        # 255.255.255.255
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 6, 5, 8, 12, 13, 14]
# КЕГЭ  = []
# на следующем уроке:


# Первый пробник 21.12.24:
