# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# https://stepik.org/lesson/1309452/step/7?unit=1324568
'''
L = [3, 7, 1, 4, 9, 2]
L[0], L[-1] = L[-1], L[0]
print(L)  # [2, 7, 1, 4, 9, 3]

s = '371492'
# s = s[-1] + s + s[0] # - –¥–æ–ø–∏—Å—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
s = s[-1] + s[1:-1] + s[0] # - –∑–∞–º–µ–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
print(s)  # 271493
'''


# https://stepik.org/lesson/1309452/step/8?unit=1324568
'''
x = int(input())
L = []
for i in range(x):
    a = int(input())
    L.append(a)


L = [int(input()) for x in range(int(input()))]
print(L)
'''

'''
x = int(input())
L = []
S = []
K = []
for i in range(x):
    a = int(input())
    if a < 0:
        K.append(a)
    elif a == 0:
        S.append(a)
    else:
        L.append(a)


for i in K + S + L:
    print(i)
'''


# https://stepik.org/lesson/1309452/step/12?unit=1324568
'''
from math import prod

a = int(input())
b = str(a)

print(b.count('2'))

print(b.count(b[-1]))

print(len([i for i in b if i in '13579']))

S = [int(i) for i in b if int(i) > 7]
print(sum(S))

if len(S) == 0:
    print(11)
elif len(S) == 1:
    print(S[0])
else:
    print(prod(S))

print(b.count('0') + b.count('4'))
'''


#  https://stepik.org/lesson/1309453/step/10?unit=1324569
'''
S = []
for i in range(100, 1000):
    if str(i) == str(i)[::-1]:
        S.append(i)
print(S)
'''

# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************


# –°—Ä–µ–∑—ã —Å—Ç—Ä–æ–∫ - –æ–Ω–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–¥–µ–Ω—Ç–∏—á–Ω—ã —Å–ø–∏—Å–∫–∞–º
'''
L = [3, 7, 1, 4, 9, 2]
L[0], L[-1] = L[-1], L[0]
print(L)  # [2, 7, 1, 4, 9, 3]

# –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ 
# —Å—Ç—Ä–æ–∫–∏ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É 

s = '371492'
# s = s[-1] + s + s[0] # - –¥–æ–ø–∏—Å—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
s = s[-1] + s[1:-1] + s[0] # - –∑–∞–º–µ–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
print(s)  # 271493
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫
'''
s = '122333'
print(len(s))
# print(sum(s)) - —Å—Ç—Ä–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–ª—å–∑—è
print(max(s), min(s))  # - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–æ–∫–∏

print(sorted(s))  # ['1', '2', '2', '3', '3', '3']
print(sorted(s, reverse=True))  # ['3', '3', '3', '2', '2', '1']

print(sorted('2fko543EFL34'))  # ['2', '3', '3', '4', '4', '5', 'E', 'F', 'L', 'f', 'k', 'o']

alp36 = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
print(alp36[:2])  # ['0', '1']
print(alp36[:8])  # ['0', '1', '2', '3', '4', '5', '6', '7']


print(reversed(s))  # <reversed object at 0x104c4b1f0>
print(list(reversed(s)))  # ['3', '3', '3', '2', '2', '1']
print(''.join(list(reversed(s))))  # '333221'

print(s[::-1])   # '333221'

print(eval('2 + 2'))  # 4
print(eval('3 * (2 + 2)'))  # 12
'''


# üêç –í—Å–µ –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠

# 1‚É£ .strip()
# –ú–µ—Ç–æ–¥ strip() —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã (–∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã) –∏–∑ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.
# –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞.
'''
text = "  –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!  "
cleaned_text = text.strip()
print(cleaned_text)  # "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
'''

# 2‚É£ .lower() –∏ .upper()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä —Å—Ç—Ä–æ–∫–∏. lower() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, –∞ upper() ‚Äì –≤ –≤–µ—Ä—Ö–Ω–∏–π.
'''
text = "–ü—ÄIvEt"
print(text.lower())  # "–ø—Ä–∏–≤–µ—Ç"
print(text.upper())  # "–ü–†–ò–í–ï–¢"
'''

# 3‚É£ .replace()
# –ú–µ—Ç–æ–¥ replace(old, new, count) –∑–∞–º–µ–Ω—è–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É old –Ω–∞ new –≤ —Å—Ç—Ä–æ–∫–µ count —Ä–∞–∑.
'''
text = "–Ø –ª—é–±–ª—é Python!"
new_text = text.replace("Python", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
print(new_text)  # "–Ø –ª—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ!"

s = '12321312321'
s = s.replace('2', '*')  # –°—Ä–∞–∑—É –≤—Å–µ 2–∫–∏ –∑–∞–º–µ–Ω–∏–ª–∏—Å—å –Ω–∞ *
print(s)  # 1*3*131*3*1

s = s.replace('*', '+', 2)
print(s)  # 1+3+131*3*1
'''


# 4‚É£  .split()
# –ú–µ—Ç–æ–¥ split(separator) —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é. –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–±–µ–ª.
'''
text = "—è–±–ª–æ–∫–æ –≥—Ä—É—à–∞ –±–∞–Ω–∞–Ω"
fruits = text.split()  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑–¥–µ–ª—è–µ—Ç –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
print(fruits)  # ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']

text = "—è–±–ª–æ–∫–æ    –≥—Ä—É—à–∞     –±–∞–Ω–∞–Ω"
fruits = text.split(' ')
print(fruits)  # ['—è–±–ª–æ–∫–æ', '', '', '', '–≥—Ä—É—à–∞', '', '', '', '', '–±–∞–Ω–∞–Ω']

text = "—è–±–ª–æ–∫–æ*–≥—Ä—É—à–∞*–±–∞–Ω–∞–Ω"
fruits = text.split('*')
print(fruits)  # ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è 9 –Ω–æ–º–µ—Ä–∞
for s in open('0. files/9.csv'):
    print(s.split(','))
    M = [int(x) for x in s.split(',')]
    print(M)
'''

# 5‚É£ .join()
# –ú–µ—Ç–æ–¥ join(iterable) —Å–æ–µ–¥–∏–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ (–∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞) –≤ —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º.
'''
fruits = ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']
result = ', '.join(fruits)
print(result)  # "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, –±–∞–Ω–∞–Ω"


id = '192.43.234.255'
print(id.split('.'))  # ['192', '43', '234', '255']

IP = ['192', '43', '234', '255']
print(','.join(IP))  # '192,43,234,255'

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è 8 –Ω–æ–º–µ—Ä–∞

from itertools import *
for p in permutations('abc'):
    s = ''.join(p)
    print(p, s)
    # ('a', 'b', 'c') abc
    # ('a', 'c', 'b') acb
    # ('b', 'a', 'c') bac
    # ('b', 'c', 'a') bca
    # ('c', 'a', 'b') cab
    # ('c', 'b', 'a') cba
'''

# 6‚É£ .find()
# –ú–µ—Ç–æ–¥ find(substring) –∏—â–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å,
# —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–µ—Ä–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞. –ï—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1.
'''
text = "12321"
print(text.find('2'))  # 1
print(text.index('2'))  # 1

# print(text.index('5'))  # ValueError: substring not found
print(text.find('5'))  # -1

print(text.rfind('2'))  # 3
print(text.rindex('2'))  # 3
'''


# 7‚É£ .count()
# –ú–µ—Ç–æ–¥ count(substring) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É.
'''
text = "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, —è–±–ª–æ–∫–æ"
count = text.count("—è–±–ª–æ–∫–æ")
print(count)  # 2

M = [1, 2, 2, 3, 2, '2', '2']
print(M.count(2))  # 3
print(M.count('2'))  # 2
'''

# 8‚É£ .startswith() –∏ .endswith()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –µ—é.
'''
text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
print(text.startswith("–ü—Ä–∏–≤–µ—Ç"))  # True
print(text.endswith("–º–∏—Ä!"))  # True
'''


# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************



# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = []
# –ö–ï–ì–≠ = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
