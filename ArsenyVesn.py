# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


# переменная - это удобный способ взаимодействия с ячейками памяти
# x = 5
# print(x, type(x))  # 5 <class 'int'>

# - это однострочный комментарий

'''
- многострочный (блочный) комментарий
'''

# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения
print(type(2 + 2))  # <class 'int'>

b = 5.0  # float (число с плавающей точкой) - вещественные значения (дроби)
print(type(4 + 2.0))  # <class 'float'>
print(type(4 / 2))  # <class 'float'>

c = '5'  # str (string) - строковый тип данных для хранения текстовых символов
print(a, c)  # 5 5
print(a*4, c*4)  # 20 5555

# При умножении строки на целое число - строка дублируется
print('hello ' * 4)  # hello hello hello hello

c1 = 'hello, '
c2 = 'world!'
print(c1 + c2)  # hello, world! - конкатенация (склеивание) строк

d1 = True
d0 = False  # bool (Boolean) - Основы Булевой алгебры (математическая логика)
print(4 < 10)  # True
print(4 == 10)  # False
'''


# Типы данных коллекций (последовательности)
'''
A = [1, 2, 3]  # list (списки)
# 1. Могут содержать неограниченное кол-во элементов
# 2. Элементы могут принимать разные типы данных
# 3. Каждый элемент списка имеет свой порядковый номер: индекс
# 4. Индексы могут считаться слева-направо начиная с 0 или справа-налево начиная с -1
# 5. Элементы в списке можно изменять через индексы (в отличие от кортежей и строк)

# i   0    1    2    3    4
L = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

L[0], L[-1] = 'e', 'a'
print(L)  # ['e', 'b', 'c', 'd', 'a']

print(f'Первый элемент списка L: {L[0]}')
print(f'Последний элемент списка L: {L[4]}')
print(f'Последний элемент списка L: {L[-1]}')

M = [2, '2', 2.0, True, 2+2, '2'*2, 7/2, 4 < 10, [1, 2, 3], (1, 2, 3)]
for x in M:
    print(type(x), x)
    # <class 'str'> 2
    # <class 'float'> 2.0
    # <class 'bool'> True
    # <class 'int'> 4
    # <class 'str'> 22
    # <class 'float'> 3.5
    # <class 'bool'> True
    # <class 'list'> [1, 2, 3]
    # <class 'tuple'> (1, 2, 3)


B = (1, 2, 3)  # tuple (кортеж)
# 1. Полностью идентичен спискам, кроме: НЕЛЬЗЯ ИЗМЕНЯТЬ ЭЛЕМЕНТЫ

C = {1, 2, 2, 3, 3, 3}  # set (множества)
# 1. Не могут содержать копии элементов
print(C)  # {1, 2, 3}

D = {'один':'one', 'два':'two'}  # dict (словарь)
# 1. Элементы словаря разбиваются на две части: ключ и значение
# 2. Доступ к значению элемента осуществляется через ключ
print(D['один'])  # one
# 3. Ключи не могут повторяться - иначе произойдет перезапись элементов
D['один'] = 1
print(D)  # {'один': 1, 'два': 'two'}
'''


# Конвертация типов данных
'''
a = 5
print(type(a), a)  # <class 'int'> 5

a = str(a)
print(type(a), a)  # <class 'str'> 5

a = float(a)
print(type(a), a)  # <class 'float'> 5.0

a = int(a)
print(type(a), a)  # <class 'int'> 5


A = [1, 2, 2, 3, 3, 3]
print(type(A), A)  # <class 'list'> [1, 2, 2, 3, 3, 3]

A = tuple(A)
print(type(A), A)  # <class 'tuple'> (1, 2, 2, 3, 3, 3)

A = set(A)
print(type(A), A)  # <class 'set'> {1, 2, 3}

A = list(A)
print(type(A), A)  # <class 'list'> [1, 2, 3]
'''


# Ввод данных с клавиатуры
'''
n = int(input('Введите число: '))
print(type(n), n)

s = input('Введите текст: ')
print(type(s), s)
'''

# Пример использования f-строки

# Привет, Илья. Сегодня облачно, а температура 24 градуса!
'''
name = input('Введите имя: ')
weather = 'облачно'
temperature = int(input('Введите температуру: '))

print('Привет, ', name,'. Сегодня ', weather,', а температура ', temperature, ' градуса!')
print('Привет, ' + name + '. Сегодня ' + weather +', а температура ' + str(temperature) + ' градуса!')
print('Привет, {}. Сегодня {}, а температура {} градуса!'.format(name, weather, temperature))
print(f'Привет, {name}. Сегодня {weather}, а температура {temperature} градуса!')
'''

# Базовая арифметика

a, b = 7, 2

print(f'{a} + {b} = {a + b} \n'  # \n - переход на новую строку в консоли 
      f'{a} - {b} = {a - b} \n'
      f'{a} * {b} = {a * b}')

print()  # В каждой функции print() есть переход на новую строк \n

# Три типа делений в Питоне
print(f'{a} / {b} = {a / b} \n'  # 3.5 - стандартное вещественное деление (дробь float)
      f'{a} // {b} = {a // b} \n'  # 3 - взятие только целой части от деления 
      f'{a} % {b} = {a % b}')  # 1 - взятие остатка от деления (7/2 = 3 целых и 1/2)

print()

print(123 // 10)  # 12
print(123 % 10)  # 3

n = int(input())
if n % 2 == 0:
    print('Число делится на 2 | Число кратно 2 | Число четное')
if n % 3 == 0:
    print('Число делится на 3 | Число кратно 3')
if n % 10 == 3:
    print('Число оканчивается 3')
if n % 100 == 23:
    print('Число оканчивается 23')
if n % 1000 == 235:
    print('Число оканчивается 235')

print()

print(f'Возведем число 7 в степень 2: {7**2}')
print(f'Возведем число 7 в степень 3: {7**3}')


from math import sqrt
print(f'Возьмем квадратный корень от числа 16: {sqrt(16)}')
print(f'Возьмем квадратный корень от числа 16: {16 ** (1/2)}')
print(f'Возьмем кубический корень от числа 27: {27 ** (1/3)}')

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************



# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ = []
# на следующем уроке:
