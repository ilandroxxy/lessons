# region Домашка: ******************************************************************


'''
from ipaddress import *
net = ip_network('136.36.240.16/255.255.255.248')
cnt = 0
for ip in net:
    if '101' not in f'{ip:b}':
        cnt += 1
print(cnt)
'''


# Тип 25 №29673
'''
def divisors(x):
    div = []
    for j in range(2, int(x ** 0.5) + 1):
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))


# print(divisors(24))  # [2, 3, 4, 6, 8, 12] 6
# print(divisors(16))  # [2, 4, 8] 3
# print(divisors(36))  # [2, 3, 4, 6, 9, 12, 18]

cnt = 0
for x in range(123456789, 223456789 + 1, 1):
    if (x ** 0.5) == int(x ** 0.5):
    # if (x ** 0.5).is_integer():
        if len(divisors(x)) == 3:
            cnt += 1
            print(x, max(divisors(x)))
            if cnt == 10:
                break
'''

'''
from ipaddress import *
for A in range(256):
    net = ip_network(f'183.192.{A}.0/255.255.252.0', 0)
    if all(f'{ip:b}'[16:].count('1') > 3 for ip in net):
        print(A)
        break
'''

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# 1 бит - минимальная единица измерения
# 1 байт = 8 бит = 2**3 бит
# 1 Кбайт = 1024 байт = 2**10 байт = 2**13 бит
# 1 Мбайт = 1024 Кбайт = 2**20 байт = 2**23 бит
# 1 Гбайт = 1024 Мбайт = 2**30 байт = 2**33 бит


# Тип 7 №39236
'''
# V = pixels * i
# i - бит выделяется для хранения 1 пикселя
# colors = 2 ** i

pixels = 512 * 640
V = 640 * 2**13  # бит
i = V / pixels
print(2**i)  # 65536
'''


# Тип 7 №18078
'''
pixels = 640 * 320
colors = 64  # i = 6
i = 6
V = pixels * i
print(V / 2**13)  # 150
'''


# Тип 7 №15104
# Автоматическая фотокамера производит растровые изображения размером 300 на 200 пикселей.
# При этом объём файла с изображением не может превышать 30Кбайт, упаковка
# данных не производится. Какое максимальное количество цветов можно использовать в палитре?
'''
pixels = 300 * 200
V = 30 * 2**13
i = V / pixels
print(i)  # 4.096
i = 4
print(2**i)
'''


# Тип 7 №59685
# Сколько секунд потребуется обычному модему, передающему сообщения
# со скоростью 65536 бит/с, чтобы передать цветное растровое изображение
# размером 1024 на 768 пикселей,
# при условии, что цвет каждого пикселя кодируется 3 байтами?
'''
pixels = 1024 * 768
i = 24
V = pixels * i
print(V / 65536)  # 288
'''


# Тип 7 №28545
# Для проведения эксперимента создаются изображения, содержащие случайные наборы
# цветных пикселей. Размер изображения — 320x240пк, при сохранении изображения
# каждый пиксель кодируется одинаковым числом битов, все коды пикселей записываются
# подряд, методы сжатия не используются. Размер файла не должен превышать 100 Кбайт,
# при этом 20 Кбайт необходимо выделить для служебной информации.
# Какое максимальное количество различных цветов и оттенков можно использовать в изображении?
'''
pixels = 320 * 240
V = 80 * 2**13
i = V / pixels
print(i)  # 8.5333
i = 8
print(2 ** i)
'''
'''
colors = 100
# colors = 2 ** i
'''


# V = a * b * c * t
# бит = шт * Гц * бит * сек
'''
V = 220 * 2**23
a = 2
b = 64000
c = 24
t = V / (a * b * c)
print(t / 60)  # 600.7466 -> 10.012 = 10
'''

# Тип 7 №61387
# Аудиопоток кодируется в режиме стерео (2 канала) с частотой дискретизации
# 32 кГц и передаётся по каналу с пропускной способностью 40Кбайт/сек.
# При этом используются методы сжатия, которые позволяют сократить объём
# передаваемой информации на 68%. С какой максимальной глубиной кодирования можно вести запись?
#
# В ответе укажите только целое число — максимально возможную глубину кодирования в битах.
'''
a = 2
b = 32000
# c - ?
t = 1

V = ((40 * 2**13) / 32) * 100  # Вес исходного файла до сжатия
c = V / (a * b * t)
print(c)  # 7.5294
'''


# Тип 7 №55594
# Книгу объёмом 1 Мбайт записали как аудиокнигу.
# Запись велась в формате стерео (2 канала) с частотой 32кГц и разрешением 16бит.
# За одну минуту записывалось в среднем 1,5 Кбайт текста.
# Сжатие данных позволило сократить размер полученного звукового файла на 80%.
# Для удобства использования запись разделили на фрагменты со средним размером 20 Мбайт.
# Определите количество полученных фрагментов.
'''
book = 2**23
m = book / (1.5*2**13)


a = 2
b = 32000
c = 16
V = a * b * c * m * 60
V = V * (1 - 0.8)
print((V / 2**23) / 20)
'''


# Тип 7 №48428
'''
a = 2
b = 44000
c = 16
V = 120*2**23
t = V / (a * b * c)
print(t)

a2 = 4
b2 = 88000

V2 = 720 * 2 ** 23
c2 = V2 / (a2 * b2 * t)
print(c2)
'''


# https://education.yandex.ru/ege/task/26133fed-3f76-4e26-9b4a-a96c4160e69c
'''
pixels = 1536 * 1024
picture = 60 / 10
V6 = 9 * 2**23
V = V6 / picture
i = V / pixels
print(2 ** i)
'''

# https://education.yandex.ru/ege/task/79f258a0-f83f-4f92-9d8f-a5400b888821

# t = 4 * 60 + 16
# a = 2
# b = 11000
# c = 16
# V = a * b * c * t
# print(2**16)

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25]
# КЕГЭ  = []
# на следующем уроке:
