# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Теория множеств:
# P: {2, 3, 5, 7, 11, 13, 17, 19, ...} - множество простых чисел
# N: {1, 2, 3, ..., 1000, ..., +inf} - множество натуральных чисел
# Z: {-inf, ..., -1000, ..., -2, -1, 0, 1, 2, ..., 1000, ..., +inf} - множество целых чисел  N ∈ Z
# Q: {-inf,..., -3.4, -1/2, 0, 2, 1/2, 3/4,..., 1000/1, ..., +inf} - множество рациональных чисел N ∈ Z ∈ Q
# I: {-inf,..., -pi, 0, pi, 0.12321321312321.., ..., +inf} - множество иррациональных чисел N ∈ Z ∈ Q ∈ I
# R: N ∈ Z ∈ Q ∈ I ∈ R - множество вещественных/действительных значений
# C: множество комплексных чисел


# Переменная - удобный способ взаимодействия с данными в памяти

# Типа данных переменных
'''
a = 5  # int (integer) - целочисленные значения

b = 5.0  # float (число с плавающей точкой) - вещественное число (дробь)
print(7 / 2)  # 3.5
print(4 / 2)  # 2.0

c = '5'  # str (string) - строковый тип данных, содержит символы, буквы и тд
print(a * 4, c * 4)  # 20 5555
print('hello ' * 4)  # hello hello hello hello

d1 = True  # bool (Boolean) - Булева алгебры (Математическая логика)
d0 = False
print(4 < 10)  # True

n = 8
if n % 2 == 0:
    print('Четное')
else:
    print('Нечетное')
'''

# Типы данных коллекций (последовательности)
'''
A = [1, 2, 3]  # list (список)
# 1. Могут хранить в себе неограниченное кол-во элементов, разных типов данных
# 2. У каждого элемента есть порядковый номер - индекс начинающийся с нуля
# 3. Если преебираем элементы слева направо, то начинаем с 0, а перебирая элементы справа налево начинаем с -1
# 4. Можно брать элементы по индексам и изменять их

# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(f'Первый элемент списка М: {M[0]}')
print(f'Последний элемент списка М: {M[-1]}')
# Первый элемент списка М: a
# Последний элемент списка М: e

M[2] = '0'
print(M)  # ['a', 'b', '0', 'd', 'e']


B = (1, 2, 3)  # tuple (кортеж) - полностью идентичен спискам, но нельзя изменять элементы


C = {1, 2, 3, 2, 3}  # set (множество) - удаляют копии элементов
print(C)  # {1, 2, 3}

s = '782346328746'
print(len(set(s)))  # Кол-во различных элементов в строке s: 6


D = {'один': 'one', 'два': 'two', 'три': 'three'}  # dict (словарь)
# Элементы словаря разбиваются на две части: ключи и значения
# Доступ к значению элемента предоставляется через его (индивидуальный) ключ

print(D['один'])  # one
D['один'] = 1
print(D)  # {'один': 1, 'два': 'two', 'три': 'three'}

for key, value in D.items():
    print(key, value)
    # один 1
    # два two
    # три three
'''


'''
M = [1, 2.0, '2', True, 1+2, 7/2, '2' * 4, 4 < 10, [1, 2, 3], (1, 2, 3), {1, 2, 3}, {'один': 1, 'два': 'two', 'три': 'three'}]
for elem in M:
    print(elem, type(elem))
    # 1 <class 'int'>
    # 2.0 <class 'float'>
    # 2 <class 'str'>
    # True <class 'bool'>
    # 3 <class 'int'>
    # 3.5 <class 'float'>
    # 2222 <class 'str'>
    # True <class 'bool'>
    # [1, 2, 3] <class 'list'>
    # (1, 2, 3) <class 'tuple'>
    # {1, 2, 3} <class 'set'>
    # {'один': 1, 'два': 'two', 'три': 'three'} <class 'dict'>
'''

# Конвертирование типов данных
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>

a = int(a)
print(a, type(a))  # 5 <class 'int'>

A = [1, 2, 3, 2, 3]  # [1, 2, 3, 2, 3] <class 'list'>
print(A, type(A))


A = tuple(A)  # (1, 2, 3, 2, 3) <class 'tuple'>
print(A, type(A))

A = set(A)
print(A, type(A))  # {1, 2, 3} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3] <class 'list'>
'''

# Работа с f-строками
'''
weather = 'облачно'
temperature = 24
# Сегодня облачно, а температура 24 градуса!
print('Сегодня ', weather, ', а температура ', temperature, ' градуса!')
print('Сегодня ' + weather + ', а температура ' + str(temperature) + ' градуса!')
print('Сегодня {}, а температура {} градуса!'.format(weather, temperature))
print(f'Сегодня {weather}, а температура {temperature} градуса!')
'''

# Ввод данных с клавиатуры
'''
s = input('Введите строку с клавиатуры: ')
x = int(input('Введите число: '))
print(s, x)
'''

# Базовая арифметика
'''
a = 7
b = 2

print(f'{a} + {b} = {a + b}')
print(f'{a} - {b} = {a - b}')
print(f'{a} * {b} = {a * b}')

print()

print(f'{a} + {b} = {a + b} \n'
      f'{a} - {b} = {a - b} \n'
      f'{a} * {b} = {a * b}')

print()   # В каждой функции print() есть '\n'

# Деления:
print(f'{a} / {b} = {a / b} \n'  # Обычное вещественное деление 
      f'{a} // {b} = {a // b} \n'  # Целая часть от деления 
      f'{a} % {b} = {a % b}')  # Остаток от деления

print()

n = 24
print(n % 2 == 0)  # четное, кратно, делится
print(n % 2 != 0)  # нечетное

print(24 // 10)  # 2
print(24 % 10)  # 4
print(n % 10 == 4)  # оканчивается на 4

print()

print(f'Возведем число {a} в степень {b}: {a} ** {b} = {a**b}')
# Возведем число 7 в степень 2: 7 ** 2 = 49
print(f'Возьмем от числа 16 квадратный корень: 16 ** 0.5 = {16 ** 0.5}')
# Возьмем от числа 16 квадратный корень: 16 ** 0.5 = 4.0
print(f'Возьмем от числа 27 кубический корень: 27 ** (1/3) = {27 ** (1/3)}')
# Возьмем от числа 27 кубический корень: 27 ** (1/3) = 3.0


print(int(16 ** 0.5))
print(round(137 ** 0.5, 6))
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ  = []
# на следующем уроке:
