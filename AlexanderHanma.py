# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


'''
file = open('files/17.txt')
# FileNotFoundError: [Errno 2] No such file or directory: '17.txt'
print(file)  # <_io.TextIOWrapper name='files/17.txt' mode='r' encoding='UTF-8'>

# print(file.read())  # - Чтение сразу всего содержимого файла

# print(file.readline())  # - Чтение только первой строки

# print(file.readlines())  # - Чтение строк из файла в один список
'''

'''
M = []
file = open('files/17.txt')
for s in file:
    M.append(int(s))
print(M)
file.close()  # Закрывать файл после работы с ним


# Правильный подход для работы с файлами:

with open('files/17.txt', mode='r') as file:
    for s in file:
        M.append(int(s))
    print(M)
# Будет считаться, что здесь файл закрыт
'''

# Как мы будем открывать файл для 17 номера:
'''
M = [int(s) for s in open('files/17.txt')]
'''
'''
M = [1, 2, 3, 4, 5]
# Как считывать пары/тройки в разных прототипах:

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45

for i in range(len(M)-1):
    x, y = M[i], M[i+1]


# 2. В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
# 123 234 345

for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]


# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45

for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
'''


# Тип 17 №37341
# В файле содержится последовательность из 10000 целых положительных
# чисел. Каждое число не превышает 10000. Определите и запишите
# в ответе сначала количество пар элементов последовательности,
# разность которых четна и хотя бы одно из чисел делится на 19,
# затем максимальную из сумм элементов таких пар. В данной задаче
# под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(s) for s in open('files/17.txt')]
R = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if abs(x - y) % 2 == 0:
            if x % 19 == 0 or y % 19 == 0:
                R.append(x + y)
print(len(R), max(R))
'''


# Тип 17 №59842

# Элементы последовательности могут принимать целые значения
# от −1000000 до 1000000 включительно.
#
# Определите количество троек элементов, в которых из трех элементов
# тройки пятизначными числами являются только два, а сумма элементов
# тройки не больше максимального элемента последовательности,
# оканчивающегося на 29. В ответе запишите два числа: сначала
# количество найденных троек, а затем максимальную из сумм таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента
# последовательности.
'''
M = [int(s) for s in open('files/17.txt')]
A = [x for x in M if abs(x) % 100 == 29]
R = []
for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]
    if len([p for p in (x, y, z) if len(str(abs(p))) == 5]) == 2:
        if (x + y + z) <= max(A):
            R.append(x + y + z)
print(len(R), max(R))
'''


# Тип 17 №69895
# В файле содержится последовательность натуральных чисел.
# Элементы последовательности могут принимать целые
# значения от 1 до 100000 включительно.
# Определите количество пар элементов последовательности,
# в которых сумма остатков от деления обоих элементов на 18 равна
# минимальному элементу последовательности. В ответе запишите
# количество найденных пар, затем максимальную из сумм элементов
# таких пар. В данной задаче под парой подразумевается два идущих
# подряд элемента последовательности.
'''
M = [int(s) for s in open('files/17.txt')]
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x % 18) + (y % 18) == min(M):
        R.append(x + y)
print(len(R), max(R))
'''


# Тип 17 №48438
# Файл содержит последовательность целых чисел, по модулю не
# превышающих 10000. Назовём парой два идущих подряд элемента
# последовательности.

# Определите количество таких пар, в которых запись ровно одного
# элемента заканчивается цифрой 7, а сумма квадратов элементов пары
# меньше, чем квадрат наименьшего из элементов последовательности,
# запись которых заканчивается цифрой 7. В ответе запишите два числа:
# сначала количество найденных пар, затем максимальную сумму
# квадратов элементов этих пар.
'''
M = [int(s) for s in open('files/17.txt')]
D = [x for x in M if abs(x) % 10 == 7]
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if (x in D) != (y in D):
        if (x ** 2 + y ** 2) < min(D) ** 2:
            R.append(x ** 2 + y ** 2)
print(len(R), max(R))
'''


M=[int(s for s in open('files/17.txt'))]
R=[]
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if abs(x) % 5 == 0 or abs(y) % 5 ==0:
        if (abs(x) + abs(y)) % 7 ==0:
            R.append(abs(x)+abs(y))
print(len(M), max(R))








# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 15, 16, 23, 25]
# КЕГЭ  = []
# на следующем уроке:
