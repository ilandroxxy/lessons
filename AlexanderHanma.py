# region –î–æ–º–∞—à–∫–∞: ******************************************************************

'''
from time import time
start = time()

# def IsPrime(n):
#     d = 2
#     while n % d != 0:
#         d += 1
#     return d == n

def IsPrime(n):
    if n <= 1:
        return False
    for j in range(2, int(n**0.5)+1):
        if n % j == 0:
            return False
    return True


R = []
for n in range(124_000_000, 124_000_010):
    if IsPrime(n):
        R.append(n)
print(R)

print(time() - start)  # 4.900 -> 0.0003499
'''


# ‚Ññ 5736 (–£—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π) üå∂
# (–î. –¢–∞—Ä–∞—Å–∫–∏–Ω) –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —á–∏—Å–ª–∞ –±–æ–ª—å—à–µ 10**9
# –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –∏–∑ –Ω–∏—Ö —á–∏—Å–ª–∞-–ø–∞–ª–∏–Ω–¥—Ä–æ–º—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–∏–±–æ–ª—å—à–∏–π
# –¥–µ–ª–∏—Ç–µ–ª—å (–æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç 1 –∏ —Å–∞–º–æ–≥–æ —á–∏—Å–ª–∞) –∫—Ä–∞—Ç–µ–Ω 7.
# –í—ã–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–µ 5 —á–∏—Å–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±–µ—Ä–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞,
# –∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–±–æ–ª—å—à–∏–π –¥–µ–ª–∏—Ç–µ–ª—å.
'''
def Divisors(x):
    div = []
    for j in range(2, int(x ** 0.5) + 1):  # –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç 1 –∏ —Å–∞–º–æ–≥–æ —á–∏—Å–ª–∞
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))


cnt = 0
for x in range(10**9+1, 10**10):
    if str(x) == str(x)[::-1]:  # —á–∏—Å–ª–∞-–ø–∞–ª–∏–Ω–¥—Ä–æ–º—ã
        d = Divisors(x)
        if max(d) % 7 == 0:
            print(x, max(d))
            cnt += 1
            if cnt == 5:
                break
'''

'''
def divisors(x):
    div = []
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))


cnt = 0
for x in range(600000+1, 620000):
    if x % 6 == 0 and len(divisors((x - 1))) == 2 and len(divisors((x + 1))) == 2:
        print(x - 1, x + 1)
        cnt += 1
        if cnt == 6:
            break
'''

'''
def IsPrime(n):
    if n <= 1:
        return False
    for j in range(2, int(n**0.5)+1):
        if n % j == 0:
            return False
    return True



cnt = 0
for x in range(600000+1, 620000):
    if x % 6 == 0 and IsPrime(x - 1) and IsPrime(x + 1):
        print(x - 1, x + 1)
        cnt += 1
        if cnt == 6:
            break
'''

# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************


# –¢–∏–ø 16 ‚Ññ5810
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n),
# –≥–¥–µ n ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
# F(n)=n –ø—Ä–∏ n ‚â§ 2;
# F(n)=F(n‚àí 1)+3¬∑F(n ‚àí 2) –ø—Ä–∏ n > 2.
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ F(6)? –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
'''
def F(n):
    if n <= 2:
        return n
    if n > 2:
        return F(n - 1) + 3*F(n - 2)


print(F(6))
'''


# –¢–∏–ø 16 ‚Ññ59694
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n),
# –≥–¥–µ n ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
# F(n)=n, –ø—Ä–∏ n<11;
# F(n)=n+F(n‚àí1), –µ—Å–ª–∏ n‚â•11.
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è F(2024)‚àíF(2021)?
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n < 11:
        return n
    if n >= 11:
        return n + F(n-1)


print(F(2024) - F(2021))  # 6069
# [Previous line repeated 996 more times]
# RecursionError: maximum recursion depth exceeded

# F(2024) = 2024 + F(2023)
# F(2023) = 2023 + F(2022)
# F(2022) = 2022 + F(2021) - F(2021)

print(2024 + 2023 + 2022)  # 6069
'''


# –¢–∏–ø 16 ‚Ññ35474
# F(0)=0;
# F(n)=F(n / 3), –µ—Å–ª–∏ n > 0 –∏ –ø—Ä–∏ —ç—Ç–æ–º mod(n, 3)=0;
# F(n)=mod(n, 3)+F(n ‚àí mod(n, 3)), –µ—Å–ª–∏ mod(n, 3) > 0.
#
# –ù–∞–∑–æ–≤–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ n, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ F(n)=11.
'''
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 3 == 0:
        return F(n / 3)
    if n % 3 > 0:
        return (n % 3) + F(n - (n % 3))


for n in range(1, 1000):
    if F(n) == 11:
        print(n)
        break
'''


# –¢–∏–ø 16 ‚Ññ4656
# –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ F(n) –∏ G(n),
# –≥–¥–µ n ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∑–∞–¥–∞–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏:
# F(1)=0;
# F(n)=F(n ‚Äì 1)+n –ø—Ä–∏ n > 1;
# G(1)=1;
# G(n)=G(n ‚Äì 1)¬∑n –ø—Ä–∏ n > 1.
#
# –ß–µ–º—É —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ F(5)+G(5)?
# –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
'''
def F(n):
    if n == 1:
        return 0
    if n > 1:
        return F(n - 1) + n

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return G(n - 1) * n


print(F(5)+G(5))
'''


# –¢–∏–ø 16 ‚Ññ58228
'''
def F(n):
    if n == 1:
        return 1
    if n== 2:
        return 2
    if n > 2 and n % 2 == 0:
        return (4*n - F(n-3)) // 8
    if n > 2 and n % 2 != 0:
        return (4*n - F(n-1) + F(n-2)) // 8


print(F(52) - F(38))
'''


# –¢–∏–ø 16 ‚Ññ58220
'''
def F(n):
    if n < 3:
        return 1
    if n > 2:
        return sum([F(i) for i in range(1, n-1)])

print(F(18))
'''


# ‚Ññ 17679 –ü–µ—Ä–µ—Å–¥–∞—á–∞ 04.07.24 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return (n - 1) * F(n - 1)


print((F(2024) // 7 - F(2023)) / F(2022))
'''
#            ~~^~~
# OverflowError: integer division result too large for a float

# ‚Ññ 8953 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
'''
import sys
sys.setrecursionlimit(100000)


def F(n):
    if n >= 10000:
        return 1
    if n < 10000 and n % 2 == 0:
        return F(n + 3) + 7
    if n < 10000 and n % 2 != 0:
        return F(n + 1) - 3


print(F(50) - F(57))
'''


# ‚Ññ 17557 –û—Å–Ω–æ–≤–Ω–∞—è –≤–æ–ª–Ω–∞ 08.06.24 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
'''
import sys
sys.setrecursionlimit(10000)

def f(n):
    if n == 1:
        return 1
    if n > 1:
        return 2 * n * f(n - 1)


print((f(2024) // 16 - f(2023)) // f(2022))
'''

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = [2, 5, 6, 8, 12, 13, 14, 16, 25]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
