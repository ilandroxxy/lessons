# region –î–æ–º–∞—à–∫–∞: ******************************************************************

# –û–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
'''
n = int(input())
digits = list(reversed([int(i) for i in str(n)]))
for i in range(len(str(n))):
    print(digits[i])


n = int(input())
digits = list(reversed([int(i) for i in str(n)]))
for i in range(len(digits)):
    print(digits[i])

n = int(input())
digits = [int(i) for i in str(n)]
for x in digits[::-1]:
    print(x)


n = int(input())  # 7834

while n > 0:
    print(n % 10)
    n //= 10
'''


# –°–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª —Ö–≤–∞—Ç–∏—Ç?
'''
n = int(input())
s = 0
k = 0
for i in range(1, n + 1):
    if s <= n:
        k += 1
        s += i
print(k)
'''


# https://stepik.org/lesson/1309435/step/12?unit=1324551
'''
a = int(input())
b = int(input())
for i in range(a, b + 1):
    if i in (0, 1):
        continue
    flag = True
    for j in range(2, i):
        if i % j == 0:
            flag = False
    if flag == True:
        print(i)
'''


# –ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞: https://stepik.org/lesson/1309435/step/12?unit=1324551
'''
def is_prime(n):
    if n <= 1:
        return False
    for j in range(2, n):
        if n % j == 0:
            return False
    return True


a = int(input())
b = int(input())
for n in range(a, b + 1):
    if is_prime(n):
        print(n)
'''

# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å–ø–∏—Å–∫–æ–≤
'''
A = [1, 2, 3, '5', [1, 2, 3]]  # list (—Å–ø–∏—Å–æ–∫)
# 1. –ú–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
# 2. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä: –∏–Ω–¥–µ–∫—Å
# 3. –ò–Ω–¥–µ–∫—Å—ã –Ω–∞—á–∏–Ω–∞—é—Ç —Å–≤–æ—é –Ω—É–º–µ—Ä–∞—Ü–∏—é —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ —Å 0 –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ —Å -1
# 4. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å—Ç—Ä–æ–∫ –∏ –∫–æ—Ä—Ç–µ–∂–µ–π –≤ —Å–ø–∏—Å–∫–∞—Ö –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã

# i   0    1    2    3
M = ['a', 'b', 'c', 'd']
# -i -4   -3   -2   -1

print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ú: {M[0]}')
print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ú: {M[3]}')
print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ú: {M[-1]}')

M[0], M[-1] = 'A', 'D'
print(M)  # ['A', 'b', 'c', 'D']


# i   0    1    2    3    4
A = ['a', 'b', 'c', 'd', 'e']
for i in range(len(A)):
    A[i] = A[i] * i
print(A)  # ['', 'b', 'cc', 'ddd', 'eeee']
'''


# –°—Ä–µ–∑—ã —Å–ø–∏—Å–∫–æ–≤ –∏ —Å—Ç—Ä–æ–∫
'''
# i   0    1    2    3    4
A = ['a', 'b', 'c', 'd', 'e']
a = 'abcde'

# –°–†–ï–ó[START : STOP-1 : STEP=1]
print(A[1:4])   # ['b', 'c', 'd']
print(A[:4])   # ['a', 'b', 'c', 'd'] - –≤—Å–µ, —á—Ç–æ —Å–ª–µ–≤–∞ –¥–æ –∏–Ω–¥–µ–∫—Å–∞ 4-1
print(A[2:])   # ['c', 'd', 'e'] - –≤—Å–µ, —á—Ç–æ —Å–ø—Ä–∞–≤–∞ –æ—Ç –∏–Ω–¥–µ–∫—Å–∞ 2 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)

print(A[:])  # ['a', 'b', 'c', 'd', 'e'] - –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
print(A[::])  # ['a', 'b', 'c', 'd', 'e']
print(A[::2])  # ['a', 'c', 'e'] - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(A[1::2])  # ['b', 'd'] - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –Ω–µ—á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(A[::-1])  # ['e', 'd', 'c', 'b', 'a'] - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
print(a[::-1])  # edcba - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ

print(A[2:])  # ['c', 'd', 'e'] - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫—Ä–æ–º–µ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö (0, 1)
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤
'''
from math import prod

M = [4, 5, 2, 3, 3, 3]
print(len(M))  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)
print(sum(M))  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ (–µ—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–∞)
print(prod(M))  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞
print(max(M), min(M))  # –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞

print(sorted(M))  # [2, 3, 3, 3, 4, 5] - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
print(sorted('hello3421'))  # ['1', '2', '3', '4', 'e', 'h', 'l', 'l', 'o']

print(reversed(M))  # <list_reverseiterator object at 0x102503b50>
print(list(reversed(M)))  # [3, 3, 3, 2, 5, 4] - —Ä–∞–∑–≤–µ—Ä–Ω—É–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞

print(set(M))  # {2, 3, 4, 5} - —É–±–∏—Ä–∞–µ—Ç –∫–æ–ø–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 
'''



# üñ• –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠

# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 3]
my_list.append(4)
my_list.append(5)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4, 5]
'''

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
'''
my_list = [1, 2, 3]
my_list = [0] + my_list + [4, 5]
print(my_list)  # –í—ã–≤–æ–¥: [0, 1, 2, 3, 4, 5]
'''


# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 3, 4]
my_list.reverse()
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''

# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
'''
my_list = [1, 2, 3, 4]
my_list = my_list[::-1]
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 2, 3, 4, 2]
print(my_list.count(2))  # –í—ã–≤–æ–¥: 3
'''


# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 3, 2, 4]
my_list.remove(2)  # –ü–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]
'''

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:
'''
# i        0  1  2  3  4
my_list = [1, 2, 3, 2, 4]
del my_list[1]  # –ò–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]
'''


# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ. –ü—Ä–∏–º–µ—Ä:
'''
# i        0  1  2  3  4
my_list = [1, 2, 3, 2, 4]
print(my_list.index(2))  # –í—ã–≤–æ–¥: 1
'''


# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [4, 1, 3, 2]
my_list.sort()
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list.sort(reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''

# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
'''
my_list = [4, 1, 3, 2]
my_list = sorted(my_list)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list = sorted(my_list, reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤: [—á—Ç–æ –∫–ª–∞–¥–µ–º | –æ—Ç–∫—É–¥–∞ –±–µ—Ä–µ–º | –ø—Ä–∏ –∫–∞–∫–æ–º —É—Å–ª–æ–≤–∏–∏]
'''
M = [x for x in range(1, 10)]  # [1, 2, 3, 4, 5, 6, 7, 8, 9]

M = [x for x in range(1, 10) if x % 2 == 0]  # [2, 4, 6, 8]


M = [int(x) for x in str(123456789)[1::2] ]  # [2, 4, 6, 8]
M = [int(x) for x in str(123456789) if int(x) % 2 == 0]  # [2, 4, 6, 8]
M = [int(x) for x in str(123456789) if x in '02468']  # [2, 4, 6, 8]


a = 'abcde'
M = [x for x in a if x in 'ae']  # ['a', 'e']

# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è 17 –Ω–æ–º–µ—Ä–∞
M = [int(x) for x in open('0. files/17.txt')]


# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è 9 –Ω–æ–º–µ—Ä–∞
for s in open('0. files/9.csv'):
    M = [int(x) for x in s.split(',')]
    print(s, M) # '66,39,77,31,132,117'  [66, 39, 77, 31, 132, 117]
'''

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = []
# –ö–ï–ì–≠ = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ: # –§—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫ + –ú–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫
