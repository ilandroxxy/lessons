# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************

'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ú: {M[0]}')  # a
print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ú: {M[-1]}')  # e

M[0], M[-1] = 'A', 'E'
print(M)  # ['A', 'b', 'c', 'd', 'E']
'''
# 1. –ú–æ–≥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –º–∞—Å—Å–∏–≤–æ–≤ –∏ —Å—Ç—Ä–æ–∫)
# 2. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä: –∏–Ω–¥–µ–∫—Å
# 3. –ò–Ω–¥–µ–∫—Å—ã –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å 0 –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å -1
# 4. –ß–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã –º—ã –º–æ–∂–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞, –Ω–æ –∏ –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å—Ç—Ä–æ–∫ –∏ –∫–æ—Ä—Ç–µ–∂–µ–π)


# –†–∞–±–æ—Ç–∞ —Å —Å–ø–∏—Å–∫–∞–º–∏ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª for:
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']

print(len(M))  # 5 - –§—É–Ω–∫—Ü–∏—è len() - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)

for i in range(len(M)):
    # print(i, end=' ')  # 0 1 2 3 4
    print(M[i], end=' ')  # a b c d e
print()

for i in range(len(M)):
    M[i] = M[i] * i
print(M)  # ['', 'b', 'cc', 'ddd', 'eeee']


# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']

for x in M:  # –ü—Ä–æ–±–µ–≥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ú –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ x
    print(x, end=' ')  # a b c d e
print()

# –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ 
for x in M:
    if x in 'ae':  # –ë–µ—Ä—É —Ç–æ–ª—å–∫–æ –≥–ª–∞—Å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã 
        print(x, end=' ')  # a e 
print()
'''

# –°—Ä–µ–∑—ã —Å–ø–∏—Å–∫–æ–≤ –∏ —Å—Ç—Ä–æ–∫ (—Å—Ä–µ–∑—ã –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏)
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']

# range (START , STOP-1 , STEP)
# –°–†–ï–ó–´ [START : STOP-1 : STEP]

print(M[1:4])  # ['b', 'c', 'd']
print(M[:4])   # ['a', 'b', 'c', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ª–µ–≤–∞ –¥–æ 4 –∏–Ω–¥–µ–∫—Å–∞ (–Ω–µ –≤–∫–ª—é—á–∞—è)
print(M[2:])   # ['c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø—Ä–∞–≤–∞ –Ω–∞—á–∏–Ω–∞—è —Å–æ 2 –∏–Ω–¥–µ–∫—Å–∞ (–≤–∫–ª—é—á–∞—è)
print(M[:])  # ['a', 'b', 'c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
print(M[::])  # ['a', 'b', 'c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
print(M[0::2])  # ['a', 'c', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(M[1::2])  # ['b', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –Ω–µ—á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏

# –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑—ã–Ω–µ –Ω–∞ –ï–ì–≠

print(bin(8))  # 0b1000
print(bin(8)[2:])  # 1000 - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö

print(M[1:-1])  # ['b', 'c', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
print(M[::-1])  # ['e', 'd', 'c', 'b', 'a'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ

M = [1, 2, 3, 4, 5]
print(M[4:0:-1])  # [5, 4, 3, 2]  [5, 4, 3]
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤
'''
M = [1, 2, 1, 2, 3, 4]

print(len(M))  # - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
print(sum(M))  # - –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ü–µ–ª—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
print(min(M), max(M))
print(sorted(M))  # [1, 1, 2, 2, 3, 4] - –°–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è
print(sorted(M)[::-1])  # [4, 3, 2, 2, 1, 1] - –í –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ —Å—Ä–µ–∑
print(sorted(M, reverse=True))  # [4, 3, 2, 2, 1, 1] - –í –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è

print(set(M))  # {1, 2, 3, 4} - —É–±–∏—Ä–∞–µ—Ç –∫–æ–ø–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
'''

# üñ•  –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠  #tpy
#
# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞.
'''
my_list = [1, 2, 3]
my_list.append(4)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
my_list = [1, 2, 3]
my_list += [4, 5] 
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4, 5]
'''


# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π.
'''
my_list = [1, 2, 3, 4]
my_list.reverse()
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
my_list = [1, 2, 3, 4]
my_list = my_list[::-1]
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫.
'''
my_list = [1, 2, 2, 3, 4, 2]
count_of_twos = my_list.count(2)
print(count_of_twos)  # –í—ã–≤–æ–¥: 3
'''


# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.
'''
my_list = [1, 2, 3, 2, 4]
my_list.remove(2)  # –ø–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]

my_list = [1, 2, 3, 2, 4]
while 2 in my_list:  # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ 2-–∫–∏
    my_list.remove(2)
print(my_list)  # [1, 3, 4]

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:

# i        0  1  2  3  4 
my_list = [1, 2, 3, 2, 4]
del my_list[1]  # –∏–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]
'''


# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ.
'''
my_list = [1, 2, 3, 2, 4]
index_of_two = my_list.index(2)
print(index_of_two)  # –í—ã–≤–æ–¥: 1
'''


# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
# –∏–ª–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True.
'''
my_list = [4, 1, 3, 2]
my_list.sort()
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list.sort(reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
my_list = [4, 1, 3, 2]
my_list = sorted(my_list)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list = sorted(my_list, reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤
'''
# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä [—á—Ç–æ –∫–ª–∞–¥–µ–º | –æ—Ç–∫—É–¥–∞ –±–µ—Ä–µ–º | –ø—Ä–∏ –∫–∞–∫–æ–º —É—Å–ª–æ–≤–∏–∏]

M = [x for x in range(10)]
print(M)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

M = [x for x in range(10) if x % 2 == 0]
print(M)  # [0, 2, 4, 6, 8]

M = [x**2 for x in range(10) if x % 2 == 0]
print(M)  # [0, 4, 16, 36, 64]


from random import randint
M = [randint(0, 100) for _ in range(10)]
print(M)  # [21, 10, 48, 60, 75, 11, 74, 37, 78, 60]

chet = [x for x in M if x % 2 == 0]
print(chet)  # [10, 48, 60, 74, 78, 60]
nechet = [x for x in M if x % 2 != 0]
print(nechet)  # [21, 75, 11, 37]

copied = [x for x in M if M.count(x) > 1]
print(copied)  # [60, 60]
not_copied = [x for x in M if M.count(x) == 1]
print(not_copied)  # [21, 10, 48, 75, 11, 74, 37, 78]

M = [int(s) for s in open('files/17.txt')]
print(M)
'''

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = [2, 6]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
