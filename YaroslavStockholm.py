# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# d1 = True
# d0 = False


# Тип 2 №27371
# Логическая функция F задаётся выражением ((x ∧ ¬y) → (¬z ∨ ¬w)) ∧ ((w → x) ∨ y)
'''
print('x y z w')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((x and (not y)) <= ((not z) or (not w))) and ((w <= x) or y)
                if F == 0:
                    print(x, y, z, w)
'''


# Тип 2 №57409
# Миша заполнял таблицу истинности логической функции F:
# (x∨¬y)∧¬(y≡z)∧¬w
'''
print('x y z w')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = (x or (not y)) and (not(y == z)) and (not w)
                if F == 1:
                    print(x, y, z, w)
'''

'''
# ((x ∧ y) → (¬z ∨ w)) ∧ ((¬w → x) ∨ ¬y)
print('x y z w')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((x and y) <=((not z) or w)) and (((not w) <= x) or (not y))
                if F == 1:
                    print(x, y, z, w)
'''


# ((x ≡ z) → (¬y ∨ w)) ≡ ¬ ((w → z) ∨ (x → y))
'''
print('x y z w')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((x == z) <= ((not y) or w)) == (not ((w <= z) or (x <= y)))
                if F == 1:
                    print(x, y, z, w)
'''
# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2]
# КЕГЭ  = []
# на следующем уроке:
