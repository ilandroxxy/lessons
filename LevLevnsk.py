# region Домашка: ************************************************************


# endregion Домашка: ************************************************************
# #
# #
# region Урок: ************************************************************

'''
from string import *
abc = digits + ascii_uppercase

for x in abc[:22]:
    a = int(f'63{x}59685', 22)
    b = int(f'17{x}53', 22)
    c = int(f'36{x}5', 22)
    if (a + b + c) % 21 == 0:
        print(x, (a + b + c) // 21)
'''


# № 8948 Джобс 02.06.2023 (Уровень: Базовый)
'''
sym = 48
alp = 8  # 2**3 >= 8 -> i = 3
i = 3  # бит на один символ

bit = sym * i  # бит на один пароль
print(bit / 8)  # 18.0 -> 18 всегда округляем вверх
byte = 18

# user = byte + dop
user = 5750 / 250
print(user - byte)
'''


# № 21897 Открытый вариант 2025 (Уровень: Базовый)
# Известно, что для хранения 703 569 серийных номеров
# доступно не более 77 Мбайт памяти.

sym = 246
# alp - ?
# i - ?

byte = 77*2**20 / 703_569  # сколько на один серийный номер
print(byte)  # 114.758 -> 114
bit = 114 * 8

i = bit / sym
print(i)  # 3.707 -> 3

# Определите максимально возможную мощность алфавита:
print(2**3)  # i = 3

# Определите минимально возможную мощность алфавита:
print(2**2+1)  # i = 3




# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [5, 8, 9, 11, 14, 15, 17, 19-21, 23, 25]
# КЕГЭ = []
# на следующем уроке: 26/27


# Первый пробник 7.03.25:
# Лев 8/46 -> _ вторичных баллов +[2, 5, 15, 16, 19, 20, 23, 25] -[8, 9, 12, 21]
