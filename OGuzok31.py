# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# № 13883 (Уровень: Базовый)
'''
sym = 35
alp = 52   # 2**6 >= 52
i = 6  # бит на один символ

bit = sym * i
print(bit / 8)  # 26.25 -> 27
byte = 27

print(byte * 25)
'''


# № 21897 Открытый вариант 2025 (Уровень: Базовый)
# Известно, что для хранения 703 569 серийных номеров
# доступно не более 77 Мбайт памяти.
'''
sym = 246
# alp - ?
# i - ?

byte = 77 * 2**20 / 703_569
print(byte)  # 114.75 -> 114

byte = 114
bit = byte*8

i = bit / sym
print(i)  # 3.7073 -> 3
i = 3

print(2**i)  # 8
'''

'''
alp = 16  # i = 4

alp = 17  # i = 5 - минимальная мощность алфавита
alp = 20  # i = 5
alp = 32  # i = 5 - максимальная мощность алфавита

alp = 33  # i = 6

# [min:max]
# i = 4 [9:16]
# i = 5 [17:32]
# i = 6 [2**5+1:2**6]
'''

# № 21887 Открытый вариант 2025 (Уровень: Базовый)

from itertools import permutations
print('1 2 3 4 5 6 7')
table = '12 13 14 21 23 26 31 32 41 45 47 54 56 57 62 65 74 75'
graph = 'AD DA AE EA DB BD DF FD BF FB FG GF GC CG GE EG CE EC'
for p in permutations('ABCDEFG'):
    new_table = table
    for i in range(1, 7+1):
        new_table = new_table.replace(str(i), p[i-1])
    if set(new_table.split()) == set(graph.split()):
        print(*p)

# 1 2 3 4 5 6 7
# F D B G E A C
# G E C F D A B


# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [1, 2? сопоставление, 3, 4, 5, 7, 8, 9-, 11, 12, 13, 14, 15, 16, 18, 19-21, 22, 23]
# КЕГЭ = []
# на следующем уроке:


# Второй пробник 28.02.25:
# Селим 18/29 -> 72 вторичных баллов +[1-5, 8, 10-16, 19-21, 23, 25] -[6, 7, 9, 17, 22, 24]
