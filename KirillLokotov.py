# region Домашка: ************************************************************

# № 7818 (Уровень: Базовый)

# ¬x -->  (not x)
# ¬(x→z) (not(x <= z))
'''
print('x y z w')
for x in range(2):
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = (y <= (not(x <= z))) or w
                if F == 0:
                    print(x, y, z, w)
'''

# endregion Домашка: ************************************************************
# #
# #
# region Урок: ************************************************************


# № 17562 Основная волна 08.06.24 (Уровень: Базовый)
# У исполнителя есть три команды, которым присвоены номера:
# A. Прибавить 1
# B. Прибавить 2
# C. Прибавить 3
# Сколько существует программ, которые преобразуют число 5 в число 11,
# и при этом траектория вычислений содержит число 7?
'''
def F(a, b):  # a - start, b - stop
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a+3, b)


print(F(5, 7) * F(7, 11))
'''

#
# № 17684 Пересдача 04.07.24 (Уровень: Базовый)
# A. Вычти 2
# B. Найти целую часть от деления на 2
# Сколько существует программ, для которых при исходном числе 38 результатом является число 2
# и при этом траектория вычислений содержит число 10?
'''
def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a-2, b) + F(a // 2, b)

print(F(38, 10) * F(10, 2))


def F(a, b):
    if a <= b:
        return a == b
    return F(a-2, b) + F(a // 2, b)

print(F(38, 10) * F(10, 2))
'''

# Как работает return
# return возвращает результат выполнения функции и прерывает ее

'''
def is_prime(x):
    """
    Проверка числа х на простоту
    :param x: Проверяемое число
    :return: True - число простое, False - число составное
    """
    if x <= 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


print(is_prime(7))  # True
print(is_prime(8))  # False

x = is_prime(7)
print(x)  # True

M = [1, 2, 3, 4, 5]
summa = sum(M)
print(summa)  # 15
'''


'''
def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a-2, b) + F(a // 2, b)

print(F(38, 10) * F(10, 2))
'''

'''
def F(a, b):
    if a > b or a == 16:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*3, b)


print(F(2, 9) * F(9, 18))


def F(a, b):
    if a > b or a == 16:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a*3, b)


print(F(2, 9) * F(9, 18))
'''

# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 23, 25]
# КЕГЭ = []
# на следующем уроке:
