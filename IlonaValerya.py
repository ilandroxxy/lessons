# region Домашка: ******************************************************************

# № 594 (Уровень: Средний)
'''
import sys
sys.setrecursionlimit(10000)
def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) + 3*G(n - 1)

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) - 2*G(n - 1)


# print(F(18))  # 18298549 = 1 + 8 + 2 + 9 + 8 + 5 + 4 + 9

# for i in str(18298549):
#     print(i)

summa = 0
for i in str(F(18)):
    summa += int(i)
print(summa)
'''


'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n > 1000000:
        return n
    if n <= 1000000:
        return n + F(2 * n)

def G(n):
    return F(n) / n


cnt = 0
result = G(2000)
for n in range(1, 10**6+1):
    if G(n) == result:
        cnt += 1
print(cnt)
'''


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


# № 17562 Основная волна 08.06.24 (Уровень: Базовый)
# У исполнителя есть три команды, которым присвоены номера:
# A. Прибавить 1
# B. Прибавить 2
# C. Прибавить 3
# Сколько существует программ, которые преобразуют число 5 в число 11,
# и при этом траектория вычислений содержит число 7?
'''
def F(a, b):
    if a > b:
        return 0
    if a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a+3, b)


print(F(5, 7) * F(7, 11))


# Вариант 2
def F(a, b):
    if a >= b:
        return a == b
    return F(a+1, b) + F(a+2, b) + F(a+3, b)


print(F(5, 7) * F(7, 11))
'''


def f(a, b):
    if a < b or a == 28:
        return 0
    if a == b:
        return 1
    else:
        return f(a - 3, b) + f(a // 3, b) + f(a // 2, b)


print(f(46, 20) * f(20, 3))


# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 16, 23, 25]
# КЕГЭ  = []
# на следующем уроке:
