# region Домашка: ******************************************************************

# (x <= y) or (not(w <= z))
# ((x and (not y)) or (w <= z)) == (z == x)
# ((y or z) <= (z and w)) == (not((x and z) <= (w or y)))

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# № 23743 Демоверсия 2026 (Уровень: Базовый)
# В начальный момент Черепаха находится в начале координат,
# её голова направлена вдоль положительного направления оси ординат,
# хвост опущен.

# Черепахе был дан для исполнения следующий алгоритм.
# Повтори 2 [Вперёд 14 Налево 270 Назад 12 Направо 90]
# Поднять хвост
# Вперёд 9 Направо 90 Назад 7 Налево 90
# Опустить хвост
# Повтори 2 [Вперёд 13 Направо 90 Вперёд 6 Направо 90]

# Определите, сколько точек с целочисленными координатами находятся
# внутри объединения фигур, ограниченного заданными алгоритмом линиями,
# включая точки на линиях.


import turtle as t  # Подключаем библиотеку turtle с коротким именем t
t.tracer(0)  # Функция для мгновенной отрисовки
t.left(90)  # По условию задачи нужно повернуть голове "наверх"
t.screensize(5000, 5000)  # Для добавления навигации по холсту
size = 40  # Переменная отвечающая за размер отрисовки

# Повтори 2 [Вперёд 14 Налево 270 Назад 12 Направо 90]
for i in range(2):
    t.forward(14 * size)
    t.left(270)
    t.backward(12 * size)
    t.right(90)

t.up()  # Поднять хвост

# Вперёд 9 Направо 90 Назад 7 Налево 90
t.fd(9 * size)
t.rt(90)
t.bk(7 * size)
t.lt(90)

t.down()  # Опустить хвост

t.color('blue')  # меняем цвет отрисовки пера

# Повтори 2 [Вперёд 13 Направо 90 Вперёд 6 Направо 90]
for i in range(2):
    t.forward(13 * size)
    t.right(90)
    t.forward(6 * size)
    t.right(90)

# Тут рисуем точки:
t.up()
for x in range(-50, 50):  # Перебираем все возможные координаты точек
    for y in range(-50, 50):
        t.goto(x * size, y * size)  # Прыгаем в каждую из точек
        t.dot(3, 'red')  # Рисуем точку толщиной 3 и красного цвета

t.update()  # Для корректной работы функции t.tracer(0)
t.done()  # Функция для фиксирования окна отрисовки


# Шаблон для решения 6 номера:

import turtle as t
t.tracer(0)
t.left(90)
t.screensize(5000, 5000)
size = 40

"""
Тут мы пишем свой псевдокод
"""

t.up()
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x * size, y * size)
        t.dot(3, 'red')

t.update()
t.done()





# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 6]
# КЕГЭ = []
# на следующем уроке:
