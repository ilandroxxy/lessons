# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************



# - это однострочный комментарий

''' - это много строчный комментарий
x = 'привет'
print(x, type(x))  # привет <class 'str'>
'''


# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения

b = 5.0  # float (число с плавающей точкой) - вещественные значения (дроби)

c = '5'  # str (string) - строковый тип данных, хранит в себе тексты
print(a, c)  # 5 5
print(a * 4, c * 4)  # 20 5555
print('hello ' * 4)  # hello hello hello hello - при умножении на целое число - строка дублируется

c1 = 'Hello, '
c2 = 'world!'
print(c1 + c2)  # Hello, world! - операция конкатенации (склеивание) строк


d1 = True  # bool (Boolean) - основы булевой алгебры (ака Математическая логика)
d0 = False
print(4 == 4)  # True
print(4 == 10)  # False
'''


# Типы данных коллекций (последовательностей)
'''
A = [1, 2, 3, '4', 5.0, True, [1, 2, 3]]  # list (список)
# 1. Могут содержать неограниченное кол-во элементов
# 2. Эти элементы могут быть различных типов данных
# 3. Каждый элемент списка имеет свой порядковый номер: индекс
# 4. Индексы элементов можно считать слева-направо начиная с 0 или справа-налево начиная с -1
# 5. Через индексы мы можем изменять элементы списка (в отличие от строк и кортежей)

# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(f'Первый элемент списка М: {M[0]}')
print(f'Последний элемент списка М: {M[4]}')
print(f'Последний элемент списка М: {M[-1]}')

M[0], M[-1] = 'A', 'E'
print(M)  # ['A', 'b', 'c', 'd', 'E']


B = (1, 2, 3)  # tuple (кортеж)
# 1. Тоже самое, что и списки, только нельзя изменять элементы


C = {1, 2, 2, 3, 3, 3}  # set (множество)
print(C)  # {1, 2, 3}
# 1. Множество удаляет копии элементов


D = {'один': 'one', 'два': 'two'}  # dict (словарь)
# 1. Элементы словаря разбиваются на две части: ключ и значение
# 2. Доступ к значению элемента словаря осуществляется через ключ

print(D['один'])  # one

# 3. Ключи в словаре не могут повторяться - иначе произойдет замена
D['один'] = 1
print(D)  # {'один': 1, 'два': 'two'}
'''


# Конвертация типов данных
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>

a = int(a)
print(a, type(a))  # 5 <class 'int'>

# print(int('8924573.'))
# ValueError: invalid literal for int() with base 10: '8924573.'


A = [1, 2, 2, 3, 3, 3]
print(A, type(A))  # [1, 2, 2, 3, 3, 3] <class 'list'>

A = tuple(A)
print(A, type(A))  # (1, 2, 2, 3, 3, 3) <class 'tuple'>

A = set(A)
print(A, type(A))  # {1, 2, 3} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3] <class 'list'>
'''


# Ввод данных с клавиатуры:
'''
s = input('Введите текст: ')
print(s, type(s))  # <class 'str'>

n = int(input('Введите число: '))
print(n, type(n))  # <class 'int'>
'''


# Использование f-строки
"""
''' Привет, сегодня облачно, а погода N градусов! '''
weather = 'облачно'
temperature = int(input('Введите температуру: '))

print('Привет, сегодня ', weather, ', а погода ', temperature, ' градусов!')
print('Привет, сегодня ' + weather + ', а погода ' + str(temperature) + ' градусов!')
print('Привет, сегодня {}, а погода {} градусов!'.format(weather, temperature))
print(f'Привет, сегодня {weather}, а погода {temperature} градусов!')
"""


# Базовая арифметика
'''
# a = 7
# b = 2
a, b = 7, 2

# /n - символ перехода на новую строку

print(f'{a} + {b} = {a + b} \n'   # 7 + 2 = 9
      f'{a} - {b} = {a - b} \n'   # 7 - 2 = 5 
      f'{a} * {b} = {a * b}')     # 7 * 2 = 14

print()  # Каждая функция print() содержит в себе символ \n

# Типы делений в Пайтон
print(f'{a} / {b} = {a / b} \n'  # 3.5 - обыкновенное вещественное деление (дроби - всегда float) 
      f'{a} // {b} = {a // b} \n'  # 3 - целочисленное деление (взятие только целой части - всегда int) 
      f'{a} % {b} = {a % b}')   # 1 - остаток от деления (всегда int) 7 / 2 = 3 целых (1/2) 

print()

n = int(input('n: '))
if n % 2 == 0:
      print('Четное число | Делится на 2 | Кратно 2')
elif n % 3 == 0:
      print('Делится на 3 | Кратно 3')
elif n % 10 == 7:
      print('Число оканчивается на 7')
elif n % 100 == 47:
      print('Число оканчивается на 47')
elif n % 1000 == 247:
      print('Число оканчивается на 247')

print()

print(f'Возведем число 4 в степень 2: {4 ** 2}')  # 16
print(f'Возведем число 4 в степень 3: {4 ** 3}')  # 64

from math import sqrt
print(f'Возьмем от числа 16 квадратный корень: {sqrt(16)}')  # 4.0
print(f'Возьмем от числа 16 квадратный корень: {16 ** (1/2)}')  # 4.0
print(f'Возьмем от числа 27 кубический корень: {27 ** (1/3)}')  # 3.0
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ = []
# на следующем уроке:
