# region Домашка: ************************************************************


# endregion Домашка: *********************************************************
# #
# #
# region Урок: ************************************************************

# Цикл - это некоторое повторяющееся действие

# Цикл while это цикл с условием: "выполняем действие пока условие верно", "бесконечный цикл"
'''
for i in range(2, 10+1, 2):
    print(i, end=' ')  # 2 4 6 8 10
print()

i = 2
while i <= 10:
    print(i, end=' ')  # 2 4 6 8 10
    i += 2
print()
'''

'''
num = 123
print(num // 10)  # 12
print(num % 10)  # 3

num2 = 457
print(num2 // 10)  # 45
print(num2 % 10)  # 7

num3 = 1245
print(num3 // 10)  # 124
print(num3 % 10)  # 5

print(num3 // 100)  # 12
print(num3 % 100)  # 45
'''

'''
num = int(input())  # 123
summa = 0
while num > 0:
    summa += num % 10
    print(num % 10)
    num = num // 10
print(summa)
'''


'''
from random import randint, choice
from time import sleep

error_messages = [
    "Пароль неверный, попробуйте снова: ",
    "Не удалось подтвердить пароль, попробуйте еще раз: ",
    "Пароль введен неверно, пожалуйста, попробуйте снова: ",
    "Ошибка: неверный пароль. Пожалуйста, попробуйте еще раз: ",
    "Пароль оказался неверным, повторите попытку: ",
    "Введенный вами пароль не соответствует. Попробуйте снова: ",
    "Ваш пароль неправильный. Пожалуйста, введите его еще раз: ",
    "Пароль не подходит, попробуйте ввести его заново: ",
    "Увы, пароль неверный. Пожалуйста, повторите ввод: ",
    "Пароль неверен, попробуйте еще раз, пожалуйста: "
]

password = 'qwerty'
pas = input('Введите пароль: ')
count = 0
while True:
    if pas == password:
        print('Пароль верный, добро пожаловать. ')
        break
    count += 1
    if count == 3:
        print('Проверка на робота.')
        a = randint(0, 100)
        b = randint(0, 100)
        x = int(input(f'Решите пример: {a} + {b} = '))
        if x == a + b:
            print('Проверка пройдена успешно.')
            count = 0
        else:
            print('Проверка не пройдена, попробуйте снова через 5 минут.')
            sleep(5 * 60)
            count = 0
    pas = input(choice(error_messages))
print('Вошли в учетную запись.')
'''

'''
def divisors(num):
    res = []
    for j in range(1, int(num**0.5) + 1):
        if num % j == 0:
            res += [j, num // j]
    return sorted(set(res))


def divisors(num: int) -> list:
    """
    Возвращает список уникальных делителей заданного числа.

    Аргументы:
    num (int): Целое число, для которого необходимо найти делители.

    Возвращаемое значение:
    list: Отсортированный список уникальных делителей числа `num`.

    Исключения:
    ValueError: Если `num` не является положительным целым числом.

    Примеры:
    >>> divisors(10)
    [1, 2, 5, 10]

    >>> divisors(25)
    [1, 5, 25]

    >>> divisors(1)
    [1]
    """
    if not isinstance(num, int) or num <= 0:
        raise ValueError("Входное число должно быть положительным целым числом.")

    res = []
    for j in range(1, int(num ** 0.5) + 1):
        if num % j == 0:
            res += [j, num // j]

    return sorted(set(res))
'''

# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# ФИПИ = []
# КЕГЭ = []
# на следующем уроке:
