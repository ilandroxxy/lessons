# region Домашка: ************************************************************


# endregion Домашка: *********************************************************
# #
# #
# region Урок: ************************************************************

# Типы данных последовательностей
'''
a: int = 5
b: float = 5.5
c: str = '5'  # or "5"
d1: bool = True
d2: bool = False
'''

# Типы данных последовательностей (коллекции)
'''
A: list = [1, 2.0, '3']  # Список list()
# 1. Могут хранить в себе неограниченное кол-во элементов различных типов данных
# 2. Каждый элемент имеет свой порядковый номер (индекс), через который мы можем обращаться к элементу списка
# 3. Индексы могут считаться слева-направо начиная с 0, либо справа-налево начиная с -1
# 4. Через индексы списка мы можем не только брать его элементы, но и ИЗМЕНЯТЬ их

# i         0    1    2    3    4
my_list = ['a', 'b', 'c', 'd', 'e']
# -i       -5   -4   -3   -2   -1

print(my_list[0])  # a
print(my_list[2])  # c
print(my_list[-3])  # c

print(f'Первый элемент списка: {my_list[0]}')  # a
print(f'Последний элемент списка: {my_list[-1]}')  # e

my_list[0] = 'A'
my_list[-1] = 'E'
print(my_list)  # ['A', 'b', 'c', 'd', 'E']


B: tuple = (1, 2, 3)  # Кортеж tuple()
# 1. Они полностью идентичны спискам, кроме пункта с изменением элементов. Кортеж - неизменяемый тип данных.

C: set = {1, 2, 3, 2, 3}  # Множество set()
# 1. Не могут хранить в себе два одинаковых значения, нет места для копий
print(C)  # {1, 2, 3}

D: dict = {'автобус': 'bus', 'время': 'time'}  # Словарь dict()
print(D['автобус'])
'''

# Из скольких элементов состоит список numbers?
'''
numbers = [3, 5, 7, 9]
print(len(numbers))  # 4 - Функция len() возвращает кол-во элементов в списке (длину списка).


numbers = [0, 1, 3, 14, 2, 7, 9, 8, 10]
print(numbers)  # [0, 1, 3, 14, 2, 7, 9, 8, 10]
print(*numbers)  # 0 1 3 14 2 7 9 8 10

names = ['Michael', "John", 'Freddie']
print(names)
'''

# Срезы списков

# i         0    1    2    3    4
my_list = ['a', 'b', 'c', 'd', 'e']
# -i       -5   -4   -3   -2   -1

# my_list[start : stop : step]
print(my_list[0])  # a
print(my_list[2:4])  # ['c', 'd']
print(my_list[2:])  # ['c', 'd', 'e'] все, что справа от 2 индекса
print(my_list[:4])  # ['a', 'b', 'c', 'd'] все, что слева от 4 индекса (не включительно)
print(my_list[::2])  # ['a', 'c', 'e']  # все четные индексы
print(my_list[1::2])  # ['b', 'd']  # все нечетные индексы
print(my_list[::-1])  # ['e', 'd', 'c', 'b', 'a'] - развернули список в обратном порядке


languages = ['Chinese', 'Spanish', 'English', 'Hindi', 'Arabic', 'Bengali', 'Portuguese', 'Russian', 'Japanese', 'Lahnda']
languages.reverse()
print(languages)


# endregion Урок: ************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# ФИПИ = []
# КЕГЭ = []
# на следующем уроке:
