# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# № 17631 Основная волна 19.06.24 (Уровень: Базовый)
# Какая строка получится в результате применения приведённой ниже
# программы к строке, состоящей из 136 идущих подряд цифр 9?
# В ответе запишите полученную строку.
#
#   ПОКА нашлось (22222) ИЛИ нашлось (9999)
#     ЕСЛИ нашлось (22222)
#       ТО заменить (22222, 99)
#       ИНАЧЕ заменить (9999, 2)
'''
s = '9' * 136
while '22222' in s or '9999' in s:
    if '22222' in s:
        s = s.replace('22222', '99', 1)
    else:
        s = s.replace('9999', '2', 1)
print(s)
'''

# № 14947 (Уровень: Базовый)
# Дана программа для Редактора:
# ПОКА нашлось (19) ИЛИ нашлось (49) ИЛИ нашлось (999)
#     ЕСЛИ нашлось (19)
#       ТО заменить (19, 9)
#     ЕСЛИ нашлось (49)
#        ТО заменить (49, 91)
#     ЕСЛИ нашлось (999)
#        ТО заменить (999, 4)

# На вход приведённой выше программе поступает строка, начинающаяся
# с цифры «1», а затем содержащая n цифр «9» (3 < n < 10 000).
# Определите наибольшее возможное значение суммы числовых значений
# цифр в строке, которая может быть результатом выполнения программы.
'''
R = []
for n in range(4, 10000):
    s = '1' + '9' * n
    while '19' in s or '49' in s or '999' in s:
        if '19' in s:
            s = s.replace('19', '9', 1)
        if '49' in s:
            s = s.replace('49', '91', 1)
        if '999' in s:
            s = s.replace('999', '4', 1)
    # summa = sum(map(int, s))
    summa = sum([int(x) for x in s if x.isdigit()])
    R.append(summa)
    print(max(R))
'''


# № 9065 Danov2306 (Уровень: Средний)
'''
def prime(x):
    if x == 1:
        return False
    for j in range(2, int(x ** 0.5)+1):
        if x % j == 0:
            return False
    return True


for n in range(1, 1000):
    s = '>' + '0' * 21 + '1' * n + '2' * 11
    while '>1' in s or '>2' in s or '>0' in s:
        if '>1' in s:
            s = s.replace('>1', '22>', 1)
        if '>2' in s:
            s = s.replace('>2', '2>', 1)
        if '>0' in s:
            s = s.replace('>0', '1>', 1)
    summa = sum([int(x) for x in s if x.isdigit()])
    if prime(n) and summa % n == 0:
        print(n)
        break
'''


# Тип 12 №47009
# Дана программа для редактора:
#
# ПОКА НЕ нашлось (00)
#   заменить (01, 210)
#   заменить (02, 3101)
#   заменить (03, 2012)
#
# Известно, что исходная строка начиналась с нуля и заканчивалась нулём,
# а между ними содержала только единицы, двойки и тройки.
# После выполнения данной программы получилась строка,
# содержащая 61 единицу, 50 двоек и 18 троек.
# Сколько цифр было в исходной строке?
'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'
            while '00' not in s:
                s = s.replace('01', '210', 1)
                s = s.replace('02', '3101', 1)
                s = s.replace('03', '2012', 1)
            if s.count('1') == 61 and s.count('2') == 50 and s.count('3') == 18:
                print(x + y + z + 2)
'''

'''
from itertools import product
R = []
for p in product('12', repeat=14):
    s = ''.join(p)
    if s.count('2') == 4:
        while '11' in s:
            if '112' in s:
                s = s.replace('112', '6', 1)
            else:
                s = s.replace('11', '3', 1)
        summa = sum([int(x) for x in s])
        R.append(summa)
print(max(R))


from itertools import permutations
R = []
for p in permutations('1'*10+'2'*4, ):
    s = ''.join(p)
    while '11' in s:
        if '112' in s:
            s = s.replace('112', '6', 1)
        else:
            s = s.replace('11', '3', 1)
    summa = sum([int(x) for x in s])
    R.append(summa)
print(max(R))
'''

'''
print(int('11111111', 2))  # 255
# Адрес сети = IP адресу узла & маска сети

# Маска: 255.255.240.0, имеет длину 32 бита 
# И вид: 111111...0000
'''

# Тип 13 №18791
# Для узла с IP адресом 113.191.169.34 адрес сети равен 113.191.160.0.
# Каково наименьшее возможное количество единиц в разрядах маски?

from ipaddress import *
R = []
for mask in range(32+1):
    net = ip_network(f'113.191.169.34/{mask}', 0)
    if str(net) == f'113.191.160.0/{mask}':
        R.append(mask)
print(min(R))


# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [5, 8, 12, 13*, 14]
# КЕГЭ  = []
# на следующем уроке:
