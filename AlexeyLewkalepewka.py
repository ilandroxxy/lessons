# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


# ((not x) <= ((z and y) or w))
'''
# № 17665 Пересдача 04.07.24 (Уровень: Базовый)
# Миша заполнял таблицу истинности логической функции
# F=(z → ¬(y→x)) ∨ w

print('x y z w')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = (z <= (not(y <= x))) or w
                if F == 0:
                    print(x, y, z, w)
'''

# КЕГЭ № 17621 Основная волна 19.06.24 (Уровень: Базовый)
# Миша заполнял таблицу истинности логической функции F = ¬(x→z) ∨ (y ≡ w) ∨ y
'''
print('x y z w')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = (not(x <= z)) or (y == w) or y
                if F == 0:
                    print(x, y, z, w)
'''

# КЕГЭ № 6598 Пробник ИМЦ СПб (Уровень: Базовый)
#
# Логическая функция F задаётся
# выражением ((x → w) ∧ (¬y → z)) → ((z ≡ x) ∨ (w ∧ ¬y))
'''
print('x y z w')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((x <= w) and ((not y) <= z)) <= ((z == x) or (w and (not y)))
                if F == 0:
                    print(x, y, z, w)
'''


# № 18483 (Уровень: Базовый) 🫰
# Логическая функция F задаётся выражением ((y → w) ≡ (x → ¬z)) ∧ (x ∨ w).
'''
print('x y z w F')
for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((y <= w) == (x <= (not z))) and (x or w)
                if F == 0:
                    print(x, y, z, w, int(F))

for x in 0, 1:
    for y in 0, 1:
        for z in 0, 1:
            for w in 0, 1:
                F = ((y <= w) == (x <= (not z))) and (x or w)
                if F == 1:
                    print(x, y, z, w, int(F))
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# В начальный момент Черепаха находится B начале координат, её голова направлена
# вдоль положительного направления оси ординат, хвост опущен.

# Черепахе был дан для исполнения следующий алгоритм:
# Повтори 2 [Вперёд 10 Направо 90 Вперёд 18 Направо 90]
# Поднять хвост
# Вперёд 5 Направо 90 Вперёд 7 Налево 90
# Опустить хвост
# Повтори 2 [Вперёд 10 Направо 90 Вперёд 7 Направо 90].

# Определите, сколько точек с целочисленными координатами будут находиться
# внутри объединения фигур, ограниченных заданными алгоритмом линиями,
# включая точки на линиях.

'''
import turtle as t
t.screensize(-2000, 2000)
t.tracer(0)  # Отключает анимацию отрисовки
t.left(90)
l = 50

for _ in range(2):
    t.forward(10 * l)
    t.right(90)
    t.forward(18 * l)
    t.right(90)

t.up()

t.fd(5 * l)
t.rt(90)
t.fd(7 * l)
t.lt(90)

t.down()

t.color('green')
for _ in range(2):
    t.forward(10 * l)
    t.right(90)
    t.forward(7 * l)
    t.right(90)

t.up()
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x * l, y * l)
        t.dot(3, 'red')

t.update()
t.done()
'''


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 25]
# КЕГЭ  = []
# на следующем уроке:

