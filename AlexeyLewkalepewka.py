# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

'''
import time
start = time.time()

"""
def divisors(x):
    div = []
    for j in range(1, x+1):
        if x % j == 0:
            div.append(j)
    return div
"""

def divisors(x):
    div = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            # div.append(j)
            # div.append(x // j)
            div += [j, x//j]
    return sorted(set(div))


print(divisors(24))  # [1, 2, 3, 4, 6, 8, 12, 24]
print(divisors(100_000_000))

print(time.time() - start)  # 2.8022 > 0.000367
'''

# def divisors(x):
#     div = []
#     for j in range(1, int(x**0.5)+1):
#         if x % j == 0:
#             div += [j, x//j]
#     return sorted(set(div))


# Тип 13 №3550
'''
from ipaddress import *
net = ip_network('142.9.227.146/255.255.224.0', 0)
print(net)  # 142.9.224.0/19
'''


# Тип 13 №29119
# Для узла с IP-адресом 98.162.71.123 адрес сети равен 98.162.71.112.
# Чему равен последний (самый правый) байт маски?
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.123/{mask}', 0)
    print(net, net.netmask)
    # 98.162.71.112/28 255.255.255.240
'''
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.123/{mask}', 0)
    if str(net) == f'98.162.71.112/{mask}':
        print(str(net.netmask).split('.')[-1])
'''

# Тип 13 №15922
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.94/{mask}', 0)
    print(net, net.netmask)
    # 98.162.64.0/18 255.255.192.0
    # 98.162.64.0/19 255.255.224.0
    # 98.162.64.0/20 255.255.240.0
    # 98.162.64.0/21 255.255.248.0
'''

# Тип 13 №16888
# Для узла с IP-адресом 98.162.71.94 адрес сети равен 98.162.71.64.
# Чему равно наименьшее количество возможных адресов в этой сети?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.94/{mask}', 0)
    print(net, net.num_addresses)
    # 98.162.71.64/26 64
    # 98.162.71.64/27 32
'''


# Тип 13 №69891
# Сеть задана IP-адресом 106.184.0.0 и маской сети 255.248.0.0.
# Сколько в этой сети IP-адресов, для которых сумма
# единиц в двоичной записи IP-адреса не кратна 2?
# В ответе укажите только число.
'''
from ipaddress import *
net = ip_network('106.184.0.0/255.248.0.0', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 2 != 0:
        cnt += 1
print(cnt)
'''


# Тип 13 №17376
# Узлы с IP-⁠адресами 98.162.78.100 и 98.162.78.90 находятся в одной сети.
# Чему равно наибольшее количество возможных единиц в маске этой сети?
'''
from ipaddress import *
R = []
for mask in range(32+1):
    net1 = ip_network(f'98.162.78.100/{mask}', 0)
    net2 = ip_network(f'98.162.78.90/{mask}', 0)
    if net1 == net2:
        R.append(mask)
print(max(R))
'''


# № 12467 PRO100 ЕГЭ 29.12.23 (Уровень: Средний)
# Адрес сети равен 183.192.A.0, где А — некоторое допустимое для
# записи адреса сети число, а маска сети 255.255.252.0.
#
# Определите минимальное значение А, для которого для всех IP-адресов этой сети
# в двоичной записи IP-адреса
# суммарное количество единиц в правых двух байтах больше трёх.
'''
from ipaddress import *
for A in range(0, 255+1):
    net = ip_network(f'183.192.{A}.0/255.255.252.0', 0)
    if all(f'{ip:b}'[16:].count('1') > 3 for ip in net):
        print(A)
        break
'''


# № 11791 (Уровень: Базовый)
# Сеть, в которой содержится узел с IP-адресом 246.51.128.202, задана
# маской сети 255.255.A.0, где A - некоторое допустимое для записи маски число.
# Определите минимальное значение A, для которого для всех IP-адресов этой сети
# в двоичной записи IP-адреса суммарное количество нулей в левых двух байтах
# не более суммарного количества нулей в правых двух байтах.
# В ответе укажите только число.

from ipaddress import *
for mask in range(16, 24+1):
    net = ip_network(f'246.51.128.202/{mask}', 0)
    if all(f'{ip:b}'[:16].count('0') <= f'{ip:b}'[16:].count('0') for ip in net):
        print(str(net.netmask).split('.')[2])
        break


# for A in [0, 128, 192, 224, 240, 248, 252, 254, 255]:


# todo: Разобрать № 12451 (Уровень: Средний) (у всех узлов)
# Сеть, в которой содержится узел с IP-адресом 246.81.65.A, задана маской сети 255.255.255.224,
# где A - некоторое допустимое для записи IP-адреса число.
# Определите количество значений A, для которых у всех узлов в этой сети
# в двоичной записи количество нулей в третьем байте больше, чем в четвертом.
'''
from ipaddress import *
cnt = 0
for A in range(0, 255+1):
    net = ip_network(f'246.81.65.{A}/255.255.255.224', 0)
    if all(f'{ip:b}'[16:24].count('0') > f'{ip:b}'[24:].count('0') for ip in net):
        cnt += 1
print(cnt)
'''


# todo Разобрать Тип 13 №64943
# Узлы с IP-адресами 202.3.20.24 и 202.3.27.11 находятся в одной сети.
# Укажите наименьшее возможное количество принадлежащих этой сети IP-адресов,
# в двоичной записи которых чётное число единиц.
'''
from ipaddress import *

for mask in range(32+1):
    net1 = ip_network(f'202.3.20.24/{mask}', 0)
    net2 = ip_network(f'202.3.27.11/{mask}', 0)
    k = 0
    if net1 == net2:
        print(net1)
        # for ip in net1:
        #     s = f'{ip:b}'
        #     if s.count('1') % 2 == 0:
        #         k += 1
        # print(k)
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [5, 8, 12, 13, 14]
# КЕГЭ  = []
# на следующем уроке:
# todo Разобрать Тип 13 №68246
