# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# № 17624 Основная волна 19.06.24 (Уровень: Базовый)
# Укажите минимальное число R, которое превышает число 75
# и может являться результатом работы данного алгоритма.
'''
R = []
for n in range(1, 10000):
    s = f'{n:b}'  # s = bin(n)[2:]  # 1. Строится двоичная запись числа N.
    # s = s + str(s.count('1') % 2)
    s = s + str(sum([int(x) for x in s]) % 2)
    s = s + str(sum(map(int, s)) % 2)
    r = int(s, 2)
    if r > 75:
        R.append(r)
print(min(R))
'''
import readline

'''
s = '12345'
print(list(map(int, s)))  # <map object at 0x1021db970>
'''


# № 17546 Основная волна 08.06.24 (Уровень: Базовый)
'''
R = []
for n in range(1, 10000):
    s = f'{n:b}'
    if n % 2 == 0:
        s = '10' + s  # если число чётное, то к двоичной записи слева дописывается 10;
    else:
        s = '1' + s + '01'
    r = int(s, 2)
    # Укажите максимальное число R,
    # которое может быть результатом данного алгоритма, при условии, что N не больше 12.
    if n <= 12:
        R.append(r)
print(max(R))
'''


# № 17518 Основная волна 07.06.24 (Уровень: Базовый)
# Укажите минимальное число N, после обработки которого
# с помощью этого алгоритма получается число R, большее 50.
'''
R = []
for n in range(1, 10000):
    s = f'{n:b}'
    if s.count('1') % 2 == 0:  # если сумма цифр двоичной записи числа чётная,
        s = '10' + s[2:] + '0'  # то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 10
    else:
        s = '11' + s[2:] + '1'
    r = int(s, 2)
    if r > 50:
        R.append(n)
print(min(R))
'''


# № 16371 ЕГКР 27.04.24 (Уровень: Базовый)
# Укажите минимальное число R, не меньшее,
# чем 195, которое может быть получено в результате работы алгоритма.
'''
R = []
for n in range(1, 10000):
    s = f'{n:b}'
    if n % 3 == 0:
        s = s + s[-2:]
    else:  # если число N на 3 не делится,
        x = (n % 3) * 3  # то остаток от деления умножается на 3,
        s = s + f'{x:b}'  # переводится в двоичную запись и дописывается в конец числа.
    r = int(s, 2)
    if r >= 195:
        R.append(r)
print(min(R))
'''


# № 9828 Основная волна 27.06.23 (Уровень: Средний)
# Укажите максимальное число N, после обработки которого
# с помощью этого алгоритма получается число R, меньшее 199.
'''
from string import *
alphabet = digits + ascii_uppercase
# print(alphabet)  # 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ

def convert(n, b):  # n - number, b - base
    r = ''
    while n > 0:
        # r = str(n % b) + r
        r = alphabet[n % b] + r
        n //= b
    return r


R = []
for n in range(1, 10000):
    s = convert(n, 3)
    if n % 3 == 0:
        s = '1' + s + '02'
    else:
        x = (n % 3) * 4
        s = s + convert(x, 3)
    r = int(s, 3)
    if r < 199:
        R.append(n)
print(max(R))
'''

# print(bin(255)[2:])
# print(bin(10)[2:].zfill(8))

# № 688 Джобс 16.11.2020 (Уровень: Средний)
# Автомат обрабатывает натуральное число N (0≤N≤255) по следующему алгоритму:
# 1) Строится восьми битная двоичная запись числа N.
# 2) Удаляются средние 4 цифры.
# 3) Полученное число переводится в десятичную запись и выводится на экран.
#
# Какое наибольшее число, меньшее 110, после обработки автоматом даёт результат 7?
'''
R = []
for n in range(0, 255+1):
    s = f'{n:b}'.zfill(8)
    s = s[:2] + s[-2:]
    r = int(s, 2)
    if n < 110 and r == 7:
        R.append(n)
print(max(R))
'''
# Ответ: 107

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ  = []
# на следующем уроке:
