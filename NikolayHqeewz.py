# region –î–æ–º–∞—à–∫–∞: ******************************************************************

'''
import turtle as t
t.screensize(-10000, 10000)
t.tracer(0)
t.left(90)
l = 20
for i in range(2):
    t.fd(8 * l)
    t.rt(90)
    t.fd(18 * l)
    t.rt(90)
t.up()
t.fd(4 * l)
t.rt(90)
t.fd(10 * l)
t.lt(90)
t.down()
for i in range(2):
    t.fd(17 * l)
    t.rt(90)
    t.fd(7 * l)
    t.rt(90)
t.up()
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x * l, y * l)
        t.dot(2, 'red')
t.update()
t.done()
'''

# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************

# –°–ø–∏—Å–∫–∏ list()
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

# 1. –°–æ–¥–µ—Ä–∂–∞—Ç –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
# 2. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –∏–º–µ–µ—Ç –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä (–∏–Ω–¥–µ–∫—Å), –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å –Ω—É–ª—è
# 3. –ò–Ω–¥–µ–∫—Å—ã –º–æ–∂–Ω–æ —Å—á–∏—Ç—ã–≤–∞—Ç—å —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å -1
# 4. –ß–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã –º—ã –º–æ–¥–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–æ–≤, –Ω–æ –∏ –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö

print(M[0])  # a
print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ú: {M[0]}')  # a
print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ú: {M[-1]}')  # e
M[0] = 'A'
print(M)  # ['A', 'b', 'c', 'd', 'e']
'''


# –°—Ä–µ–∑—ã —Å–ø–∏—Å–∫–æ–≤
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

# M[start:stop-1:step]
print(M[1:3])  # ['b', 'c']
print(M[:3])  # ['a', 'b', 'c'] - –≤—Å–µ, —á—Ç–æ —Å–ª–µ–≤–∞ –¥–æ —Ç—Ä–µ—Ö (–Ω–µ –≤–∫–ª—é—á–∞—è)
print(M[2:])  # ['c', 'd', 'e'] - –≤—Å–µ, —á—Ç–æ —Å–ø—Ä–∞–≤–∞ (–≤–∫–ª—é—á–∞—è)
print(M[:])  # ['a', 'b', 'c', 'd', 'e'] - –≤—ã–≤–µ–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
print(M[0::2])  # ['a', 'c', 'e'] - –≤—ã–≤–µ–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(M[1::2])  # ['b', 'd'] - –≤—ã–≤–µ–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –Ω–µ—á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(M[::-1])  # ['e', 'd', 'c', 'b', 'a'] - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
'''

# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤
'''
M = [2, 3, 3, 4, 2, 6, 5, 5]
L = ['2', '3', '3', '4', '2', '6', '5', '5']
B = M + L
print(len(M))  # 8 - –§—É–Ω–∫—Ü–∏—è len() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º).
print(sum(M))  # 30 - –§—É–Ω–∫—Ü–∏—è sum() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞
print(max(M), min(L))  # 6, 2
print(max(L), min(L))  # 6 2
# print(max(B), min(B))  # - –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞, –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
print(sorted(M))  # [2, 2, 3, 3, 4, 5, 5, 6] - –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
print(sorted(M, reverse=True))  # [6, 5, 5, 4, 3, 3, 2, 2] - –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
print(set(M))  # {2, 3, 4, 5, 6} - —É–±–∏—Ä–∞–µ—Ç –∫–æ–ø–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–ø–∏–∏ 
'''


# üñ• –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠  #tpy
'''
# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3]
my_list.append(4)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
my_list = [1, 2, 3]
my_list += [4, 5]
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4, 5]


# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 4]
my_list.reverse()
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
my_list = [1, 2, 3, 4]
my_list = my_list[::-1]
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]


# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 2, 3, 4, 2]
count_of_twos = my_list.count(2)
print(count_of_twos)  # –í—ã–≤–æ–¥: 3


# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 2, 4]
my_list.remove(2) # –ø–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:
my_list = [1, 2, 3, 2, 4]
del my_list[1]  # –∏–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]


# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ. –ü—Ä–∏–º–µ—Ä:
my_list = [1, 2, 3, 2, 4]
index_of_two = my_list.index(2)
print(index_of_two)  # –í—ã–≤–æ–¥: 1


# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True. –ü—Ä–∏–º–µ—Ä:
my_list = [4, 1, 3, 2]
my_list.sort()
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list.sort(reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
my_list = [4, 1, 3, 2]
my_list = sorted(my_list)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list = sorted(my_list, reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤
# M = [—á—Ç–æ –∫–ª–∞–¥–µ–º | –æ—Ç–∫—É–¥–∞ —ç—Ç–æ –±–µ—Ä–µ–º | –ø—Ä–∏ –∫–∞–∫–æ–º —É—Å–ª–æ–≤–∏–∏ *]
'''
M = [x for x in range(10)]  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

chet = [x for x in M if x % 2 == 0]  # [0, 2, 4, 6, 8]

import random
R = [random.randint(0, 100) for i in range(10)]
# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç 0 –¥–æ 100 —Å –¥–ª–∏–Ω–æ–π 10

copied = [x for x in R if R.count(x) > 1]
print(R, copied)  # –í—ã–≤–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–º–µ—é—â–∏–µ –∫–æ–ø–∏–∏ –≤ —Å–ø–∏—Å–∫–µ R

M = [int(x) for x in open('17.txt')]
print(M)

for s in open('9.txt'):
    M = [int(x) for x in s.split()]
    print(M)
'''
# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************

# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = [2, 6]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
