# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Тип 13 №4595
# По заданным IP-адресу узла и маске определите адрес сети.
# IP-адрес узла: 224.9.195.133
# Маска: 255.255.192.0

# Адрес сети = IP-адрес узла & Маска сети
# print(bin(5))

# ip адрес это четыре числа на каждое из которых выделено по 1 байту (по 8 битов)

# 11111111_2 -> 255_10

# Маска сети имеет вид: 111111...0000 (32 бита)

'''
from ipaddress import *
net = ip_network('224.9.195.133/255.255.192.0', 0)
print(net)  # 224.9.192.0/18 - 18 кол-во единиц в маске сети
print('1' * 18 + '0' * 14)  # 11111111111111111100000000000000
print([f'{int(x):b}'.zfill(8) for x in str(net.netmask).split('.')])  # 255.255.192.0
'''


# Тип 13 №16441
# Для узла с IP-адресом 98.162.71.94 адрес сети равен 98.162.71.64.
# Чему равно наибольшее возможное значение последнего (самого правого) байта маски?
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.94/{mask}', 0)
    print(net, net.netmask)
    # 98.162.71.64/26 255.255.255.192
    # 98.162.71.64/27 255.255.255.224
'''
'''
from ipaddress import *
for mask in range(32+1):
    net = ip_network(f'98.162.71.94/{mask}', 0)
    if str(net) == f'98.162.71.64/{mask}':
        print(str(net.netmask).split('.')[3])
'''
# Ответ: 224


# Тип 13 №64943
# Узлы с IP-адресами 202.3.20.24 и 202.3.27.11 находятся в одной сети.
# Укажите наименьшее возможное количество
# принадлежащих этой сети IP-адресов, в двоичной записи которых чётное число единиц.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'202.3.20.24/{mask}', 0)
    net2 = ip_network(f'202.3.27.11/{mask}', 0)
    if net1 == net2:
        print(net1)
'''


# Тип 13 №27011
# Узлы с IP-адресами 84.77.95.123 и 84.77.96.123 находятся в одной сети.
# Укажите наибольшее возможное значение третьего слева байта маски этой сети.
# Ответ запишите в виде десятичного числа.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'84.77.95.123/{mask}', 0)
    net2 = ip_network(f'84.77.96.123/{mask}', 0)
    if net1 == net2:
        print(net1.netmask)
        # 255.254.0.0
        # 255.255.0.0
        # 255.255.128.0
        # 255.255.192.0
'''
# Ответ: 192


# Тип 13 №60255
# Сеть задана IP-адресом 192.168.32.160 и маской сети 255.255.255.240.
# Сколько в этой сети IP-адресов, для которых сумма единиц в двоичной записи IP-адреса чётна?
'''
from ipaddress import *
net = ip_network('192.168.32.160/255.255.255.240', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 2 == 0:
        cnt += 1
print(cnt)
'''


# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 14]
# КЕГЭ  = []
# на следующем уроке:
