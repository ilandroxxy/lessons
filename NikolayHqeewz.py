# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

x = 5  # Переменная - это удобный способ взаимодействия с данными через имя

# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения
print(type(a))  # <class 'int'>
a: int = 5  # Явная типизация

b = 5.0  # float (число с плавающей точкой) - вещественные числа (дроби)
print(7 / 2)  # 3.5
print(4 / 2)  # 2.0

c = '5'  # str (string) - строковый тип данных, хранит в себе символы, буквы и тд
print(a * 4, c * 4)  # 20 5555 - дублировали 4 раза
print('hello ' * 4)  # hello hello hello hello
print('Hello, ' + 'world!')  # Hello, world! - Конкатенация строк (склеивание)

s = '5' + '4' * 10
print(s)   # 54444444444


d1 = True  # bool (Boolean) - Булевой алгебры (Математическая логика)
d0 = False
print(4 < 10)  # True
'''


# Типы данных коллекций (последовательности)
'''
A = [1, 2, 3]  # list (список)
# 1. Хранит в себе неограниченное кол-во элементов разных типов данных
# 2. Каждый элемент имеет порядковый номер (индекс) начинающийся с 0
# 3. Через индексы можно не только брать элементы, но и изменять их


B = (1, 2, 3)  # tuple (кортеж)
# 1. Идентична спискам, но нельзя изменять элементы кортежа

C = {1, 2, 3, 2, 3}  # set (множество)
# 1. В множестве не может храниться двух одинаковых элементов - копии удаляются
print(C)  # {1, 2, 3}


D = {'один': '1', 'два': '2', 'три': '3'}  # dict (словарь)
# В словарях элемент состоит из двух частей: ключ и значение
# Доступ к значению элемента осуществляется через его индивидуальный ключ
print(D['один'])  # 1
D['один'] = 'one'
print(D)  # {'один': 'one', 'два': '2', 'три': '3'}

for key, value in D.items():
    print(key, value)
    # один one
    # два 2
    # три 3
'''

'''
M = [1, 2.0, '2', True, 2+2, 7/2, '2'*10, 4 < 10, [1, 2, 3], (1, 2, 3), {1, 2, 3}, {'один': 'one', 'два': '2', 'три': '3'}]
for x in M:
    print(x, type(x))
    # 1 <class 'int'>
    # 2.0 <class 'float'>
    # 2 <class 'str'>
    # True <class 'bool'>
    # 4 <class 'int'>
    # 3.5 <class 'float'>
    # 2222222222 <class 'str'>
    # True <class 'bool'>
    # [1, 2, 3] <class 'list'>
    # (1, 2, 3) <class 'tuple'>
    # {1, 2, 3} <class 'set'>
    # {'один': 'one', 'два': '2', 'три': '3'} <class 'dict'>
'''


# Конвертация типов данных
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>

a = int(a)
print(a, type(a))  # 5 <class 'int'>


A = [1, 2, 3, 2, 3]
print(A, type(A))  # [1, 2, 3, 2, 3] <class 'list'>

A = tuple(A)
print(A, type(A))  # (1, 2, 3, 2, 3) <class 'tuple'>

A = set(A)
print(A, type(A))  # {1, 2, 3} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3] <class 'list'>
'''

# Ввод данных с клавиатуры
'''
s = input('Введите строку: ')  # - ввод с клавиатуры строки
x = int(input('Введите число: '))  # - ввод числа с клавиатуры
print(s*2, x*2)
'''

# Пример работы с f-строкой
'''
weather = input('Введите погодку: ')
temperature = int(input('Введите температуру: '))
# Сегодня облачно, но температура 24 градуса!
print('Сегодня ', weather, ', но температура ', temperature, ' градуса!')
print('Сегодня ' + weather + ', но температура ' + str(temperature) + ' градуса!')
print('Сегодня {}, но температура {} градуса!'.format(weather, temperature))
print(f'Сегодня {weather}, но температура {temperature} градуса!')
'''

# Комментарии:
"""
# - однострочный комментарий

'''
- многострочный комментарий
'''

# region Занятие 14.06.2024: Типы данных переменных
print()
# endregion Занятие 14.06.2024: Типы данных переменных
"""

# Базовая арифметика
'''
# a = 7
# b = 2
a, b = 7, 2

print(f'{a} + {b} = {a+b} \n'
      f'{a} - {b} = {a-b} \n'
      f'{a} * {b} = {a*b}')

print()

print(f'{a} + {b} = {a+b}')
print(f'{a} - {b} = {a-b}')
print(f'{a} * {b} = {a*b}')

print()  # В каждой функции print() есть переход на новую строку '\n'
'''


# Деления
'''
print(f'{a} / {b} = {a/b} \n'  # 3.5 - вещественное деление (результат всегда float) 
      f'{a} // {b} = {a//b} \n'  # 3 - взятие только целой части от деления 
      f'{a} % {b} = {a%b}')  # 1 - взятие остатка от деления

n = 152
print(n % 2 == 0)  # Число четное, Число делится на 2, Число кратное 2
print(n % 2 != 0)  # Число нечетное, Число не делится на 2, Число не кратное 2
print(n % 10 == 5)  # Число оканчивается на 5
print(n % 100 == 15)  # Число оканчивается на 15

print()

print(f'Возведем число {a} в степень {b}: {a ** b}')
# Возведем число 7 в степень 2: 49

import math
print(math.sqrt(16))  # 4.0

print(f'Взять квадратный корень от числа 16: {16 ** 0.5}')
# Взять квадратный корень от числа 16: 4.0
print(f'Взять кубический корень от числа 27: {27 ** (1/3)}')
# Взять кубический корень от числа 27: 3.0
'''

# Напишите программу, которая принимает два числа: длину и ширину прямоугольника.
# Выведите его периметр и площадь.
'''
a = int(input())
b = int(input())
print(a * 2 + b * 2)
print(a * b)
'''

# Напишите программу, которая запрашивает у пользователя четырёхзначное число
# и вычисляет произведение и сумму его цифр. Необходимо сначала вывести произведение, затем сумму.
'''
n = int(input())  # 4352
a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10
print(a, b, c, d)
print(a * b * c * d)
print(a + b + c + d)

'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ  = []
# на следующем уроке:
