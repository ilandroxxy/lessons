# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Коротко про индексы в последовательностях
'''
s = 'abcde'  # str (строка)
T = ('a', 'b', 'd', 'e', 'e')   # tuple (кортеж)
S = {'a', 'b', 'b', 'c', 'd', 'e'}  # set (множество)
print(S)  # {'c', 'a', 'd', 'e', 'b'} - убирает копии элементов

# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']  # list (список)
# -i -5   -4   -3   -2   -1

print(f'Первый элемент списка М: {M[0]}')
print(f'Последний элемент списка М: {M[4]}')
print(f'Последний элемент списка М: {M[-1]}')

M[0], M[-1] = M[-1], M[0]
print(M)  # ['e', 'b', 'c', 'd', 'a']
'''


# Срезы списков и строк (последовательность)
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1


# СРЕЗ[START : STOP-1 : STEP]

print(M[2:4])  # ['c', 'd'] - от 2 по 4 индексы, но не берем конец
print(M[:4])  # ['a', 'b', 'c', 'd'] - все элементы до 4 индекса, но не берем конец
print(M[2:])  # ['c', 'd', 'e'] - начиная со 2 до конца

# понадобится в 5 номере
print(M[2:])  # ['c', 'd', 'e'] - все элементы кроме первых двух
print(M[-2:])  # ['d', 'e'] - последние два элемента

print(M[:])  # ['a', 'b', 'c', 'd', 'e']
print(M[::])  # - все элементы без ограничений

print(M[::2])  # ['a', 'c', 'e'] - все элементы под четными индексами
print(M[1::2])  # ['b', 'd'] - все элементы под нечетными индексами

print(M[::-1])  # ['e', 'd', 'c', 'b', 'a'] - все элементы в обратном порядке 
'''


# Переводы в различные системы счисления
'''
n = 8  # 1000

# Перевод в двоичную запись
print(bin(n)[2:])  # '1000'
print(f'{n:b}')  # '1000'
print(int('1000', 2))  # 8


# Перевод в восьмеричную запись
print(oct(n)[2:])  # '10'
print(f'{n:o}')  # '10'
print(int('10', 8))  # 8


# Перевод в шестнадцатеричную запись
print(hex(n)[2:])  # '8'
print(f'{n:x}')  # '8'
print(int('8', 16))  # 8
# ValueError: int() base must be >= 2 and <= 36, or 0
'''


# Универсальная функция перевода в различные системы счисления
'''
alp = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
def convert(n, b):
    r = ''
    while n > 0:
        r += alp[n % b]
        n //= b
    return r[::-1]


n = 10**9
print(convert(n, 2))  # 111011100110101100101000000000
print(int('111011100110101100101000000000', 2))  # 10**9

print(convert(n, 8))  # 7346545000
print(int('7346545000', 8))  # 10**9

print(convert(n, 16))  # 3B9ACA00
print(int('3B9ACA00', 16))  # 10**9

print(convert(n, 3))  # 2120200200021010001
print(int('2120200200021010001', 3))  # 10**9
'''


# № 23742 Демоверсия 2026 (Уровень: Базовый)
'''
for n in range(1, 10000):
    b = bin(n)[2:]  # 1. Строится двоичная запись числа N.
    # b = f'{n:b}'
    if n % 3 == 0:  # а) если число N делится на 3
        b = b + b[-3:]  # то к этой записи дописываются её три последние двоичные цифры
    else:
        x = (n % 3) * 3  # то остаток от деления умножается на 3
        b = b + bin(x)[2:]  # переводится в двоичную запись и дописывается в конец числа.
    r = int(b, 2)  # Результат переводится в десятичную систему и выводится на экран.
    if r >= 200:
        print(n)
        break
'''


# № 23364 Резервный день 19.06.25 (Уровень: Базовый)
'''
def convert(n, b):
    r = ''
    while n > 0:
        r += str(n % b)
        n //= b
    return r[::-1]


R = []
for n in range(1, 10000):
    b = convert(n, 3)
    if n % 3 == 0:
        b = '1' + b + '02'
    else:
        x = (n % 3) * 4
        b = b + convert(x, 3)
    r = int(b, 3)
    if r < 100:
        R.append(n)

print(max(R))
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6]
# КЕГЭ = []
# на следующем уроке: Немного порешать 5 номера


# Первый пробник 21.12.24:
# Женя 5/7 -> 34 вторичных баллов +[2, 5, 8, 12, 14] -[6, 10]

# Второй пробник 28.02.25:
# Женя 10/29 -> 51 вторичных баллов +[2, 5, 6, 10, 13, 14, 15, 16, 23, 25] -[8, 12]
