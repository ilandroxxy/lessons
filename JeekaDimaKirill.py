# region Домашка: ******************************************************************

# https://education.yandex.ru/ege/task/19a9591e-4b7d-4907-8577-46f40d63dc7d
# Определите в 49-ричной записи числа количество цифр с числовым значением, превышающим 9:
# 15 * 2401**1500 - 10 * 343**1200 + 40 * 49**1000 - 35 * 7**850 - 4805
'''
def convert(n, b):
    R = []
    while n > 0:
        R.append(n % b)
        n //= b
    return R[::-1]


a = 15 * 2401**1500 - 10 * 343**1200 + 40 * 49**1000 - 35 * 7**850 - 4805
a_49 = convert(a, 49)
# for digit in a_49:
#     print(digit)
#     if digit > 9:
#         cnt+=1
# print(cnt)

M = [x for x in a_49 if x > 9]
print(len(M))
'''
# #Answer:2202


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


# Пару слов про 13 номер
'''
# бит   8   8 8  8  (32 бита)
# байт  1   1 1  1  (4 байта)
# ip = 111.22.3.44
# 0 <= x <= 255, потому что 255_10 -> 11111111_2

# 111_2 = 1*2**2 + 1*2**1 + 1*2**0
# 111_10 = 1*10**2 + 1*10**1 + 1*10**0

# Адрес сети = Узел сети & Маска сети
# & - побитовая конъюнкция
print(14 & 5)  # 4

print(f'{14:b}')  # 1110
print(f'{5:b}')   # 0101
#    14 & 5 =     # 0100  -> 4_10 

# from ipaddress import *
# Адрес сети = ip_network('Узел/Маска')


# Варианты задач
# 1. Есть узел и Маска - ищем Адрес сети и ip адреса
# 2. Есть узел и Адрес сети - ищем что-то про маску
# 3. Есть два узла - ищем через маску и адрес сети что-то


# Маска сети имеет длину 32 бита и определенный вид:
# [Единиц: 0, Нулей: 32] 000000....000
# [Единиц: 1, Нулей: 31] 100000....000
# [Единиц: 2, Нулей: 30] 110000....000
# [Единиц: 3, Нулей: 29] 111000....000
# [Единиц: 4, Нулей: 28] 111100....000
# [Единиц: 5, Нулей: 27] 111110....000
# ....
# [Единиц: 31, Нулей: 1] 111111....110
# [Единиц: 32, Нулей: 0] 111111....111

# for mask in range(0, 32+1):
#     print(mask)
'''

# 255.255.255.248 - маска сети в десятичной записи
# 11111111.11111111.11111111.11111000 - маска сети в двоичной записи
# 122.159.136.144/29 - 29 это кол-во единиц в двоично записи маски


# № 16324 Открытый вариант 2024 (Уровень: Базовый)
# Сеть задана IP-адресом 122.159.136.144 и маской сети 255.255.255.248.
# Сколько в этой сети IP-адресов, для которых количество единиц
# в двоичной записи IP-адреса не кратно 4?
'''
from ipaddress import *
net = ip_network('122.159.136.144/255.255.255.248', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s.count('1') % 4 != 0:
        cnt += 1
print(cnt)
'''
# cnt = 0
# for ip in net:
#     cnt += 1
#     print(cnt, ip)
#
# print(net.num_addresses)


# № 14358 (Уровень: Базовый)
# Сеть задана IP-адресом 192.168.32.64 и сетевой маской 255.255.255.192.
# Сколько в этой сети IP-адресов, двоичная запись которых оканчивается на 101?
'''
from ipaddress import *
net = ip_network('192.168.32.64/255.255.255.192', 0)
cnt = 0
for ip in net:
    s = f'{ip:b}'
    if s[-3:] == '101':
        cnt += 1
print(cnt)
'''
# s = 11100001.11011111.11100111.11000101


# № 21412 Досрочная волна 2025 (Уровень: Базовый)
# Адрес сети и широковещательный адрес не могут быть использованы для адресации сетевых устройств.
# Сеть задана IP-адресом одного из входящих в неё узлов 143.168.72.213 и сетевой маской 255.255.255.240.
# Определите наибольший IP-адрес данной сети, который может быть присвоен компьютеру.
# В ответе укажите найденный IP-адрес без разделителей.
'''
from ipaddress import *
net = ip_network('143.168.72.213/255.255.255.240', 0)
for ip in net:
    print(ip)
# 14316872222 - первый и последние не берутся
'''


# № 10150 (Уровень: Базовый)
# Для узла с IP-адресом 145.192.94.230 адрес сети равен 145.192.80.0.
# Чему равен третий слева байт маски?
'''
from ipaddress import *
for mask in range(0, 32+1):
    net = ip_network(f'145.192.94.230/{mask}', 0)
    if '145.192.80.0' in str(net):
        print(net, mask, net.netmask)  # 145.192.80.0/20 20 255.255.240.0
'''


# № 10161 (Уровень: Средний)
# Два узла, находящиеся в одной сети, имеют IP-адреса 211.115.61.154 и 211.115.59.137.
# Укажите наибольшее возможное значение третьего слева байта маски сети.
'''
from ipaddress import *
for mask in range(32+1):
    net1 = ip_network(f'211.115.61.154/{mask}', 0)
    net2 = ip_network(f'211.115.59.137/{mask}', 0)
    if net1 == net2:
        print(net1.netmask)
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 13, 14]
# КЕГЭ = []
# на следующем уроке:
