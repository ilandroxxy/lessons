# region –î–æ–º–∞—à–∫–∞: ******************************************************************

'''
s = input()
print(f"–°–∏–º–≤–æ–ª + –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è {s.count('+')}—Ä–∞–∑")
print("–°–∏–º–≤–æ–ª * –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è", s.count("*"), "—Ä–∞–∑")
'''

# –ü–æ–∏—Å–∫ –¥–ª–∏–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
'''
s = input()  # –û—à–∏–±–∫–∏ ‚Äî —ç—Ç–æ –Ω–µ–∏–∑–±–µ–∂–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—É—á–µ–Ω–∏—è –∏ —Ä–æ—Å—Ç–∞
maxi = 0
for word in s.split():
    # print(len(word), word)
    if maxi < len(word):
        maxi = len(word)
print(maxi)
'''

'''
n = int(input())
b = 3
r = ''  # –°–æ–∑–¥–∞–ª–∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
while n > 0:
    r += str(n % b)
    n //= b
r = r[::-1]
print(r)
'''
# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************

# –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å —Å–ø–∏—Å–∫–∞–º–∏
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(M[0])  # –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ M
print(M[-1])  # –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ M

M[0], M[-1] = 'A', 'E'
print(M)  # ['A', 'b', 'c', 'd', 'E']

# 1. –°–ø–∏—Å–∫–∏ –º–æ–≥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –º–∞—Å—Å–∏–≤–æ–≤ –∏ —Å—Ç—Ä–æ–∫)
# 2. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä: –∏–Ω–¥–µ–∫—Å
# 3. –ò–Ω–¥–µ–∫—Å—ã –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å 0 –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å -1
# 4. –ß–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã –º—ã –º–æ–∂–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –Ω–æ –∏ –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ—Ä—Ç–µ–∂–µ–π –∏ —Å—Ç—Ä–æ–∫)

B = ('a', 'b', 'c', 'd', 'e')  # tuple() - –ö–æ—Ä—Ç–µ–∂
'''


# –°—Ä–µ–∑—ã —Å–ø–∏—Å–∫–æ–≤
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(M[2:4])  # ['c', 'd']
print(M[2:])  # ['c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞—á–∏–Ω–∞—è —Å 2 –∏–Ω–¥–µ–∫—Å–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
print(M[:4])  # ['a', 'b', 'c', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ 4 –∏–Ω–¥–µ–∫—Å–∞ (–Ω–µ –≤–∫–ª—é—á–∞—è)
print(M[:])  # ['a', 'b', 'c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
print(M[::])  # ['a', 'b', 'c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
print(M[::2])  # ['a', 'c', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–æ—è—â–∏–µ –Ω–∞ —á–µ—Ç–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–∞—Ö
print(M[1::2])  # ['b', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–æ—è—â–∏–µ –Ω–∞ –Ω–µ—á–µ—Ç–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–∞—Ö

# –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–µ –Ω–∞ –ï–ì–≠
print(M[2:])  # –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö
print(M[1:-1])  # –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ 
print(M[::-1])  # –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–æ–±–æ—Ä–æ—Ç (–≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ)
'''

# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤
'''
M = [1, 2, 1, 2, 3, 4, 5]

print(len(M))  # 7 - –î–ª–∏–Ω–∞ —Å–ø–∏—Å–∫–∞ –ú (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)
print(sum(M))  # 18 - –°—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ –ú
print(max(M), min(M))  # 5 1 - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã
print(sorted(M))  # [1, 1, 2, 2, 3, 4, 5] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
print(sorted(M, reverse=True))  # [5, 4, 3, 2, 2, 1, 1] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
print(set(M))  # {1, 2, 3, 4, 5} - –£–±–∏—Ä–∞–µ—Ç –∫–æ–ø–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 
'''

# üñ•  –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠  #tpy
#

# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞.
'''
M = [1, 2, 3]
M.append(4)
print(M)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
M = [1, 2, 3]
M += [4, 5]
print(M)  # –í—ã–≤–æ–¥: [1, 2, 3, 4, 5]
'''


# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π.
'''
M = [1, 2, 3, 4]
M.reverse()
print(M)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
M = [1, 2, 3, 4]
M = M[::-1]
print(M)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫.
'''
M = [1, 2, 2, 3, 4, 2]
n = M.count(2)
print(n)  # –í—ã–≤–æ–¥: 3
'''


# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.
'''
M = [1, 2, 3, 2, 4]
M.remove(2)  # –ø–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(M)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:
M = [1, 2, 3, 2, 4]
del M[1]  # –∏–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(M)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]
'''


# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ.
'''
M = [1, 2, 3, 2, 4]
i = M.index(2)
print(i)  # –í—ã–≤–æ–¥: 1
'''


# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏
# –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True.
'''
M = [4, 1, 3, 2]
M.sort()
print(M)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

M.sort(reverse=True)
print(M)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''

# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
'''
M = [4, 1, 3, 2]
M = sorted(M)
print(M)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

M = sorted(M, reverse=True)
print(M)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä [ –ß—Ç–æ –∫–ª–∞–¥–µ–º? | –û—Ç–∫—É–¥–∞ –±–µ—Ä–µ–º? | –ü—Ä–∏ –∫–∞–∫–æ–º —É—Å–ª–æ–≤–∏–∏? ]

M = []
for i in range(10):
    M.append(i)
print(M)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

M = [i for i in range(10)]
print(M)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

M = [i for i in range(10) if i % 2 == 0]
print(M)  # [0, 2, 4, 6, 8]

M = [i ** 2 for i in range(10) if i % 2 == 0]
print(M)  # [0, 4, 16, 36, 64]

print()

from random import randint
N = [randint(0, 100) for i in range(10)]
print(N)

chet = [x for x in N if x % 2 == 0]
nechet = [x for x in N if x % 2 != 0]
print(chet, nechet)

copied = [x for x in N if N.count(x) > 1]
not_copied = [x for x in N if N.count(x) == 1]
print(copied, not_copied)

M = [int(x) for x in open('files/17.txt')]
print(M)

# endregion –£—Ä–æ–∫: ********************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************

# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = []
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
