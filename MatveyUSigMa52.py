# region Домашка: ******************************************************************

'''
import turtle as t  # Подключаем библиотеку с коротким именем t
t.screensize(-2000, 2000)
t.tracer(0)  # Отключаем анимацию отрисовки
t.left(90)  # По условию поворачиваем голову вдоль положительного направления оси
l = 40  # Меняем масштаб отрисовки

# Пишу свой псевдокод:
for i in range(2):
    t.forward(8 * l)
    t.right(90)
    t.forward(18 * l)
    t.right(90)
t.up()
t.forward(4 * l)
t.right(90)
t.forward(10 * l)
t.left(90)
t.down()
for i in range(2):
    t.forward(17 * l)
    t.right(90)
    t.forward(7 * l)
    t.right(90)

t.up()  # Поднимаем хвост отрисовки
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x * l, y * l)
        t.dot(2, 'red')

t.update()  # Для корректной работы .tracer(0)
t.done()  # Зафиксировать окно отрисовки
'''

# print(8*13 + 84*78 - 4*7)

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Тип данных str()

# Хранит в себе символы, буквы, тексты и тд тп

'''
# i  01234
s = 'abcde'

print(s[0])  # Первый элемент строки
print(s[-1])  # Последний элемент строки
'''

# Срезы строк
'''
print(s[2:4])  # cd -
print(s[:4])  # abcd - все, что слева до 4, не включая 4-ый
print(s[2:])  # cde - все, что справа начиная с 2
print(s[::])  # abcde - от левого края до правого края
print(s[0::2])  # ace - Взяли все четные индексы
print(s[1::2])  # bd - Взяли все нечетные индексы
print(s[::-1])  # edcba - Все в обратном порядке
print(s[:-1])  # abcd - Все, кроме последнего
print(s[1:-1])  # bcd - Все, кроме первого и последнего
'''


# Функции строк
'''
s = '5432153'

print(len(s))  # Возвращает длину строки (кол-во элементов в нем)
print(min(s), max(s))  # 1 5
print(sorted(s))  # ['1', '2', '3', '3', '4', '5', '5']
print(sorted(s, reverse=True))  # ['5', '5', '4', '3', '3', '2', '1']
print(set(s))  # {'5', '4', '3', '1', '2'} - удаляем копии элементов


s = input('Введите строку: ')  # 124
if len(s) == len(set(s)):
    print('Копий нет')
else:
    print('Копии есть')
'''

# Методы строк - методы это функнции работающие только с определенным типом данных
'''
s = '3426512432562'

print(s.count('2'))  # 4 - Возвращает кол-во определенных элементов в строке
print(s.index('2'))  # 2 - Возвращает индекс первого найденного значения
print(s.rindex('2'))  # 12 - Возвращает индекс последнего найденного значения

a = '214tf243li4j23cfr'

for x in a:
    if x.isdigit():
        print(x, end=' ')  # 2 1 4 2 4 3 4 2 3
print()

for x in a:
    if x.isalpha():
        print(x, end=' ')  # t f l i j c f r
print()
'''

'''
s = '3426512432562'

s = s.replace('2', '*')  # Заменили сразу все
print(s)  # 34*651*43*56*

s = s.replace('*', '2', 3)  # Заменили только первые три
print(s)  # 342651243256*

s = bin(54)[2:]
print(s)  # 0b110110

s = bin(54)[2:].zfill(8)
print(s)  # 00110110
'''


'''
ip = '234.54.24.123'  # 1 байт = 8 бит -> восьмибитные  0 <= x <= 255
print(bin(255)[2:])  # 11111111

ip = '234.54.24.123'
ip_number = ip.split('.')  # Разбиваем строку на список строк по определенному символу
print(ip_number)  # ['234', '54', '24', '123']

numbers = [int(x) for x in ip_number]
print(numbers)  # [234, 54, 24, 123]


s = '34 564    098   234  4  543'.split()
print(s)  # ['34', '564', '098', '234', '4', '543']


s = '34 564    098   234  4  543'.split(' ')
print(s)  # ['34', '564', '', '', '', '098', '', '', '234', '', '4', '', '543']


ip_numbers = ['234', '54', '24', '123']
new_ip = ', '.join(ip_numbers)  # Склеивает список строк в одну строку
print(new_ip)  # 234, 54, 24, 123
'''

# endregion Урок: ********************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ  = []
# на следующем уроке:
