# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

'''
import random
M = [random.randint(10, 100) for _ in range(10)]
print(M)

chet = [x for x in M if x % 2 == 0]
print(chet)

M = [int(x) for x in open('17.txt')]
# Найдите все четырехзначные, оканчивающиеся на 36
D = [x for x in M if abs(x) % 100 == 36 and len(str(abs(x))) == 4]  #
print(D)
'''


# Взятие суммы цифр строки
'''
s = '2013120912'
# s.count('1') + s.count('2') * 2 + s.count('3') * 3 + ...
summa1 = sum([int(x) for x in s])
print(list(map(int, s)))  # [2, 0, 1, 3, 1, 2, 0, 9, 1, 2]
summa2 = sum(map(int, s))
'''


# № 17624 Основная волна 19.06.24 (Уровень: Базовый)
# Укажите минимальное число R, которое превышает число 75
# и может являться результатом работы данного алгоритма.
'''
R = []
for n in range(1, 1000):
    s = f'{n:b}'  # s = bin(n)[2:]
    s = s + str(s.count('1') % 2)
    s = s + str(s.count('1') % 2)
    r = int(s, 2)
    if r > 75:
        R.append(r)
print(min(R))
'''


# № 17546 Основная волна 08.06.24 (Уровень: Базовый)
# Укажите максимальное число R, которое может быть результатом
# данного алгоритма, при условии, что N не больше 12.
'''
R = []
for n in range(1, 12+1):
    s = f'{n:b}'  # s = bin(n)[2:]
    if n % 2 == 0:
        s = '10' + s
    else:
        s = '1' + s + '01'
    r = int(s, 2)
    R.append(r)
print(max(R))
'''


# № 17518 Основная волна 07.06.24 (Уровень: Базовый)
# Укажите минимальное число N, после обработки которого с
# помощью этого алгоритма получается число R, большее 50.
'''
R = []
for n in range(1, 10000+1):
    s = f'{n:b}'  # s = bin(n)[2:]
    if s.count('1') % 2 == 0:
        s = '10' + s[2:] + '0'
    else:
        s = '11' + s[2:] + '1'
    r = int(s, 2)
    if r > 50:
        R.append(n)
print(min(R))

# Вариант 2


def convert(n, b):  # n - number, b - base
    r = ''
    while n > 0:
        r += str(n % b)
        n //= b
    return r[::-1]


def convert(n, b):  # n - number, b - base
    """
    Функция перевода работает в системах счисления от 2 до 9
    """
    r = ''
    while n > 0:
        r = str(n % b) + r
        n //= b
    return r


alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
def convert(n, b):  # n - number, b - base
    """
    Функция перевода работает в системах счисления от 2 до 36
    """
    r = ''
    while n > 0:
        r = alphabet[n % b] + r
        n //= b
    return r


R = []
for n in range(1, 10000+1):
    s = convert(n, 2)  # f'{n:b}'  # s = bin(n)[2:]
    if s.count('1') % 2 == 0:
        s = '10' + s[2:] + '0'
    else:
        s = '11' + s[2:] + '1'
    r = int(s, 2)
    if r > 50:
        R.append(n)
print(min(R))
'''


# № 16371 ЕГКР 27.04.24 (Уровень: Базовый)
# Укажите минимальное число R, не меньшее,
# чем 195, которое может быть получено в результате работы алгоритма.
'''
def convert(n, b):
    r = ''
    while n > 0:
        r = str(n % b) + r
        n //= b
    return r

R = []
for n in range(1, 10000):
    s = convert(n, 2)
    if n % 3 == 0:
        s = s + s[-2:]
    else:
        x = (n % 3) * 3
        s = s + convert(x, 2)
    r = int(s, 2)
    if r >= 195:
        R.append(r)
print(min(R))
'''


# 9828 Основная волна 27.06.23 (Уровень: Средний)
# Укажите максимальное число N, после обработки
# которого с помощью этого алгоритма получается число R, меньшее 199.
'''
def convert(n, b):
    r = ''
    while n > 0:
        r = str(n % b) + r
        n //= b
    return r


R = []
for n in range(1, 10000):
    s = convert(n, 3)
    if n % 3 == 0:
        s = '1' + s + '02'
    else:
        x = (n % 3) * 4
        s = s + convert(x, 3)
    r = int(s, 3)
    if r < 199:
        R.append(n)
print(max(R))
'''


#
# № 564 (Уровень: Средний)
# Автомат обрабатывает натуральное число N < 128 по следующему алгоритму:
# 1. Строится восьмибитная двоичная запись числа N.
# 2. Инвертируются разряды исходного числа (0 заменяется на 1, 1 на 0).
# 3. К полученному двоичному числу прибавляют единицу.
# 4. Полученное число переводится в десятичную систему счисления.
# Для какого числа N результат работы алгоритма равен 153?
'''
for n in range(1, 128):
    s = f'{n:b}'.zfill(8)
    # new_s = ''
    # for x in s:
    #     if x == '0':
    #         new_s += '1'
    #     else:
    #         new_s += '0'
    s = s.replace('0', '*').replace('1', '0').replace('*', '1')
    r = int(s, 2)
    r += 1  # "прибавляют единицу" - по мнению автора слово "прибавляется" означает работу с десятичной системой
    if r == 153:
        print(n)


for n in range(1, 128):
    s = f'{n:b}'.zfill(8)
    # new_s = ''
    # for x in s:
    #     if x == '0':
    #         new_s += '1'
    #     else:
    #         new_s += '0'
    s = s.replace('0', '*').replace('1', '0').replace('*', '1')
    r = int(s, 2)
    r += 1  # "прибавляют единицу" - по мнению автора слово "прибавляется" означает работу с десятичной системой
    if r == 221:
        print(n)
'''


# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6]
# КЕГЭ  = []
# на следующем уроке:
