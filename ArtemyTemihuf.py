# region Домашка: ******************************************************************
from secrets import choice
from wsgiref.validate import check_input

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

x = 5  # переменная - это удобный способ взаимодействия с данными
print(x, type(x))  # 5 <class 'int'>

# - это однострочный комментарий

'''
- это многострочный комментарий 
'''

# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения
a: int = 5  # - явное присваивание

b = 5.0  # float (число с плавающей точкой) - вещественные значения/дроби
print(4 / 2, type(4/ 2))  # 2.0 <class 'float'>

c = '5'  # str (string) - строковый тип данных
print(a, c)  # 5 5
print(a*4, c*4)  # 20 5555

# При умножении строки на целое число - строка дублируется
print('hello ' * 4)  # hello hello hello hello

c1 = 'Hello, '
c2 = 'world!'
print(c1 + c2)  # 'Hello, world!' - конкатенация строк (склеивание строк)

d1 = True  # bool (Boolean) - Булева алгебра / Математическая логика
d0 = False
print(4 < 10)  # True
'''


# Типы данных коллекций (последовательностей)
'''
A = [1, 2, 3]  # list (список)
# 1. Могут хранить в себе неограниченное кол-во элементов
# 2. Элементы могут быть различных типов данных (в отличие от массива)
# 3. Каждый элемент списка имеет свой порядковый номер: индекс
# 4. Индексы можно считать слева-направо начиная с 0 или справа-налево начиная с -1
# 5. Через индексы мы можем изменять элементы списка (в отличие от кортежей и строк)

# i   0    1    2    3    4
L = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print('Первый элемент списка L:', L[0])
print('Последний элемент списка L:', L[4])
print('Последний элемент списка L:', L[-1])

L[0], L[-1] = L[-1], L[0]
print(L)  # ['e', 'b', 'c', 'd', 'a']

M = [2, 2.0, '2', True, [1, 2, 3], (1, 2, 3), {1, 2, 3}, {'один': 'one', 'два': 'two'}]
for x in M:
    print(type(x), x)
    # <class 'int'> 2
    # <class 'float'> 2.0
    # <class 'str'> 2
    # <class 'bool'> True
    # <class 'list'> [1, 2, 3]
    # <class 'tuple'> (1, 2, 3)
    # <class 'set'> {1, 2, 3}
    # <class 'dict'> {'один': 'one', 'два': 'two'}


B = (1, 2, 3)  # tuple (кортеж)
# 1. Полностью идентичны списка, но нельзя изменять элементы кортежа

b = 5.0  # float (число с плавающей точкой) - вещественные значения/дроби

r = 5,0
print(r, type(r))  # (5, 0) <class 'tuple'>


C = {1, 2, 2, 3, 3, 3}  # set (множество)
print(C)  # {1, 2, 3}
# 1. Удаляет копии повторяющихся элементов (нет копий)


D = {'один': 'one', 'два': 'two'}  # dict (словарь)
# 1. Все элементы разбиваются на две части: ключ и значение
# 2. Доступ к значению элемента осуществляется через ключ
print(D['один'])  # one
# 3. Ключи не могут повторяться иначе произойдет перезапись значения
D['три'] = 3
D['один'] = 1
print(D)  # {'один': 1, 'два': 'two', 'три': 3}
'''


# Конвертация типов данных
'''
a = 5
print(type(a), a)  # <class 'int'> 5

a = str(a)
print(type(a), a)  # <class 'str'> 5

a = float(a)
print(type(a), a)  # <class 'float'> 5.0

a = int(a)
print(type(a), a)  # <class 'int'> 5


A = [1, 2, 2, 3, 3, 3]
print(type(A), A)  # <class 'list'> [1, 2, 2, 3, 3, 3]

A = tuple(A)
print(type(A), A)  # <class 'tuple'> (1, 2, 2, 3, 3, 3)

A = set(A)
print(type(A), A)  # <class 'set'> {1, 2, 3}

A = list(A)
print(type(A), A)  # <class 'list'> [1, 2, 3]
'''


# Ввод данных с клавиатуры
'''
number = int(input('Введите число: '))
print(type(number))

name = input('Введите свое имя: ')
print('Имя пользователя: ', name)
print(type(name))
'''


# Как работать с f-строкой
# Привет, name. Сегодня так солнечно, а температура 30 градусов!
'''
from random import choice
name = input('Введите свое имя: ')
weather = choice(['облачно', 'солнечно', 'тоскливо'])
print(f'Погода: {weather}')
temperature = int(input('Введите температуру: '))


print('Привет, ', name,'. Сегодня так ', weather,', а температура ', temperature,' градусов!')
print('Привет, ' + name + '. Сегодня так ' + weather + ', а температура ' + str(temperature) + ' градусов!')
print('Привет, {}. Сегодня так {}, а температура {} градусов!'.format(name, weather, temperature))
print(f'Привет, {name}. Сегодня так {weather}, а температура {temperature} градусов!')
'''

# Базовая арифметика
'''
a = 7
b = 2
a, b = 7, 2

print(f'{a} + {b} = {a + b} \n'  # \n - переход на новую строку 
      f'{a} - {b} = {a - b} \n'
      f'{a} * {b} = {a * b}')

print()  # В каждой функции print() есть переход на новую строку /n

# Три типа делений в Пайтон
print(f'{a} / {b} = {a / b}')  # 3.5 - вещественное деление (результат всегда float)
print(f'{a} // {b} = {a // b}')  # 3 - целая часть от деления (результат всегда int)
print(f'{a} % {b} = {a % b}')  # 1 - остаток от деления (результат всегда int)
# 7 / 2 = 3 целых и 1/2


n = 123
print(n // 10)  # 12
print(n % 10)  # 3
print(-n % 10)  # 7
print(abs(-n) % 10)  # 7


from math import floor, ceil
print(4 / 3)  # 1.33333
print(round(4 / 3))  # 1 - округление по математическим правилам 
print(ceil(4 / 3))  # 2 - округление именно вверх 
print(floor(4 / 3))  # 1 - округление именно вниз

print()

print(f'Возведем число 7 в степень 2: {7**2}')
print(f'Возведем число 7 в степень 3: {7**3}')

print()

from math import sqrt
print(f'Взять квадратный корень от числа 16: {sqrt(16)}')
print(f'Взять квадратный корень от числа 16: {16 ** (1/2)}')
print(f'Взять кубический корень от числа 27: {27 ** (1/3)}')
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ = []
# на следующем уроке:
