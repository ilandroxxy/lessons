# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

'''
# .split() - разбивает строку на список строк
ip = '12.43.255.234'
print(ip.split('.'))  # ['12', '43', '255', '234']

# ''.join() - склеивает список строк в строку
IP = ['12', '43', '255', '234']
print('.'.join(IP))  # '12.43.255.234'
'''

# № 23746 Демоверсия 2026 (Уровень: Базовый)
'''
RES = []
n = 0
s = sorted('СТРОКА')
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    word = a + b + c + d + e
                    n += 1
                    if n % 2 == 0:
                        if a not in 'АСТ':
                            if word.count('О') == 2:
                                RES.append(n)
print(max(RES))
'''

# Вариант 2
'''
from itertools import product
n = 0
RES = []
for p in product(sorted('СТРОКА'), repeat=5):
    word = ''.join(p)
    a, b, c, d, e = word
    n += 1
    if n % 2 == 0:
        if a not in 'АСТ':
            if word.count('О') == 2:
                RES.append(n)
print(max(RES))
'''



# № 18133 (Уровень: Базовый)
# (В. Колчев) Все 5-буквенные слова, в составе которых могут
# быть только буквы К,О,Д,И,М, записаны в алфавитном порядке
# и пронумерованы.
# Вот начало списка:
# 1. ДДДДД
# 2. ДДДДИ
# 3. ДДДДК
# 4. ДДДДМ
# 5. ДДДДО
# …
# Под каким номером в списке идёт последнее слово, которое
# содержит ровно две буквы М и не содержит букв М, стоящих рядом?
'''
from itertools import *
n = 0
for p in product(sorted('КОДИМ'), repeat=5):
    word = ''.join(p)
    n += 1
    if word.count('М') == 2:
        if 'ММ' not in word:
            print(n)
'''


# № 18042 (Уровень: Базовый)
# (Л. Шастин) Ваня составляет 5-буквенные слова, в которых
# могут быть использованы только буквы Л, Ю, С, Т, Р, А,
# причём буква Ю используется не более двух раз.
# Также слово не должно оканчиваться согласными буквами.
# Сколько существует таких слов, которые может написать Ваня?
'''
from itertools import *
cnt = 0
for p in product('ЛЮСТРА', repeat=5):
    word = ''.join(p)
    if word.count('Ю') <= 2:
        if word[-1] not in 'ЛСТР':
            cnt += 1
print(cnt)
'''


# № 12453 (Уровень: Базовый)
# (Л. Шастин) Леонид составляет коды перестановкой
# букв слова СОВЕСТЬ. При этом в кодах не должно быть
# двух стоящих рядом гласных и двух стоящих рядом согласных
# одновременно. Сколько различных кодов может составить Леонид?
# Примечание: в этой задаче мягкий знак принять за гласную букву.
'''
from itertools import *

RES = []
for p in permutations('СОВЕСТЬ', r=7):
    word = ''.join(p)
    slovo = word
    for x in 'СВТ':
        slovo = slovo.replace(x, '*')
    for x in 'ОЕЬ':
        slovo = slovo.replace(x, '+')
    if ('**' in slovo) + ('++' in slovo) != 2:
        RES.append(word)
print(len(set(RES)))
'''


# № 12240 ЕГКР 16.12.23 (Уровень: Базовый)
# Сколько существует девятеричных пятизначных чисел,
# содержащих в своей записи ровно одну цифру 5,
# в которых никакие две одинаковые цифры не стоят рядом?
'''
from itertools import *
cnt = 0
for p in product('012345678', repeat=5):
    num = ''.join(p)
    if num[0] != '0':
        if num.count('5') == 1:
            if all(x not in num for x in '00 11 22 33 44 55 66 77 88'.split()):
                cnt += 1
print(cnt)
'''

# № 11300 (Уровень: Базовый)
# (М. Ишимов) Все 6-буквенные слова, составленные из букв Г, О, Н, Д, У, Б, Ш,
# записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1. ББББББ
# 2. БББББГ
# 3. БББББД
# 4. БББББН
# 5. БББББО
# 6. БББББУ
# ...
# Под каким номером в списке стоит последнее слово с нечётным номером,
# которое не начинается с буквы Б, содержит не менее двух букв Н и не содержит букв У?
'''
from itertools import *
n = 0
for p in product(sorted('ГОНДУБШ'), repeat=6):
    word = ''.join(p)
    n += 1
    if word.count('Н') < 2:
        if 'У' not in word:
            if word[0] != 'Б':
                print(n)
'''


# № 12097 Новогодний вариант (Уровень: Базовый)
# (М. Попков) Все шестибуквенные слова, составленные из букв Г, И, Р, Л, Я, Н, Д, А,
# записаны в алфавитном порядке и пронумерованы.
# Вот начало списка:
# 1. АААААА
# 2. АААААГ
# 3. АААААД
# 4. АААААИ
# 5. АААААЛ
# 6. АААААН
# 7. АААААР
# Под каким номером в списке стоит последнее слово с чётным номером,
# которое не начинается с буквы Я и содержит ровно три буквы Д?
'''
from itertools import *
n = 0
for p in product(sorted('ГИРЛЯНДА'), repeat=6):
    word = ''.join(p)
    n += 1
    if n % 2 == 0:
        if word.count('Д') == 3:
                if word[0] != "Я":
                    print(n)
'''

# № 9831 Основная волна 27.06.23 (Уровень: Базовый)
# Сколько существует шестнадцатеричных трёхзначных чисел, в которых все цифры различны
# и никакие две чётные или две нечётные цифры не стоят рядом?
'''
from itertools import *
cnt = 0
for p in permutations('0123456789ABCDEF', r=3):
    num = ''.join(p)
    if num[0] != '0':
        for x in '02468ACE':
            num = num.replace(x, '*')
        for x in '13579BDF':
            num = num.replace(x, '+')
        if '**' not in num and '++' not in num:
            cnt += 1
print(cnt)
'''


# № 10090 Демоверсия 2024 (Уровень: Базовый)
# Сколько существует восьмеричных пятизначных чисел, не содержащих в своей записи цифру 1,
# в которых все цифры различны и никакие две чётные или две нечётные цифры не стоят рядом?
'''
from itertools import *
cnt = 0
for p in permutations('01234567', r=5):
    num = ''.join(p)
    if num[0] != '0':
        if '1' not in num:
            for x in '0246':
                num = num.replace(x, '*')
            for x in '1357':
                num = num.replace(x, '+')
            if '**' not in num and '++' not in num:
                cnt += 1
print(cnt)
'''

# № 8466 (Уровень: Средний)
# (В. Рыбальченко) Определите количество шестизначных чисел, записанных в семеричной системе счисления,
# которые не оканчиваются на цифры, меньшие 4, а также содержат поровну четных и нечетных цифр.
'''
from itertools import *

cnt = 0
for p in product('0123456', repeat=6):
    num = ''.join(p)
    if num[0] != '0':
        if num[-1] not in '0123':
            for x in '0246':
                num = num.replace(x, '*')
            for x in '135':
                num = num.replace(x, '+')
            if num.count('*') == num.count('+'):
                cnt += 1
print(cnt)
'''
# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 14]
# КЕГЭ = []
# на следующем уроке:
