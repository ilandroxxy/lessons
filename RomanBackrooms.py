# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************


# –°–ø–∏—Å–∫–∏ list()
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞–º –ú: {M[0]}')  # a
print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞–º –ú: {M[-1]}')  # e

M[0], M[-1] = 'A', 'E'
print(M)  # ['A', 'b', 'c', 'd', 'E']


# 1. –ú–æ–≥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –º–∞—Å—Å–∏–≤–æ–≤ –∏ —Å—Ç—Ä–æ–∫)
# 2. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä: –∏–Ω–¥–µ–∫—Å
# 3. –°—á–∏—Ç–∞—Ç—å –∏–Ω–¥–µ–∫—Å—ã –º–æ–∂–Ω–æ —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å 0 –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å -1
# 4. –≠–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –º–æ–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ –±—Ä–∞—Ç—å —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã, –Ω–æ –∏ –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ—Ä—Ç–µ–∂–µ–π —Å—Ç—Ä–æ–∫)

# i   0    1    2    3    4
B = ('a', 'b', 'c', 'd', 'e')

# 1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–µ —Å–ø–∏—Å–∫–∞–º, –Ω–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã
'''

# –°—Ç—Ä–æ–∫–∏ str()
'''
# i  01234
s = 'ABCDE'

# 1. –°—Ç—Ä–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —Ç–æ –µ—Å—Ç—å —Å–∏–º–≤–æ–ª—ã, —Ü–∏—Ñ—Ä—ã, –±—É–∫–≤—ã, —Å–ª–æ–≤–∞ —Ç–¥ —Ç–ø
# 2. –¢–æ–∂–µ –µ—Å—Ç—å –∏–Ω–¥–µ–∫—Å—ã –∫–∞–∫ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ (—Å 0) —Ç–∞–∫ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ (—Å - 1)
# 3. –ò–∑–º–µ–Ω—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º –Ω–µ–ª—å–∑—è

S = list('ABCDE')  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 
print(S)  # ['A', 'B', 'C', 'D', 'E']
'''

# –°—Ä–µ–∑—ã —Å–ø–∏—Å–∫–æ–≤ –∏ —Å—Ç—Ä–æ–∫:
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']

# i  01234
s = 'abcde'

# –°–†–ï–ó–´ [ START : STOP-1 : STEP ]
print(M[2:4])  # ['c', 'd']
print(s[2:4])  # cd

print(M[:4])  # ['a', 'b', 'c', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ 4 –∏–Ω–¥–µ–∫—Å–∞ (–Ω–µ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
print(M[2:])  # ['c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç 2 –∏–Ω–¥–µ–∫—Å–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
print(M[:])  # ['a', 'b', 'c', 'd', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
print(M[0::2])  # ['a', 'c', 'e'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(M[1::2])  # ['b', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –Ω–µ—á–µ—Ç–Ω—ã–∏–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏

# –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω—ã —Å—Ä–µ–∑—ã

n = 8
print(bin(n))  # 0b1000
print(bin(n)[2:])  # 1000

# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —á–∏—Å–ª–æ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 34
n = 1233405934095803498509334
if str(n)[-2:] == '34':
    print('yes')
else:
    print('no')

s = 'abcde'
print(s[1:-1])  # bcd - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ

print(s[::-1])  # edcba - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤
'''
M = [1, 2, 1, 2, 3, 4]
print(len(M))  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)
print(sum(M))  # –ë–µ—Ä–µ—Ç —Å—É–º–º—É —Ç–æ–ª—å–∫–æ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ü–µ–ª—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
print(min(M), max(M))  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
print(sorted(M))  # [1, 1, 2, 2, 3, 4] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é

print(sorted(M, reverse=True))  # [4, 3, 2, 2, 1, 1] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
print(sorted(M)[::-1])   # [4, 3, 2, 2, 1, 1] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ —É–±—ã–≤–∞–Ω–∏—é

print(set(M))  # {1, 2, 3, 4} - –£–±–∏—Ä–∞–µ–º –∫–æ–ø–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—è —Å–ø–∏—Å–æ–∫ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
'''

# –§—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫
'''
s = '121234'
print(len(s))  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)
# print(sum(M))  # –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ —Å—Ç—Ä–æ—á–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
print(min(s), max(s))  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
print(sorted(s))  # ['1', '1', '2', '2', '3', '4'] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é

print(sorted(s, reverse=True))  # ['4', '3', '2', '2', '1', '1'] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
print(sorted(s)[::-1])   # ['4', '3', '2', '2', '1', '1'] - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ —É–±—ã–≤–∞–Ω–∏—é

print(set(s))  # {'2', '3', '1', '4'} - –£–±–∏—Ä–∞–µ–º –∫–æ–ø–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—è —Å–ø–∏—Å–æ–∫ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
'''


# –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠
# –ú–µ—Ç–æ–¥—ã —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö


# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞.
'''
my_list = [1, 2, 3]
my_list.append(4)
my_list.append(5)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4, 5]

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
my_list = [1, 2, 3]
my_list = [0] + my_list + [4, 5]
print(my_list)  # –í—ã–≤–æ–¥: [0, 1, 2, 3, 4, 5]
'''


# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π.
'''
my_list = [1, 2, 3, 4]
my_list.reverse()
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
my_list = [1, 2, 3, 4]
my_list = my_list[::-1]
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫.
'''
my_list = [1, 2, 2, 3, 4, 2]
print(my_list.count(2))  # –í—ã–≤–æ–¥: 3
'''

# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.
'''
my_list = [1, 2, 3, 2, 4]
my_list.remove(2)  # –ü–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:

my_list = [1, 2, 3, 2, 4]
del my_list[1]  # –ò–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]
'''


# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ.

my_list = [1, 2, 3, 2, 4]
print(my_list.index(2))  # –í—ã–≤–æ–¥: 1


# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏
# –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True.
'''
my_list = [4, 1, 3, 2]
my_list.sort()
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list.sort(reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]

# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
my_list = [4, 1, 3, 2]
my_list = sorted(my_list)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list = sorted(my_list, reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# üêç –í—Å–µ –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠


# 2‚É£ .lower() –∏ .upper()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä —Å—Ç—Ä–æ–∫–∏. lower() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤
# –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, –∞ upper() ‚Äì –≤ –≤–µ—Ä—Ö–Ω–∏–π.
'''
text = "–ü—ÄIvEt"
print(text.lower())  # "–ø—Äivet"
print(text.upper())  # "–ü–†IVET"
'''


# 3‚É£ .replace()
# –ú–µ—Ç–æ–¥ replace(old, new, count) –∑–∞–º–µ–Ω—è–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É old –Ω–∞ new –≤ —Å—Ç—Ä–æ–∫–µ count —Ä–∞–∑.
'''
text = "–Ø –ª—é–±–ª—é Python!"
new_text = text.replace("Python", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
print(new_text)  # "–Ø –ª—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ!"

text = '25134241324132431'
text = text.replace('2', '*')
print(text)  # *5134*413*413*431

text = text.replace('*', '+', 2)
print(text)  # +5134+413*413*431  - –ó–∞–º–µ–Ω–∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –¥–≤–µ –∑–≤–µ–∑–¥–æ—á–∫–∏ 
'''


# 4‚É£  .split()
# –ú–µ—Ç–æ–¥ split(separator) —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é.
# –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–±–µ–ª.

text = "—è–±–ª–æ–∫–æ –≥—Ä—É—à–∞ –±–∞–Ω–∞–Ω"
fruits = text.split()  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑–¥–µ–ª—è–µ—Ç –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
print(fruits)  # ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']


# 5‚É£ .join()
# –ú–µ—Ç–æ–¥ join(iterable) —Å–æ–µ–¥–∏–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ (–∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞)
# –≤ —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º.

fruits = ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']
result = ', '.join(fruits)
print(result)  # "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, –±–∞–Ω–∞–Ω"


# 6‚É£ .find()
# –ú–µ—Ç–æ–¥ find(substring) –∏—â–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å,
# —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–µ—Ä–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞. –ï—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1.
'''
# i     012345678
text = "123424321"
i1 = text.find("2")
i2 = text.index("2")
print(i1, i2)  # 1 1

i1 = text.rfind("2")
i2 = text.rindex("2")
print(i1, i2)  # 7 7

i1 = text.find("5")
i2 = text.index("5")
print(i1)  # -1
print(i2)  # ValueError: substring not found
'''

# 7‚É£ .count()
# –ú–µ—Ç–æ–¥ count(substring) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É.
'''
text = "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, —è–±–ª–æ–∫–æ"
count = text.count("—è–±–ª–æ–∫–æ")
print(count)  # 2
'''


# 8‚É£ .startswith() –∏ .endswith()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –µ—é.
'''
text = "1894372189334"
if text[-2:] == '34':
    print(True)  # True
else:
    print(False)

print(text.endswith("34"))  # True

print(text.startswith("–ü—Ä–∏–≤–µ—Ç"))  # False
print(text.startswith("189"))  # True
'''


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤

# –í–≤–µ–¥–∏—Ç–µ n –∏ –∑–∞—Ç–µ–º n —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–ª—å–∫–æ –∏–∑ —á–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

'''
n = int(input())
R = []
for i in range(n):
    x = int(input())
    if x % 2 == 0:
        R.append(x)  # –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü
print(R)

print([int(input()) for i in range(int(input()))])
'''

R = [x for x in range(10)]
print(R)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]


R = [x for x in range(10) if x % 2 == 0]
print(R)  # [0, 2, 4, 6, 8]

R = [x**2 for x in range(10) if x % 2 == 0]
print(R)  # [0, 4, 16, 36, 64]

R = [bin(x)[2:] for x in range(10) if x % 2 == 0]
print(R)  # ['0', '10', '100', '110', '1000']


from random import randint
R = [randint(0, 100) for i in range(10)]
print(R)  # [30, 86, 10, 24, 76, 30, 10, 45, 21, 7]

chet = [x for x in R if x % 2 == 0]
print(chet)  # [30, 86, 10, 24, 76, 30, 10]

nechet = [x for x in R if x % 2 != 0]
print(nechet)  # [45, 21, 7]

copied = [x for x in R if R.count(x) > 1]
print(copied)  # [30, 10, 30, 10]

not_copied = [x for x in R if R.count(x) == 1]
print(not_copied)  # [86, 24, 76, 45, 21, 7]

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = [2, 6]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
