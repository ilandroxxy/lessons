# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Тип 25 №55821
# Назовём маской числа последовательность цифр,
# в которой также могут встречаться следующие символы:
# — символ «?» означает ровно одну произвольную цифру;
# — символ «*» означает любую последовательность цифр
# произвольной длины; в том числе «*» может задавать и пустую последовательность.
#
# Среди натуральных чисел, не превышающих 10**8, найдите все числа,
# соответствующие маске 12??36*1, делящиеся на 273 без остатка.
#
# В ответе запишите в первом столбце таблицы все найденные
# числа в порядке возрастания, а во втором столбце — соответствующие им результаты деления этих чисел на 273.
'''
from fnmatch import *
for x in range(0, 10**8, 273):
    if fnmatch(str(x), '12??36*1'):
        print(x, x // 273)
'''



"""
import time
start = time.time()

'''
def divisors(x):
    div = []
    for j in range(1, x+1):
        if x % j == 0:
            div.append(j)
    return div
'''

def divisors(x):
    div = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


print(divisors(24))  # [1, 2, 3, 4, 6, 8, 12, 24]
print(divisors(16))  # [1, 2, 4, 8, 16]
print(divisors(100_000_000))

print(time.time() - start)  # 2.9813618  - 0.000360965
"""


# Тип 25 №27854
# Напишите программу, которая ищет среди целых чисел, принадлежащих
# числовому отрезку [110203; 110245], числа, имеющие ровно четыре
# различных чётных натуральных делителя (при этом количество нечётных
# делителей может быть любым). Для каждого найденного числа запишите
# эти четыре делителя в четыре соседних столбца на экране с новой строки.
# Делители в строке должны следовать в порядке возрастания.
'''
def divisors(x):
    div = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


for x in range(110203, 110245+1):
    div = divisors(x)
    chet = [x for x in div if x % 2 == 0]
    if len(chet) == 4:
        print(*chet)
'''


# Тип 25 №41000
# Пусть M(N)— сумма двух наибольших различных натуральных делителей
# натурального числа N, не считая самого числа и единицы.
# Если у числа N меньше двух таких делителей, то M(N) считается равным 0.
#
# Найдите 5 наименьших натуральных чисел, превышающих 11000000, для
# которых 0 < M(N) < 10000. В ответе запишите найденные значения M(N) в
# порядке возрастания соответствующих им чисел N.

'''
def divisors(x):
    div = []
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


for x in range(11000000+1, 10**10):
    div = divisors(x)
    if len(div) >= 2:
        M = div[-2] + div[-1]
        if 0 < M < 10000:
            print(M)
            input()
'''


# Тип 25 №33104
'''
def divisors(x):
    div = []
    for j in range(2, int(x**0.5)+1):
        if x % j == 0:
            div.append(j)
            div.append(x // j)
    return sorted(set(div))


for x in range(289123456, 389123456+1):
    if (x ** 0.5).is_integer():
        div = divisors(x)
        if len(div) == 3:
            print(x)
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 25]
# КЕГЭ  = []
# на следующем уроке:
