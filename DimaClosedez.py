# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Типы данных переменных
'''
a = 5  # int (integer) - Целочисленные значения
A: int = 5  # Аннатация типов данных
print(type(5+4))  # <class 'int'>

b = 5.0  # float (Число с плавающей точкой) - Вещественное значение (дробь)
print(type(4 / 2))  # 2.0 <class 'tuple'>
# c = 3,0
# print(type(c)) - <class 'tuple'>

c = '5'  # str (string) - Строковый тип данных, содержит в себе: буквы, символы, слова, текст, ..
print(a * 4, c * 4)  # 20 5555 - При умножении строки на целое число строка дублируется
print('Hello' + ' , world!')  # конкатенация строк (склеивание)

d0 = False
d1 = True  # bool (Boolean)

print(4 < 10)  # True
print(True + False + True + True)  # 1 + 0 + 1 + 1 = 3
'''


# Типы данных коллекций (последовательностей)
'''
A = [1, 2, 3, True, 'True', [1, 2, 3]]  # list (список)
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

# Уберите из списка первый и последний элементы
print(M[0])  # a - Первый элемент списка
print(M[-1])  # e - Последний элемент списка
print(M[1:-1])  # ['b', 'c', 'd']

# 1. Хранит в себе неограниченное кол-во значений, различных типов данных
# 2. Каждый элемент списка имеет порядковый номер (индекс), начиная с 0
# 3. Элементы списков слева-направо считаются с нуля, а справа-налево считаются с -1
# 4. Через индексы можно брать элементы и изменять их значения

M[0] = 'A'
print(M)  # ['A', 'b', 'c', 'd', 'e']

B = (1, 2, 3)  # tuple (кортеж)
# 1. Полностью идентичен спискам, но изменять элементы нельзя

C = {1, 2, 3, 3, 3}  # set (множество)
print(C)  # {1, 2, 3}


# P = {2, 3, 5, 7, 11, 13, 17, ...+inf}  Простые числа
# N = {1, 2, 3, 4, ... +inf}  Натуральные числа
# Z = {-inf, .., -2, -1, 0, 1, 2, 3, .., +inf}  Целые числа
# Q = {-inf, -4.5, -4, 0, 5/1, 5.5, +inf}  Рациональные числа
# I = {-inf, -4.5555555, -4, 0, 5, 3.14...., 5.555555, +inf}  Иррациональные числа
# R = {P, N, Z, Q, I} Множество вещественных (действительных) чисел
# C = множество комплексных чисел

A = {1, 2, 3, 4, 5}
B = {4, 5, 6, 7}
C1 = {1, 2, 3, 4, 5, 6, 7}  # Объединение множеств A и B
C2 = {4, 5}  # Пересечение множеств A и B

D = {'один': 'one', 'два': 'two'}  # dict (словарь)
# Элементы словаря разбиваются на две части: ключ и значение
# Доступ к значению элемента словаря осуществляется через его ключ
print(D['один'])  # one
'''

'''
M = [2, 2.0, '2', True, 2+2, 4/2, '2'*2, 4 < 10, [1, 2, 3], (1, 2, 3), {1, 2, 3}, {'один': 'one', 'два': 'two'}]
for elem in M:
    print(elem, type(elem))
    # 2 <class 'int'>
    # 2.0 <class 'float'>
    # 2 <class 'str'>
    # True <class 'bool'>
    # 4 <class 'int'>
    # 2.0 <class 'float'>
    # 22 <class 'str'>
    # True <class 'bool'>
    # [1, 2, 3] <class 'list'>
    # (1, 2, 3) <class 'tuple'>
    # {1, 2, 3} <class 'set'>
    # {'один': 'one', 'два': 'two'} <class 'dict'>
'''

# Конвертация типов данных
'''
a = 5
print(a, type(a))  # 5 <class 'int'>

a = str(a)
print(a, type(a))  # 5 <class 'str'>
# ValueError: invalid literal for int() with base 10: '5.0'

a = float(a)
print(a, type(a))  # 5.0 <class 'float'>

a = int(a)
print(a, type(a))  # 5 <class 'int'>


A = [1, 2, 3, 2, 3]
print(A, type(A))  # [1, 2, 3, 2, 3] <class 'list'>

A = tuple(A)
print(A, type(A))  # (1, 2, 3, 2, 3) <class 'tuple'>

A = set(A)
print(A, type(A))  # {1, 2, 3} <class 'set'>

A = list(A)
print(A, type(A))  # [1, 2, 3] <class 'list'>
'''


# Ввод данных с клавиатуры
'''
s = input('Вводим строку с клавиатуры: ')
print(type(s))  # <class 'str'>

x = int(input('Вводим число с клавиатуры: '))
print(type(x))  # <class 'int'>
'''

# Базовая арифметика

a, b = 7, 2
# a = 7
# b = 2

print(a + b)  # 9
print(a - b)  # 5
print(a * b)  # 14

print()  # В каждой функции print() есть переход на новую строку '/n'

print(a / b)  # 3.5 - Обычное вещественное деление
print(a // b)  # 3 - Целочисленное деление (взятие только целой части)
print(a % b)  # 1 - Остаток от деления

print(123 // 10)  # 12
print(123 % 10)  # 3
print(-123 % 10)  # 7

print(1234 // 10)  # 123
print(1234 % 10)  # 4
print(-1234 % 10)  # 6

print(1234 // 100)  # 12
print(1234 % 100)  # 34
print(-1234 % 100)  # 66

print(2 ** 3)  # 8 - возведение в степень
print(16 ** (1/2))  # 4.0 - Взятие квадратного корня от числа 16
print(27 ** (1/3))  # 3.0 - Взятие кубического корня от числа 27

import math
print(math.sqrt(16))  # 4.0 - Взятие квадратного корня от числа 16

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ  = []
# на следующем уроке:
