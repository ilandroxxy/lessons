# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Условные операторы (ветвление): if, elif, else
'''
n = int(input('n: '))
if n % 2 == 0:  # if - если
    print('Четное')
else:  # else - иначе
    print('Нечетное')
'''


# x, y = int(input('x: ')), int(input('y: '))
'''
x, y = 7, 2

if x > 0 and y > 0:  # if - если
    print('Первая четверть')
elif x < 0 and y > 0:  # elif - иначе если
    print('Вторая четверть')
elif x > 0 and y < 0:
    print('Четвертая четверть')
elif x < 0 and y < 0:
    print('Третья четверть')
else:  # else - иначе
    print('Лежит на осях')
print('КОНЕЦ')
'''


# Каскадные (вложенные) условные операторы:
'''
x, y = 7, 2

if x > 0:
    if y > 0:  # x > 0, y > 0
        print('Первая четверть')
    else:  # x > 0, y <= 0
        print('Четвертая четверть')
else:
    if y > 0:  # x <= 0, y > 0
        print('Вторая четверть')
    else:  # x <= 0, y <= 0
        print('Третья четверть')
'''


# Логические связки: not, and, or, ^, ==, !=
'''
flag = True
print(not flag)  # False
print(not(not flag))  # True

a, b = 7, -2
if a > 0 and b > 0:  # and - гарантирует, что оба (все условия выполняются)
    print('YES 1')
if a > 0 or b > 0:
    print('YES 2')  # or - говорит о том, что хотя бы одно условие выполняется (одно или оба)
if (a > 0) ^ (b > 0):  # ^, != - гарантирует, что только одно условие выполняется
    print('YES 3')
if (a > 0) != (b > 0):
    print('YES 4')

# Выполняются только два
a, b, c = 7, 2, -5
if (a > 0) + (b > 0) + (c > 0) == 2:
    print('Выполняется только лишь два условия')
if (a > 0) + (b > 0) + (c > 0) == 1:
    print('Выполняется только лишь одно условие')


print(a > 0)  # True
print(c > 0)  # False
print(a > b)  # True
print(a == c)  # False

print(True + True + False)  # 2
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ  = []
# на следующем уроке:
