# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************


# –ü–µ—Ä–µ–≤–æ–¥—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å—á–∏—Å–ª–µ–Ω–∏—è
'''
n = 8
b = 2
r = ''
while n > 0:
    r = str(n % b) + r
    n //= b
print(r)  # '1000'


print(int('1000'))  # 1000
print(int('1000', 2))  # 8
# ValueError: int() base must be >= 2 and <= 36, or 0
'''


# –ò–¥–µ–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å—á–∏—Å–ª–µ–Ω–∏—è
'''
alp36 = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
print(alp36[:2])  # ['0', '1']
print(alp36[:8])  # ['0', '1', '2', '3', '4', '5', '6', '7']
print(alp36[:16])  # ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']

def convert(n, b):
    r = ''
    while n > 0:
        r = alp36[n % b] + r
        n //= b
    return r

print(convert(8, 2))  # 1000
print(int('1000', 2))  # 8

print(convert(8, 3))  # 22
print(convert(8, 8))  # 10
print(convert(8, 16)) # 8
print(int('8', 16))  # 8
'''


# –ù–∞–ø–∏—à–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å—á–∏—Å–ª–µ–Ω–∏—è
'''
from string import digits, ascii_uppercase
alp36 = digits + ascii_uppercase

def convert(n, b):
    r = ''
    while n > 0:
        r = alp36[n % b] + r
        n //= b
    return r

while True:
    case = input('\n'
                 'case 1: –ü–µ—Ä–µ–≤–æ–¥ –∏–∑ 10-–π –≤ b-—é —Å–∏—Å—Ç–µ–º—É \n'
                 'case 2: –ü–µ—Ä–µ–≤–æ–¥ –∏–∑ b-–π –≤ 10-—é —Å–∏—Å—Ç–µ–º—É \n'
                 'case 3: –ü–µ—Ä–µ–≤–æ–¥ –∏–∑ b-–π –≤ k-—é —Å–∏—Å—Ç–µ–º—É \n'
                 'case 0: –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã. \n'
                 'case: ')

    if case == '1':
        n = int(input('–í–≤–µ–¥–∏—Ç–µ 10-–µ —á–∏—Å–ª–æ: '))
        b = int(input('–í–≤–µ–¥–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è: '))
        r = convert(n, b)
        print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ —á–∏—Å–ª–∞ {n} –∏–∑ 10-–π –≤ {b}-—é —Å–∏—Å—Ç–µ–º—É: {r}')

    elif case == '2':
        b = int(input('–í–≤–µ–¥–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è: '))
        r = input(f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ {b}-–π —Å–∏—Å—Ç–µ–º–µ: ')
        n = int(r, b)
        print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ —á–∏—Å–ª–∞ {r} –∏–∑ {b}-–π —Å–∏—Å—Ç–µ–º—ã –≤ 10-—é: {n}')


    elif case == '3':
        b = int(input('–í–≤–µ–¥–∏—Ç–µ b-—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è: '))
        r = input(f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ {b}-–π —Å–∏—Å—Ç–µ–º–µ: ')
        n = int(r, b)
        k = int(input('–í–≤–µ–¥–∏—Ç–µ k-—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è: '))
        m = convert(n, k)
        print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ —á–∏—Å–ª–∞ {r} –∏–∑ {b}-–π —Å–∏—Å—Ç–µ–º—ã –≤ {k}-—é: {m}')


    elif case == '0':
        print('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º')
        exit()

    else:
        print('–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã: 1, 2, 3, 0.')
'''


# –°–ø–∏—Å–∫–∏ list()
'''
# i   0    1    2    3    4
L = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

# 1. –ú–æ–≥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
# 2. –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –º–∞—Å—Å–∏–≤–æ–≤)
# 3. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä: –∏–Ω–¥–µ–∫—Å
# 4. –ò–Ω–¥–µ–∫—Å—ã —Å—á–∏—Ç–∞—é—Ç—Å—è —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å 0 –∏–ª–∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ –Ω–∞—á–∏–Ω–∞—è —Å -1
# 5. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ—Ä—Ç–µ–∂–µ–π –∏ —Å—Ç—Ä–æ–∫ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å—ã

print(f'–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ L: {L[0]}')
print(f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ L: {L[-1]}')

L[0], L[-1] = L[-1], L[0]
print(L)  # ['e', 'b', 'c', 'd', 'a']

M = [2, '2', 2.0, True, [1, 2, 3], (1, 2, 3), {1, 2, 3}]
for x in M:
    print(type(x), x)
    # <class 'int'> 2
    # <class 'str'> 2
    # <class 'float'> 2.0
    # <class 'bool'> True
    # <class 'list'> [1, 2, 3]
    # <class 'tuple'> (1, 2, 3)
    # <class 'set'> {1, 2, 3}
'''


# –°—Ä–µ–∑—ã —Å–ø–∏—Å–∫–æ–≤ –∏ —Å—Ç—Ä–æ–∫
'''
# i   0    1    2    3    4
L = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print(L[2:4])  # ['c', 'd'] - –Ω–∞—á–∏–Ω–∞—è —Å 2 –∏–Ω–¥–µ–∫—Å–∞ –∏ –¥–æ 4 –Ω–µ –≤–∫–ª—é—á–∞—è –∫–æ–Ω–µ—Ü
print(L[:4])  # ['a', 'b', 'c', 'd'] - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ 4 –Ω–µ –≤–∫–ª—é—á–∞—è –∫–æ–Ω–µ—Ü
print(L[2:])  # ['c', 'd', 'e'] - –Ω–∞—á–∏–Ω–∞—è —Å 2 –≤—Å–µ –¥–æ –∫–æ–Ω—Ü–∞

print(L[2:])  # –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö
print(L[-3:])  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
print(L[:2])  # –ü–µ—Ä–≤—ã–µ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞

print(L[:])  # ['a', 'b', 'c', 'd', 'e']
print(L[::])  # ['a', 'b', 'c', 'd', 'e']

print(L[0::2])  # ['a', 'c', 'e'] - –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ–¥ —á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
print(L[1::2])  # ['b', 'd'] - –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ–¥ –Ω–µ—á–µ—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏

print(L[1:-1])  # ['b', 'c', 'd'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ

print(L[::-1])  # ['e', 'd', 'c', 'b', 'a'] - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ 
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤ list()
'''
L = [1, 2, 2, 3, 3, 3]

print(len(L))  # - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ (–∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
print(sum(L))  # - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —Ü–µ–ª—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
print(max(L), min(L))  # - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã

print(set(L))  # {1, 2, 3} - —É–±–∏—Ä–∞–µ–º –∫–æ–ø–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

print(sorted(L))  # [1, 2, 2, 3, 3, 3]
print(sorted(L, reverse=True))  # [3, 3, 3, 2, 2, 1]

print(reversed(L))  # <list_reverseiterator object at 0x10304f100>
print(list(reversed(L)))  # [3, 3, 3, 2, 2, 1] - –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ 
'''


# üñ• –í—Å–µ –º–µ—Ç–æ–¥—ã —Å–ø–∏—Å–∫–æ–≤ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠

# üö© .APPEND()
# –ú–µ—Ç–æ–¥ .append() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 3]
my_list.append(4)
my_list.append(5)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4, 5]

# –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é (—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ) —Å–ø–∏—Å–∫–æ–≤:
my_list = [1, 2, 3]
my_list = [0] + my_list + [4, 5]
print(my_list)  # –í—ã–≤–æ–¥: [0, 1, 2, 3, 4, 5]
'''

# üö© .REVERSE()
# –ú–µ—Ç–æ–¥ .reverse() –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 3, 4]
my_list.reverse()
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''
# –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É —á–µ—Ä–µ–∑ —Å—Ä–µ–∑:
'''
my_list = [1, 2, 3, 4]
my_list = my_list[::-1]
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# üö© .COUNT()
# –ú–µ—Ç–æ–¥ .count() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 2, 3, 4, 2, '2', '2']
print(my_list.count(2))  # –í—ã–≤–æ–¥: 3
print(my_list.count('2'))  # –í—ã–≤–æ–¥: 2
'''


# üö© .REMOVE()
# –ú–µ—Ç–æ–¥ .remove() —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 3, 2, 4]
my_list.remove(2)  # –ü–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –¥–≤–æ–π–∫–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]

# –£–¥–∞–ª–∏—Ç—å –≤—Å–µ 2 –∏–∑ —Å–ø–∏—Å–∫–∞
my_list = [1, 2, 3, 2, 4]
while 2 in my_list:
    my_list.remove(2)
print(my_list)  # [1, 3, 4]

# –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –µ–≥–æ –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è del:
my_list = [1, 2, 3, 2, 4]
del my_list[1]  # –ò–Ω–¥–µ–∫—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
print(my_list)  # –í—ã–≤–æ–¥: [1, 3, 2, 4]
'''


# üö© .INDEX()
# –ú–µ—Ç–æ–¥ .index() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [1, 2, 3, 2, 4]
print(my_list.index(2))  # –í—ã–≤–æ–¥: 1
'''

# üö© .SORT()
# –ú–µ—Ç–æ–¥ .sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç reverse=True. –ü—Ä–∏–º–µ—Ä:
'''
my_list = [4, 1, 3, 2]
my_list.sort()
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list.sort(reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''
# –°–∫–∞–∂—É —á–µ—Å—Ç–Ω–æ —è –Ω–µ –ª—é–±–∏—Ç–µ–ª—å —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Å—á–∏—Ç–∞—é, —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sorted():
'''
my_list = [4, 1, 3, 2]
my_list = sorted(my_list)
print(my_list)  # –í—ã–≤–æ–¥: [1, 2, 3, 4]

my_list = sorted(my_list, reverse=True)
print(my_list)  # –í—ã–≤–æ–¥: [4, 3, 2, 1]
'''


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ø–∏—Å–∫–æ–≤

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä[—á—Ç–æ_–∫–ª–∞–¥–µ–º –æ—Ç–∫—É–¥–∞_–±–µ—Ä–µ–º]
# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä[—á—Ç–æ_–∫–ª–∞–¥–µ–º –æ—Ç–∫—É–¥–∞_–±–µ—Ä–µ–º –ø—Ä–∏_–∫–∞–∫–æ–º_—É—Å–ª–æ–≤–∏–∏]

M = [x for x in range(10)]
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

M = [x for x in range(10) if x % 2 == 0]
# [0, 2, 4, 6, 8]

M = [x**2 for x in range(10) if x % 2 == 0]
# [0, 4, 16, 36, 64]

from random import randint
n = randint(10, 20)
N = [randint(0, 100) for i in range(n)]
print(N)  # [22, 25, 20, 51, 81, 25, 9, 3, 58, 2, 46, 48, 48, 11, 70, 92, 53, 41, 7, 47]

lenght1 = [x for x in N if len(str(x)) == 1]
print(lenght1)  # [9, 3, 2, 7]

chet = [x for x in N if x % 2 == 0]
print(chet)  # [22, 20, 58, 2, 46, 48, 48, 70, 92]

copied2 = [x for x in N if N.count(x) == 2]
print(copied2)  # [25, 25, 48, 48]

M = [int(x) for x in open('0. files/17.txt')]
print(M)

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = [2]
# –ö–ï–ì–≠ = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
