# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# - это однострочный комментарий

'''
- это многострочный комментарий
'''
from os import pread
from pprint import pformat
from wsgiref.validate import check_input

'''
x = 5  # переменная - это удобный способ взаимодействия с данными
print(x, type(x))  # 5 <class 'int'>
'''


# Типы данных переменных
'''
a = 5  # int (integer) - целочисленные значения
print(2 + 2, type(2 + 2))  # 4 <class 'int'>

b = 5.0  # float (число с плавающей точкой) - вещественные значения/дроби
print(4 / 2, type(4 / 2))  # 2.0 <class 'float'>

c = '5'  # str (string) - строковый тип данных для хранения текста
print(a, c)  # 5 5
print(a * 4, c * 4)  # 20 5555

# При умножении строки на число - строка дублируется
print('Hello '  * 4)  # 'Hello Hello Hello Hell '

c1 = 'Hello, '
c2 = 'world!'
print(c1 + c2)  # 'Hello, world!' - конкатенация строк (склеивание)

d1 = True  # bool (Boolean) - основы Булевой алгебры/математическая логика
d0 = False
print(4 < 10)  # True
'''


# Типы данных коллекций (последовательностей)
'''
A = [1, 2, 3]  # list (список)
# 1. Могут хранить неограниченное кол-во элементов
# 2. Элементы списка могут принимать различные типа данных
# 3. Каждый элемент имеет свой порядковый номер: индекс
# 4. Индексы можно считать слева-направо начиная с 0 или справа-налево начиная с -1
# 5. Через индексы можно изменять элементы списка (в отличие от кортежей и строк)

# i   0    1    2    3    4
L = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

print('Первый элемент списка L:', L[0])
print('Последний элемент списка L:', L[-1])

L[0], L[-1] = L[-1], L[0]
print(L)  # ['e', 'b', 'c', 'd', 'a']

M = [2, '2', 2.0, True, [1, 2, 3], (1, 2, 3), {1, 2, 3}, {'один': 'one', 'два': 'two'}]
for x in M:
    print(type(x), x)
    # <class 'int'> 2
    # <class 'str'> 2
    # <class 'float'> 2.0
    # <class 'bool'> True
    # <class 'list'> [1, 2, 3]
    # <class 'tuple'> (1, 2, 3)
    # <class 'set'> {1, 2, 3}
    # <class 'dict'> {'один': 'one', 'два': 'two'}


B = (1, 2, 3)  # tuple (кортеж)
# 1. Полностью идентичны спискам, но не могут изменять элементы

C = {1, 2, 2, 3, 3, 3}  # set (множество)
print(C)  # {1, 2, 3}
# 1. Множества удаляют копии элементов

D = {'один': 'one', 'два': 'two'}  # dict (словарь)
# 1. Элементы словаря состоят из двух частей: ключ и значение
# 2. Доступ к значению элемента осуществляется через его ключ
# 3. Ключи не могут дублироваться иначе произойдет перезапись

print(D['один'])  # one
D['три'] = 3
print(D)  # {'один': 'one', 'два': 'two', 'три': 3}
D['один']  = 1
print(D)  # {'один': 1, 'два': 'two', 'три': 3}
'''


# Конвертация типов данных
'''
a = 5
print(type(a), a)  # <class 'int'> 5

a = str(a)
print(type(a), a)  # <class 'str'> 5

a = float(a)
print(type(a), a)  # <class 'float'> 5.0

a = int(a)
print(type(a), a)  # <class 'int'> 5


A = [1, 2, 2, 3, 3, 3]
print(type(A), A)  # <class 'list'> [1, 2, 2, 3, 3, 3]

A = tuple(A) 
print(type(A), A)  # <class 'tuple'> (1, 2, 2, 3, 3, 3)

A = set(A)
print(type(A), A)  # <class 'set'> {1, 2, 3}

A = list(A)
print(type(A), A)  # <class 'list'> [1, 2, 3]
'''


# Ввод данных с клавиатуры
'''
number = int(input('Введите число: '))
print(number, type(number))  # 342 <class 'int'>

name = input('Как вас зовут: ')
print('Имя пользователя:', name)
'''


# Работа с f-строками
'''
"""Привет, name! Сегодня weather, а темпрература 24 градуса! """

from random import choice
name = input('Как вас зовут: ')
weather = choice(['облачно', 'солнечно', 'прохладно'])
print('Сегодня:', weather)
temperature = int(input('Введите температуру: '))
print('Привет, ', name,'! Сегодня ', weather, ', а температура ', temperature, ' градуса!')
print('Привет, ' + name + '! Сегодня ' + weather + ', а температура ' + str(temperature) + ' градуса!')
print('Привет, {}! Сегодня {}, а температура {} градуса!'.format(name, weather, temperature))
print(f'Привет, {name}! Сегодня {weather}, а температура {temperature} градуса!')
'''


# Базовая арифметкиа
'''
a = 7
b = 2
a, b = 7, 2

print(f'{a} + {b} = {a + b} \n'  # \n - перенос на новую строку 
      f'{a} - {b} = {a - b} \n'
      f'{a} * {b} = {a * b} ')

print()  # Любая функция print() имеет переход на новую строку

# Деление в Пайтон
print(f'{a} / {b} = {a / b}')  # 3.5 - это обыкновенное вещественное деление (результат float)
print(f'{a} // {b} = {a // b}')  # 3 - взятие только целой части (результат int)
print(f'{a} % {b} = {a % b}')  # 1 - взятие остатка от деления (результат int)

print()

n = 123
print(n // 10)  # 12
print(n % 10)  # 3

n = int(input('n: '))
if n % 2 == 0:
    print('Число делится на 2 | кратно 2 | четное')
if n % 3 == 0:
    print('Число делится на 3 | кратно 3')
if n % 10 == 3:
    print('Число оканчивается на 3')
if n % 100 == 53:
    print('Число оканчивается на 53')


print(f'Возведем число 7 в степень 2: {7 ** 2}')
print(f'Возведем число 7 в степень 3: {7 ** 3}')

from math import sqrt
print(f'Возьмем квадратный корень от числа 16: {sqrt(16)}')
print(f'Возьмем квадратный корень от числа 16: {16 ** (1/2)}')
print(f'Возьмем кубический корень от числа 27: {27 ** (1/3)}')
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = []
# КЕГЭ = []
# на следующем уроке:
