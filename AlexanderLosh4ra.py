# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 85 единиц?
#
# ПОКА нашлось (11111)
#   заменить (111, 2)
#   заменить (222, 1)
'''
s = '1' * 85
while '11111' in s:
    s = s.replace('111', '2', 1)
    s = s.replace('222', '1', 1)
print(s)
'''

# № 17675 Пересдача 04.07.24 (Уровень: Базовый)
# Какая строка получится в результате применения приведённой ниже программы к строке,
# состоящей из 134 идущих подряд цифр 9? В ответе запишите полученную строку.
#
#   ПОКА нашлось (22222) ИЛИ нашлось (9999)
#     ЕСЛИ нашлось (22222)
#       ТО заменить (22222, 99)
#     ИНАЧЕ заменить (9999, 2)
'''
s = '9' * 134
while '22222' in s or '9999' in s:
    if '22222' in s:
        s = s.replace('22222', '99', 1)
    else:
        s = s.replace('9999', '2', 1)
print(s)
'''


# Несколько способов как найти значение суммы числовых значений цифр в строке #tpy
'''
s = '3721893721'

# Вариант 1:
summa1 = 0
for x in s:
    summa1 += int(x)
print(summa1)

n = 23542
summa1 = 0
for x in str(n):
    summa1 += int(x)
print(summa1)


# Вариант 2:
summa2 = 0
for i in range(0, 10):
    summa2 += s.count(str(i)) * i
print(summa2)

#  235424 = 2 * 2 + 1 * 3 + 1 * 5 + 2 * 4

# или: summa2 = s.count('1') + s.count('2') * 2 + ...

# Вариант 3:
print(map(int, s))  # <map object at 0x1005effd0>
print(list(map(int, s)))  # [3, 7, 2, 1, 8, 9, 3, 7, 2, 1]
summa3 = sum(map(int, s))
print(summa3)


# Вариант 4:
s = '372189372 .a1'
# ValueError: invalid literal for int() with base 10: '.'
summa4 = sum([int(x) for x in s if x.isdigit()])
print(summa4)
'''
# или: summa4 = sum([int(x) for x in s if x.isdigit()])


# № 16378 ЕГКР 27.04.24 (Уровень: Базовый)
# На вход приведённой выше программе поступает строка, начинающаяся с цифры «8»,
# а затем содержащая и n цифр «4» (3 < n < 10 000).
#
# Определите наибольшее возможное значение суммы числовых значений цифр в строке,
# которая может быть результатом выполнения программы.
'''
R = []
for n in range(4, 10000):
    s = '8' + '4' * n
    while '11' in s or '444' in s or '8888' in s:
        if '11' in s:
            s = s.replace('11', '4', 1)
        if '444' in s:
            s = s.replace('444', '88', 1)
        if '8888' in s:
            s = s.replace('8888', '1', 1)
    summa = sum([int(x) for x in s])
    R.append(summa)
    print(max(R))
'''

'''
for x in range(0, 50):
    for y in range(0, 50):
        for z in range(0, 50):
            s = '0' + '1' * x + '2' * y + '3' * z + '0'
            while '00' not in s:
                s = s.replace('01', '220', 1)
                s = s.replace('02', '1013', 1)
                s = s.replace('03', '120', 1)
            if s.count('1') == 13 and s.count('2') == 18:
                print(x+y+z+2)
'''

'''
def prime(x):  # 24
    if x <= 1:
        return False  # 1 не является простым числом
    for j in range(2, x):
        if x % j == 0:
            return False  # составное
    return True  # простое


for n in range(1, 1000):
    s = '>' + '1' * 16 + '2' * n + '3' * 16
    while '>1' in s or '>3' in s or '>2' in s:
        if '>1' in s:
            s = s.replace('>1', '1>', 1)
        if '>3' in s:
            s = s.replace('>3', '>2', 1)
        if '>2' in s:
            s = s.replace('>2', '>1', 1)
    summa = sum([int(x) for x in s if x.isdigit()])
    if prime(summa):
        print(n)
        exit()
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 12, 14]
# КЕГЭ  = []
# на следующем уроке:
