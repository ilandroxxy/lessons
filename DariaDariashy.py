# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

'''
import sys
sys.setrecursionlimit(10000)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) + 3 * G(n - 1)

def G(n):
    if n == 1:
        return 1
    if n > 1:
        return F(n - 1) - 2 * G(n - 1)


n = F(18)

# Вариант 1
summa1 = 0
for x in str(n):
    summa1 += int(x)
print(summa1)

# Вариант 2
R = []
for x in str(n):
    R.append(int(x))
print(sum(R))

# Вариант 3
summa4 = sum([int(x) for x in str(n)])
print(summa4)

# Вариант 4
summa4 = sum(map(int, str(n)))
print(summa4)

print(list(map(int, str(n))))  # [1, 8, 2, 9, 8, 5, 4, 9]

s = '71236jw'  # 19
print(sum([int(x) for x in s if x.isdigit()]))
'''


# Генераторы списков
'''
R = []
for i in range(10):
    R.append(i)
print(R)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

print([i for i in range(10)])
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

# Генератор списка [что кладем | откуда берем | при каком условии]

print([i for i in range(10) if i % 2 == 0])
# [0, 2, 4, 6, 8]


from random import randint
M = [randint(0, 100) for i in range(10)]
print(M)  # [52, 37, 47, 41, 79, 39, 56, 35, 25, 56]
chet = [x for x in M if x % 2 == 0]
print(chet)  # [52, 56, 56]


M = [int(x) for x in open('17.txt')]
print(M)
'''


# № 17562 Основная волна 08.06.24 (Уровень: Базовый)
# У исполнителя есть три команды, которым присвоены номера:
# A. Прибавить 1
# B. Прибавить 2
# C. Прибавить 3
# Сколько существует программ, которые преобразуют число 5 в число 11,
# и при этом траектория вычислений содержит число 7?
'''
def F(a, b):
    if a > b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a+1, b) + F(a+2, b) + F(a+3, b)


print(F(5, 7) * F(7, 11))
'''

# Вариант 2
'''
def F(a, b):
    if a >= b:
        return a == b
    else:
        return F(a + 1, b) + F(a + 2, b) + F(a + 3, b)


print(F(5, 7) * F(7, 11))
'''


# № 17640 Основная волна 19.06.24 (Уровень: Базовый)
# У исполнителя есть две команды, которые обозначены латинскими буквами:
# A. Вычти 2
# B. Найти целую часть от деления на 2
#
# Сколько существует программ, для которых при исходном числе 32
# результатом является число 1 и при этом тракетория вычислений
# содержит число 14?
'''
def F(a, b):
    if a < b:
        return 0
    elif a == b:
        return 1
    else:
        return F(a - 2, b) + F(a // 2, b)

print(F(32, 14) * F(14, 1))
'''


# № 13099 (Уровень: Средний)
# У исполнителя есть три команды, которые обозначены буквами:
# A. Вычесть 1
# B. Умножить на 2
# C. Умножить на 3
# Сколько существует программ, которые преобразуют исходное
# число 3 в число 15 и при этом не содержат двух команд A подряд?
'''
def F(a, b, c):
    if a > b + 1:
        return 0
    if a == b:
        return a == b
    else:
        if c == 'A':
            return F(a * 2, b, 'B') + F(a * 3, b, 'C')
        else:
            return F(a - 1, b, 'A') + F(a * 2, b, 'B') + F(a * 3, b, 'C')

#            *2  -1  *3
# 3 -> 15: 3 - 6 - 5 - 15

#            -1  *2  *2  *2   -1
# 3 -> 15: 3 - 2 - 4 - 8 - 16 - 15

print(F(3, 15, ''))
'''


# № 10027 (Уровень: Базовый)
# (Л. Шастин) Исполнитель преобразует число на экране.
# A. Прибавить 2
# B. Прибавить 3
# C. Умножить на 2

# Сколько существует программ, для которых при исходном числе 5
# результатом является число 30, а первая в них команда - A или B?
'''
def F(a, b, c):
    if a >= b:
        return a == b and c[0] in 'AB'
    else:
        return F(a + 2, b, c + 'A') + F(a + 3, b, c + 'B') + F(a * 2, b, c + 'C')

print(F(5, 30, ''))
'''


# 9790 Основная волна 20.06.23 (Уровень: Базовый)
# Исполнитель преобразует число на экране. У исполнителя есть три команды, которые обозначены латинскими буквами:
# А. Вычесть 1
# В. Вычесть 2
# С. Найти целую часть от деления на 3
#
# Сколько существует программ, для которых при исходном числе 19 результатом
# является число 3, при этом траектория вычислений не содержит чисел 9 и 16?

def F(a, b):
    if a <= b or a == 9 or a == 16:
        return a == b
    return F(a-1, b) + F(a-2, b) + F(a // 3, b)

print(F(19, 3))

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 16, 23, 25]
# КЕГЭ  = []
# на следующем уроке:
