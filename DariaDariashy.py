# region Домашка: ******************************************************************

# № 7594 Досрочная волна 2023 (Уровень: Базовый)
'''
def F(x, A):
    return (x & 39 == 0) or ((x & 11 == 0) <= (x & A != 0))

R = []
for A in range(1000):
    if all(F(x, A) for x in range(1, 10000)):
        R.append(A)
print(min(R))
'''


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

'''
file = open('17.txt', mode='r')
for s in file:
    print(s)
file.close()
'''


# Хороший подход работы с файлами:
'''
with open('17.txt', mode='r') as file:
    M = [int(x) for x in open('17.txt')]   
# считается, что тут файл уже закрыт
'''

'''
M = []
for x in open('17.txt'):
    M.append(int(x))
print(M)
'''


# Как будем открывать файл для 17 номера:
'''
M = [int(x) for x in open('17.txt')]
'''

'''
#    0  1  2  3  4
M = [1, 2, 3, 4, 5]

# 1. В данной задаче под парой подразумевается два идущих подряд элемента последовательности.
# 12 23 34 45

for i in range(len(M)-1):
    x, y = M[i], M[i+1]


# 2. В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
# 123 234 345

for i in range(len(M)-2):
    x, y, z = M[i], M[i+1], M[i+2]


# 3. В данной задаче под парой подразумевается два различных элемента последовательности.
# 12 13 14 15
# 23 24 25
# 34 35
# 45

for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
'''

# Тип 17 №37368
# В файле содержится последовательность из 10000 целых положительных чисел.
# Каждое число не превышает 10000. Определите и запишите в ответе сначала
# количество пар элементов последовательности, у которых сумма элементов кратна 60
# и хотя бы один элемент из пары делится на 40, затем максимальную из сумм элементов
# таких пар. В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)):
    for j in range(i+1, len(M)):
        x, y = M[i], M[j]
        if (x + y) % 60 == 0:  # у которых сумма элементов кратна 60
            if (x % 40 == 0) or (y % 40 == 0):  # и хотя бы один элемент из пары делится на 40
                R.append(x + y)  # максимальную из сумм элементов n таких пар
print(len(R), max(R))
'''


# Тип 17 №39246
# Файл содержит последовательность неотрицательных целых чисел, не превышающих 10000.
# Назовём парой два идущих подряд элемента последовательности.
# Определите количество пар, в которых хотя бы один из двух элементов делится на 5,
# а их сумма делится на 7. В ответе запишите два числа: сначала количество найденных пар,
# а затем — максимальную сумму элементов таких пар.
'''
M = [int(x) for x in open('17.txt')]
R = []
for i in range(len(M)-1):
    x, y = M[i], M[i+1]
    if x % 5 == 0 or y % 5 == 0:
        if (x + y) % 7 == 0:
            R.append(x + y)
print(len(R), max(R))
'''



# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [2, 5, 6, 8, 12, 13, 14, 15, 16, 23, 25]
# КЕГЭ  = []
# на следующем уроке:
