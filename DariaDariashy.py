# region Домашка: ******************************************************************

'''
alphabet = sorted('1234567890qwertyuiopasdfghjklzxcvbnm')
R = []
for x in alphabet[:18]:
    a = int(f'77968{x}11', 18)
    b = int(f'4{x}213', 18)
    if (a + b) % 7 == 0:
        R.append((a + b) // 7)
print(max(R))
'''

# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# № 17553 Основная волна 08.06.24 (Уровень: Базовый)
# Какая строка получится в результате применения приведённой ниже программы к строке,
# состоящей из 83 идущих подряд цифр 8? В ответе запишите полученную строку.
#
#   ПОКА нашлось (111) ИЛИ нашлось (88888)
#     ЕСЛИ нашлось (111)
#       ТО заменить (111, 88)
#     ИНАЧЕ заменить (88888, 8)
'''
s = '8' * 83
while '111' in s or '88888' in s:
    if '111' in s:
        s = s.replace('111', '88', 1)
    else:
        s = s.replace('88888', '8', 1)
print(s)  # 888
'''

# Способы взятия суммы цифр числа
'''
s = '122345'  # 17

summa1 = 0
for x in s:
    summa1 += int(x)
print(summa1)  # 17

print([int(x) for x in s])  # [1, 2, 2, 3, 4, 5]

summa2 = sum([int(x) for x in s])
print(summa2)  # 17

summa3 = sum(map(int, s))
print(summa3)  # 17

# summa4 = s.count('1') + s.count('2') * 2 + s.count('4') * 4 + ...
'''


# № 16378 ЕГКР 27.04.24 (Уровень: Базовый)
# Дана программа для Редактора:
#
# ПОКА нашлось (11) ИЛИ нашлось (444) ИЛИ нашлось (8888)
#   ЕСЛИ нашлось (11)
#     ТО заменить (11, 4)
#   ЕСЛИ нашлось (444)
#     ТО заменить (444, 88)
#   ЕСЛИ нашлось (8888)
#     ТО заменить (8888, 1)

# На вход приведённой выше программе поступает строка, начинающаяся с цифры «8»,
# а затем содержащая и n цифр «4» (3 < n < 10 000).
# Определите наибольшее возможное значение суммы числовых значений цифр в строке,
# которая может быть результатом выполнения программы.
'''
R = []
for n in range(4, 10000):
    s = '8' + '4' * n  # Исходная строка
    while '11' in s or '444' in s or '8888' in s:
        if '11' in s:
            s = s.replace('11', '4', 1)
        if '444' in s:
            s = s.replace('444', '88', 1)
        if '8888' in s:
            s = s.replace('8888', '1', 1)
    # print(s) - Получившееся строка
    summa = sum(map(int, s))
    R.append(summa)
    print(max(R))
'''


#
# № 9065 Danov2306 (Уровень: Средний)
# (А.Богданов) Дана программа для Редактора:
#
#   ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>0)
#     ЕСЛИ нашлось (>1)
#       ТО заменить (>1, 22>)
#     ЕСЛИ нашлось (>2)
#       ТО заменить (>2, 2>)
#     ЕСЛИ нашлось (>0)
#       ТО заменить (>0, 1>)


# На вход приведённой выше программе поступает строка, начинающаяся
# с символа «>», а затем содержащая 21 цифру «0»,
# n цифр «1» и 11 цифр «2», расположенных в произвольном порядке.
#
# Определите наименьшее простое значение n, при котором сумма
# числовых значений цифр строки, получившейся в результате выполнения
# программы кратна n.
'''
def prime(x):
    if x == 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


for n in range(1, 100):
    s = '>' + '0' * 21 + '1' * n + '2' * 11
    while '>1' in s or '>2' in s or '>0' in s:
        if '>1' in s:
            s = s.replace('>1', '22>', 1)
        if '>2' in s:
            s = s.replace('>2', '2>', 1)
        if '>0':
            s = s.replace('>0', '1>', 1)
    summa = sum([int(x) for x in s if x.isdigit()])
    if prime(n):
        if summa % n == 0:
            print(n)
            break
'''

'''
for x in range(50):
    for y in range(50):
        for z in range(50):
            s = '0' + '1' * x + '2' * y + '3' * z
            while '01' in s or '02' in s or '03' in s:
                s = s.replace('01', '2302', 1)
                s = s.replace('02', '10', 1)
                s = s.replace('03', '201', 1)
            if s.count('1') == 40 and s.count('2') == 10 and s.count('3') == 8:
                print(x)
'''


# Тип 12 №58479
# Дана программа для Редактора:
# ПОКА НЕ нашлось (00)
#   заменить (02, 101)
#   заменить (11, 2)
#   заменить (012, 30)
#   заменить (010, 00)
#
# Известно, что исходная строка A содержала ровно два нуля
# m — на первоми на последнем месте,
# 40 единиц, больше 40 двоек и не содержала других цифр.
#
# После выполнения данной программы получилась строка B,
# сумма цифр которой оказалась простым числом. Какое наименьшее количество двоек могло быть в строке A?
'''
def prime(x):
    if x == 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True


for n in range(41, 100):
    s = '0' + '1' * 40 + '2' * n + '0'
    while '00' not in s:
        s = s.replace('02', '101', 1)
        s = s.replace('11', '2', 1)
        s = s.replace('012', '30', 1)
        s = s.replace('010', '00', 1)
    summa = sum([int(x) for x in s])
    if prime(summa):
        print(n)
        break
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [5, 12, 14]
# КЕГЭ  = []
# на следующем уроке:
