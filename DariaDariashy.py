# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************


# № 21716 ЕГКР 19.04.25 (Уровень: Базовый)
# A. Прибавь 3
# B. Прибавь 7
# C. Умножь на 3
# Сколько существует таких программ, которые исходное число 12 преобразуют в 89,
# и при этом траектория вычислений программы содержит числа 40 и 72 и не содержит 56?

def F(a, b):
    if a >= b or a == 56:
        return a == b  # True / False
    # return F(a+3, b) + F(a+7, b) + F(a*3, b)
    h = [F(a+3, b), F(a+7, b), F(a*3, b)]
    return sum(h)



print(F(12, 40) * F(40, 72) * F(72, 89))


# s - это кол-во камней в куче
# n - это шаг нашей игры

# n = 1: Петя первый ход
# n = 2: Ваня первый ход
# n = 3: Петя второй ход
# n = 4: Ваня второй ход

# № 20811 Апробация 05.03.25 (Уровень: Базовый)
# 1 куча: +1, +4, *2 | s >= 51 | 1 ≤ s ≤ 50
'''
def F(s, n):
    if s >= 51:
        return n % 2 == 0
    if n == 0:
        return 0
    h = [F(s+1, n-1), F(s+4, n-1), F(s*2, n-1)]
    # if (n - 1) % 2 == 0:  # Стоим на шаге Пети
    #     return any(h)
    # else:
    #     return all(h)
    return any(h) if (n-1) % 2 == 0 else all(h)


print([s for s in range(1, 51) if F(s, n=2)])
print([s for s in range(1, 51) if F(s, n=3) and not F(s, n=1)])
print([s for s in range(1, 51) if F(s, n=4) and not F(s, n=2)])
'''


# № 21714 ЕГКР 19.04.25 (Уровень: Базовый)
'''
def F(s, n):
    if s >= 128:
        return n % 2 == 0
    if n == 0:
        return 0
    h = [F(s+2, n-1), F(s+5, n-1), F(s*2, n-1)]
    return any(h) if (n-1) % 2 == 0 else all(h)


print([s for s in range(1, 127) if F(s, n=2)])
print([s for s in range(1, 127) if F(s, n=3) and not F(s, n=1)])
print([s for s in range(1, 127) if F(s, n=4) and not F(s, n=2)])
'''


# № 21418 Досрочная волна 2025 (Уровень: Базовый)
# 1 куча: -2, /2 вниз | s <= 87 | s > 88

# ceil - округление вверх
# floor - округление вниз
'''
from math import ceil, floor

def F(s, n):
    if s <= 87:
        return n % 2 == 0
    if n == 0:
        return 0
    h = [F(s-2, n-1), F(floor(s/2), n-1)]
    return any(h) if (n-1) % 2 == 0 else all(h)


print([s for s in range(89, 1000) if F(s, n=2)])
print([s for s in range(89, 1000) if F(s, n=3) and not F(s, n=1)])
print([s for s in range(89, 1000) if F(s, n=4) and not F(s, n=2)])
'''


# № 20907 Апробация 05.03.25 (Уровень: Базовый)
# 2 кучи: a+1, s+1, a*2, s*2 | a + s >= 81 | 1 ≤ s ≤ 73 | a = 7

def F(a, s, n):
    if a + s >= 81:
        return n % 2 == 0
    if n == 0:
        return 0
    h = [F(a+1, s, n-1), F(a, s+1, n-1), F(a*2, s, n-1), F(a, s*2, n-1)]
    # При любом ходе Пети Ваня может выиграть своим первым ходом
    return any(h) if (n-1) % 2 == 0 else all(h)

    # Ваня выиграл своим первым ходом после неудачного первого хода Пети
    # return any(h) if (n-1) % 2 == 0 else any(h)

print([s for s in range(1, 74) if F(7, s, n=2)])
print([s for s in range(1, 74) if F(7, s, n=3) and not F(7, s, n=1)])
print([s for s in range(1, 74) if F(7, s, n=4) and not F(7, s, n=2)])



# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19-21, 22, 23, 24.1, 25]
# КЕГЭ = []
# на следующем уроке: 22, 24.1 повторять

# Второй пробник 28.02.25:
# Дарья 10/29 -> 51 вторичных баллов +[1, 2, 4, 7, 10, 11, 13, 15, 16, 18] -[3, 6, 12, 22]

