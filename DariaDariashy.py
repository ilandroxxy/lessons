# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Работа с f-строками
'''
name = 'Илья'
age = int(input('Введите возраст: '))
# Привет, меня зовут name и мне age лет.
print('Привет, меня зовут ', name, ' и мне ', age, ' лет.')
print('Привет, меня зовут ' + name + ' и мне ' + str(age) + ' лет.')
# TypeError: can only concatenate str (not "int") to str
print('Привет, меня зовут {} и мне {} лет.'.format(name, age))
print(f'Привет, меня зовут {name} и мне {age} лет.')
'''


# Хотим получить сумму цифр числа n:
'''
n = int(input())  # 12345

# Вариант 1
summa1 = 0
for x in str(n):
    summa1 += int(x)
print(summa1)

# Вариант 2
summa2 = sum([int(x) for x in str(n)])
print(summa2)


# Вариант 3
summa3 = sum(map(int, str(n)))
print(summa3)
'''


# № 17624 Основная волна 19.06.24 (Уровень: Базовый)
# Укажите минимальное число R, которое превышает число 75
# и может являться результатом работы данного алгоритма.
'''
R = []
for n in range(1, 10000):
    s = f'{n:b}'  # s = bin(n)[2:]
    s = s + str(s.count('1') % 2)
    s = s + str(sum(map(int, s)) % 2)
    # s = s + str(sum([int(x) for x in s]) % 2)
    r = int(s, 2)
    if r > 75:
        R.append(r)
print(min(R))
'''
# Ответ: 78


# № 17546 Основная волна 08.06.24 (Уровень: Базовый)
# Укажите максимальное число R, которое может быть
# результатом данного алгоритма, при условии, что N не больше 12
'''
R = []
for n in range(1, 12+1):
    s = f'{n:b}'  # s = bin(n)[2:]
    if n % 2 == 0:
        s = '10' + s
    else:
        s = '1' + s + '01'
    r = int(s, 2)
    R.append(r)
print(max(R))
'''
# Ответ: 109


# № 17518 Основная волна 07.06.24 (Уровень: Базовый)
# Укажите минимальное число N, после обработки которого
# с помощью этого алгоритма получается число R, большее 50.
'''
R = []
for n in range(1, 100000+1):
    s = f'{n:b}'  # s = bin(n)[2:]
    if s.count('1') % 2 == 0:
        s = '10' + s[2:] + '0'
    else:
        s = '11' + s[2:] + '1'
    r = int(s, 2)
    if r > 50:
        R.append(n)
print(min(R))
'''
# Ответ: 19


# 5 № 16371 ЕГКР 27.04.24 (Уровень: Базовый)
# Укажите минимальное число R, не меньшее, чем 195,
# которое может быть получено в результате работы алгоритма.
'''
R = []
for n in range(1, 100000+1):
    s = f'{n:b}'  # s = bin(n)[2:]
    if n % 3 == 0:
        s = s + s[-2:]
    else:
        x = (n % 3) * 3  # остаток от деления умножается на 3
        s = s + f'{x:b}'  # переводится в двоичную запись и дописывается в конец числа
    r = int(s, 2)
    if r >= 195:
        R.append(r)
print(min(R))
'''
# Ответ: 199


# Работа с срезами списков/строк:
'''
# i   0    1    2    3    4
M = ['a', 'b', 'c', 'd', 'e']
# -i -5   -4   -3   -2   -1

# M[start : stop-1 : step]
print(M[1:4])  # ['b', 'c', 'd']
print(M[:4])  # ['a', 'b', 'c', 'd'] - все, что слева
print(M[2:])  # ['c', 'd', 'e'] - все, что справа
print(M[:])
print(M[::])  # ['a', 'b', 'c', 'd', 'e'] - все элементы

print(M[::2])  # ['a', 'c', 'e'] - все четные индексы
print(M[1::2])  # ['b', 'd'] - все нечетные индексы
print(M[-2:])  # ['d', 'e'] - последние два
print(M[-3:])  # ['c', 'd', 'e'] - последние три
print(M[2:])  # ['c', 'd', 'e'] - все, кроме первых двух
print(M[::-1])  # ['e', 'd', 'c', 'b', 'a'] - все в обратном порядке 
'''

# Переводы в различные системы счисления
'''
def G(n, b):  # n - number, b - base
    r = ''
    while n > 0:
        r += str(n % b)
        n //= b
    return r[::-1]

def G(n, b):  # n - number, b - base
    r = ''
    while n > 0:
        r = str(n % b) + r
        n //= b
    return r
'''


# № 9774 Основная волна 20.06.23 (Уровень: Средний)
# Укажите минимальное число R, большее 133, которое может быть получено
# с помощью описанного алгоритма.
'''
def G(n, b):  # n - number, b - base
    r = ''
    while n > 0:
        r = str(n % b) + r
        n //= b
    return r


R = []
for n in range(1, 1000):
    s = G(n, 3)
    if n % 3 == 0:
        s = s + s[-2:]
    else:
        x = (n % 3) * 5
        s = s + G(x, 3)
    r = int(s, 3)
    if r > 133:
        R.append(r)
print(min(R))
'''
# Ответ: 141

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************

# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [5]
# КЕГЭ  = []
# на следующем уроке:
