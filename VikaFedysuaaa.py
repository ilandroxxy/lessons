# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************


'''
# i  01234
s = 'abcde'

# –°–ø–æ—Å–æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏

s = s[:2] + 'C' + s[3:]
print(s)  # abCde
'''


# i  01234
s = 'abcde'

# –°—Ä–µ–∑—ã —Å—Ç—Ä–æ–∫:
'''
print(s[2:4])  # 'cd'
print(s[:4])  # 'abcd' - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ 4 –∏–Ω–¥–µ–∫—Å–∞
print(s[2:])  # 'cde' - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø—Ä–∞–≤–∞ –æ—Ç 2 –∏–Ω–¥–µ–∫—Å–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) 

print(s[2:])  # - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫—Ä–æ–º–µ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö
print(s[-3:])  # - –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç—ã 

print(s[:])
print(s[::])  # - –ø—Ä–æ—Å—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã 

print(s[::2])  # 'ace' - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —á–µ—Ç–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–∞—Ö
print(s[1::2])  # 'bd' - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –Ω–µ—á–µ—Ç–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–∞—Ö

print(s[::-1])  # 'edcba' - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ 
'''


# –§—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫
'''
s = '12321313213'
print(len(s))  # 11 - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏
# print(sum(s)) - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏
print(max(s), min(s))  # 3 1

print(max('28345qwda'))  # w

print(sorted(s))  # ['1', '1', '1', '1', '2', '2', '2', '3', '3', '3', '3']
print(sorted(s, reverse=True))  # ['3', '3', '3', '3', '2', '2', '2', '1', '1', '1', '1']

print(reversed(s))  # <reversed object at 0x100a77070>
print(list(reversed(s)))  # ['3', '1', '2', '3', '1', '3', '1', '2', '3', '2', '1']

print(set(s))  # {'1', '3', '2'} - –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ - —É–±–∏—Ä–∞—é—Ç—Å—è –∫–æ–ø–∏–∏ 
'''


# üêç –í—Å–µ –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫ –≤ Python, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –Ω–∞ –ï–ì–≠


# 1‚É£ .strip()
# –ú–µ—Ç–æ–¥ strip() —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã (–∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã) –∏–∑ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.
# –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞.
'''
text = "  –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!  "
cleaned_text = text.strip()
print(cleaned_text)  # "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
'''

# 2‚É£ .lower() –∏ .upper()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä —Å—Ç—Ä–æ–∫–∏.
# lower() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, –∞ upper() ‚Äì –≤ –≤–µ—Ä—Ö–Ω–∏–π.
'''
text = "–ü—ÄIvEt"
print(text.lower())  # "–ø—Ä–∏–≤–µ—Ç"
print(text.upper())  # "–ü–†–ò–í–ï–¢"
'''

# 3‚É£ .replace()
# –ú–µ—Ç–æ–¥ replace(old, new, count) –∑–∞–º–µ–Ω—è–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É old –Ω–∞ new –≤ —Å—Ç—Ä–æ–∫–µ count —Ä–∞–∑.
'''
text = "–Ø –ª—é–±–ª—é Python!"
new_text = text.replace("Python", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
print(new_text)  # "–Ø –ª—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ!"

s = '123123123123123'
s = s.replace('2', '*')
print(s)  # 1*31*31*31*31*3

s = s.replace('*', '+', 3)
print(s)  # 1+31+31+31*31*3
'''


# 4‚É£  .split()
# –ú–µ—Ç–æ–¥ split(separator) —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é.
# –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–±–µ–ª.
'''
text = "—è–±–ª–æ–∫–æ –≥—Ä—É—à–∞ –±–∞–Ω–∞–Ω"
fruits = text.split()  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑–¥–µ–ª—è–µ—Ç –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
print(fruits)  # ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']

ip = '34.212.54.255'
new_ip = ip.split('.')
print(new_ip)  # ['34', '212', '54', '255']

new_int_ip = [int(x) for x in new_ip]
print(new_int_ip)  # [34, 212, 54, 255]
'''


# 5‚É£ .join()
# –ú–µ—Ç–æ–¥ join(iterable) —Å–æ–µ–¥–∏–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ (–∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞)
# –≤ —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º.
'''
fruits = ['—è–±–ª–æ–∫–æ', '–≥—Ä—É—à–∞', '–±–∞–Ω–∞–Ω']
result = ', '.join(fruits)
print(result)  # "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, –±–∞–Ω–∞–Ω"

new_ip = ['34', '212', '54', '255']
old_ip = '.'.join(new_ip)
print(old_ip)  # '34.212.54.255'
'''

# 6‚É£ .find() –∏ .index()
# –ú–µ—Ç–æ–¥ find(substring) –∏—â–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å,
# —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–µ—Ä–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞. –ï—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1.
'''
# i  0123456
s = '1234321'

print(s.index('2'))  # 1
print(s.rindex('2'))  # 5
# print(s.index('5'))
# ValueError: substring not found



print(s.find('2'))  # 1
print(s.rfind('2'))  # 5
print(s.find('5'))  # -1
'''


# 7‚É£ .count()
# –ú–µ—Ç–æ–¥ count(substring) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É.
'''
text = "—è–±–ª–æ–∫–æ, –≥—Ä—É—à–∞, —è–±–ª–æ–∫–æ"
count = text.count("—è–±–ª–æ–∫–æ")
print(count)  # 2
'''

# 8‚É£ .startswith() –∏ .endswith()
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –µ—é.
'''
text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!"
print(text.startswith("–ü—Ä–∏–≤–µ—Ç"))  # True
print(text.endswith("–º–∏—Ä!"))  # True
'''



# ‚Ññ 23742 –î–µ–º–æ–≤–µ—Ä—Å–∏—è 2026 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
'''
R = []
for n in range(1, 10000):
    s = bin(n)[2:]
    # s = f'{n:b}'
    if n % 3 == 0:
        s = s + s[-3:]
    else:
        x = (n % 3) * 3
        s = s + f'{x:b}'
    r = int(s, 2)
    if r >= 200:
        R.append(n)
print(min(R))
'''


# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = []
# –ö–ï–ì–≠ = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
