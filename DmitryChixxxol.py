# region –î–æ–º–∞—à–∫–∞: ******************************************************************


# endregion –î–æ–º–∞—à–∫–∞: ******************************************************************
# #
# #
# region –£—Ä–æ–∫: ********************************************************************


# üì± –î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –¥–≤–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Python: split() –∏ join() #tpy
# –§—É–Ω–∫—Ü–∏–∏ split() –∏ join() –≤ Python —è–≤–ª—è—é—Ç—Å—è –º–æ—â–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏.
# split() –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–±–∏–≤–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —á–∞—Å—Ç–∏, –∞ join() ‚Äî –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –∏—Ö –æ–±—Ä–∞—Ç–Ω–æ.

# üö© –§—É–Ω–∫—Ü–∏—è split()
# –§—É–Ω–∫—Ü–∏—è split() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —á–∞—Å—Ç–∏, —Å–æ–∑–¥–∞–≤–∞—è —Å–ø–∏—Å–æ–∫.
# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç—Ä–æ–∫–∞ —Ä–∞–∑–±–∏–≤–∞–µ—Ç—Å—è –ø–æ –ø—Ä–æ–±–µ–ª–∞–º, –Ω–æ –≤—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å.
'''
# –ü—Ä–∏–º–µ—Ä 1: –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
text = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! –ö–∞–∫ –¥–µ–ª–∞?"
words = text.split()  # –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
print(words)  # –í—ã–≤–æ–¥: ['–ü—Ä–∏–≤–µ—Ç,', '–º–∏—Ä!', '–ö–∞–∫', '–¥–µ–ª–∞?']

# –ü—Ä–∏–º–µ—Ä 2: –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é
data = "—è–±–ª–æ–∫–æ;–±–∞–Ω–∞–Ω;–≥—Ä—É—à–∞"
fruits = data.split(';')  # –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ —Å–∏–º–≤–æ–ª—É ";"
print(fruits)  # –í—ã–≤–æ–¥: ['—è–±–ª–æ–∫–æ', '–±–∞–Ω–∞–Ω', '–≥—Ä—É—à–∞']
'''

# üö© –§—É–Ω–∫—Ü–∏—è join()
# –§—É–Ω–∫—Ü–∏—è join() –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –≤ —Å—Ç—Ä–æ–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è –∑–∞–¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å.
'''
# –ü—Ä–∏–º–µ—Ä 1: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤
words = ['–ü—Ä–∏–≤–µ—Ç,', '–º–∏—Ä!', '–ö–∞–∫', '–¥–µ–ª–∞?']
sentence = ' '.join(words)  # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ª–æ–≤–∞ —Å –ø—Ä–æ–±–µ–ª–æ–º
print(sentence)  # –í—ã–≤–æ–¥: –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! –ö–∞–∫ –¥–µ–ª–∞?

# –ü—Ä–∏–º–µ—Ä 2: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
fruits = ['—è–±–ª–æ–∫–æ', '–±–∞–Ω–∞–Ω', '–≥—Ä—É—à–∞']
result = ';'.join(fruits)  # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ñ—Ä—É–∫—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏ –ø—Ä–æ–±–µ–ª
print(result)  # –í—ã–≤–æ–¥: —è–±–ª–æ–∫–æ;–±–∞–Ω–∞–Ω;–≥—Ä—É—à–∞
'''


# ‚Ññ 18133 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# (–í. –ö–æ–ª—á–µ–≤) –í—Å–µ 5-–±—É–∫–≤–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞, –≤ —Å–æ—Å—Ç–∞–≤–µ –∫–æ—Ç–æ—Ä—ã—Ö
# –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –ö,–û,–î,–ò,–ú,
# –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω—ã.
# –í–æ—Ç –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞:
# 1. –î–î–î–î–î
# 2. –î–î–î–î–ò
# 3. –î–î–î–î–ö
# 4. –î–î–î–î–ú
# 5. –î–î–î–î–û
# ‚Ä¶
# –ü–æ–¥ –∫–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –≤ —Å–ø–∏—Å–∫–µ –∏–¥—ë—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç
# —Ä–æ–≤–Ω–æ –¥–≤–µ –±—É–∫–≤—ã –ú –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –±—É–∫–≤ –ú, —Å—Ç–æ—è—â–∏—Ö —Ä—è–¥–æ–º?
'''
# –í–∞—Ä–∏–∞–Ω—Ç 1
s = sorted('–ö–û–î–ò–ú')
n = 0
for a in s:
    for b in s:
        for c in s:
            for d in s:
                for e in s:
                    slovo = a + b + c + d + e
                    n += 1
                    if slovo.count('–ú') == 2 and '–ú–ú' not in slovo:
                        print(n)

# –í–∞—Ä–∏–∞–Ω—Ç 2
from itertools import *
n = 0
for p in product(sorted('–ö–û–î–ò–ú'), repeat=5):
    slovo = ''.join(p)
    n += 1
    if slovo.count('–ú') == 2 and '–ú–ú' not in slovo:
        print(n)


# –í–∞—Ä–∏–∞–Ω—Ç 3
from itertools import *
for n, p in enumerate(product(sorted('–ö–û–î–ò–ú'), repeat=5), 1):
    slovo = ''.join(p)
    if slovo.count('–ú') == 2 and '–ú–ú' not in slovo:
        print(n)
'''


# ‚Ññ 17799 (–£—Ä–æ–≤–µ–Ω—å: –°—Ä–µ–¥–Ω–∏–π)
# (–í. –ó–∞—Ä—è–Ω–∫–∏–Ω) –í—Å–µ —á–µ—Ç—ã—Ä—ë—Ö–±—É–∫–≤–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞, –≤ —Å–æ—Å—Ç–∞–≤–µ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–≥—É—Ç –±—ã—Ç—å
# —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã –ê, –†, –ì, –£, –ú, –ï, –ù, –¢, –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω—ã –Ω–∞—á–∏–Ω–∞—è —Å 1.
# –í–æ—Ç –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞:
# 1. –ê–ê–ê–ê
# 2. –ê–ê–ê–ì
# 3. –ê–ê–ê–ï
# 4. –ê–ê–ê–ú
# 5. –ê–ê–ê–ù
# ...
#
# –ü–æ–¥ –∫–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –≤ —Å–ø–∏—Å–∫–µ –∏–¥—ë—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º
# –≤—Å–µ –±—É–∫–≤—ã —Ä–∞–∑–ª–∏—á–Ω—ã –∏ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ?
'''
from itertools import *
for n, p in enumerate(product(sorted('–ê–†–ì–£–ú–ï–ù–¢'), repeat=4), 1):
    slovo = ''.join(p)
    if len(slovo) == len(set(slovo)):  # –≤—Å–µ –±—É–∫–≤—ã —Ä–∞–∑–ª–∏—á–Ω—ã
        # print(slovo)  # –ê–ì–ï–ú
        # print(list(slovo))  # ['–ê', '–ì', '–ï', '–ú']
        # print(sorted(slovo))  # ['–ê', '–ì', '–ï', '–ú']
        if list(slovo) == sorted(slovo):
            print(n)
'''

# ‚Ññ 18042 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# (–õ. –®–∞—Å—Ç–∏–Ω) –í–∞–Ω—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5-–±—É–∫–≤–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö
# –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –õ, –Æ, –°, –¢, –†, –ê, –ø—Ä–∏—á—ë–º
# –±—É–∫–≤–∞ –Æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ –¥–≤—É—Ö —Ä–∞–∑.
# –¢–∞–∫–∂–µ —Å–ª–æ–≤–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –æ–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è —Å–æ–≥–ª–∞—Å–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏.
# –°–∫–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–∞–∫–∏—Ö —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –í–∞–Ω—è?
'''
from itertools import *
cnt = 0
for p in product('–õ–Æ–°–¢–†–ê', repeat=5):
    slovo = ''.join(p)
    if slovo.count('–Æ') <= 2:
        if slovo[-1] not in '–õ–°–¢–†':
            cnt += 1
print(cnt)
'''


# ‚Ññ 12917 PRO100 –ï–ì–≠ 26.01.24 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# –ü–µ—Ç—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–æ–≤–∞ –ø—É—Ç—ë–º –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—É–∫–≤ –≤ —Å–ª–æ–≤–µ –ü–†–û–°–¢–û.
# –°–∫–æ–ª—å–∫–æ –æ–Ω —Å–º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–æ–≤,
# –µ—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Ä—è–¥–æ–º –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –±—É–∫–≤—ã?
'''
from itertools import *
r = []
for p in permutations('–ü–†–û–°–¢–û'):
    slovo = ''.join(p)
    if '–û–û' not in slovo:
        r.append(slovo)
print(len(set(r)))
'''


# ‚Ññ 17627 –û—Å–Ω–æ–≤–Ω–∞—è –≤–æ–ª–Ω–∞ 19.06.24 (–£—Ä–æ–≤–µ–Ω—å: –ë–∞–∑–æ–≤—ã–π)
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 15-—Ä–∏—á–Ω—ã—Ö –ø—è—Ç–∏–∑–Ω–∞—á–Ω—ã—Ö —á–∏—Å–µ–ª,
# –≤ –∑–∞–ø–∏—Å–∏ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–æ–≤–Ω–æ –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞ 8
# –∏ –Ω–µ –º–µ–Ω–µ–µ –¥–≤—É—Ö —Ü–∏—Ñ—Ä —Å —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–º 9.
'''
alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
from itertools import *
cnt = 0
for p in product(alphabet[:15], repeat=5):
    num = ''.join(p)
    if num[0] != '0':
        if num.count('8') == 1:
            if len([x for x in num if x > '9']) >= 2:
                cnt += 1
print(cnt)
'''

# endregion –£—Ä–æ–∫: *************************************************************
# #
# #
# region –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************


# endregion –†–∞–∑–æ–±—Ä–∞—Ç—å: *************************************************************
# #
# #
# –§–ò–ü–ò = [2, 6, 8, 12]
# –ö–ï–ì–≠  = []
# –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ:
