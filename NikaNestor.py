# region Домашка: ******************************************************************


# endregion Домашка: ******************************************************************
# #
# #
# region Урок: ********************************************************************

# Как проверять числа на простоту:
'''
def prime(x):
    if x <= 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

print([x for x in range(1, 100) if prime(x)])

def div(x):
    d = []
    for j in range(1, int(x**0.5)+1):
        if x % j == 0:
            d += [j, x // j]
    return sorted(set(d))

print([x for x in range(1, 100) if len(div(x)) == 2])
'''


# № 23569 Пересдача 03.07.25 (Уровень: Средний)
'''
def prime(x):
    if x <= 1:
        return False
    for j in range(2, x):
        if x % j == 0:
            return False
    return True

def div(x):
    d = []
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            if prime(j) and prime(x // j):
                d += [j, x // j]
    return sorted(d)

cnt = 0
for x in range(6_086_055+1, 10**10):
    d = [j for j in div(x) if '6' in str(j)]
    if len(d) >= 2:
        print(x, max(d))
        cnt += 1
        if cnt == 5:
            break
'''


# № 21902 Открытый вариант 2025 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n), где n – целое число, задан следующими соотношениями:
# F(n)=n при n≥2025;
# F(n)=n×2+F(n+2), если n<2025.
# Чему равно значение выражения F(82)–F(81)?
'''
def F(n):
    if n >= 2025:
        return n
    if n < 2025:
        return n * 2 + F(n + 2)

print(F(82) - F(81))
'''


# № 20196 (Уровень: Базовый)
# Алгоритм вычисления функции
# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n)=n, если n<110;
# F(n)=n+F(n−1), если n≥110.
# Чему равно значение выражения F(2025)−F(2021)?
'''
import sys
sys.setrecursionlimit(10**8)

def F(n):
    if n < 110:
        return n
    if n >= 110:
        return n + F(n - 1)

print(F(2025) - F(2021))
# RecursionError: maximum recursion depth exceeded


# F(2025) = 2025 + F(2024)
# F(2024) = 2024 + F(2023)
# F(2023) = 2023 + F(2022)
# F(2022) = 2022 + F(2021) - F(2021)
print(2025 + 2024 + 2023 + 2022)
'''


# № 23756 Демоверсия 2026 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n) и G(n), где n – целое число, задан следующими соотношениями:
# F(n)=2×(G(n−3)+8);
# G(n)=2×n, если n<10.
# G(n)=G(n−2)+1, если n≥10.
# Чему равно значение выражения F(15548)?
'''
import sys
sys.setrecursionlimit(10**8)

def F(n):
    return 2 * (G(n - 3) + 8)

def G(n):
    if n < 10:
        return 2 * n
    if n >= 10:
        return G(n - 2) + 1

print(F(15548))
'''


# № 20906 Апробация 05.03.25 (Уровень: Базовый)
# Алгоритм вычисления значения функции
# F(n), где n – натуральное число, задан следующими соотношениями:
# F(n) = 1 при n=1;
# F(n) = n×F(n−1), если n>1.
# Чему равно значение выражения (F(2024)/4+F(2023))/F(2022)?
'''
import sys
sys.setrecursionlimit(10**8)

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n * F(n - 1)

print((F(2024) // 4 + F(2023)) // F(2022))
'''
# print((F(2024) / 4 + F(2023)) / F(2022))
#            ~~~~^~~
# OverflowError: integer division result too large for a float


# № 18931 Новогодний вариант 2025 (Уровень: Базовый)
# Снежная Королева создала волшебную функцию
# F(n), которая помогает ей вычислять силу зимы. Эта функция определяется следующим образом:
# F(n)=n−1, при n⩽3;
# F(n)=F(n−2)+n/2−F(n−4), если n>3 и n чётно;
# F(n)=F(n−1)×n+F(n−2), если n>3 и n нечётно,
# где n – целое неотрицательное число.
# Королева решила узнать, насколько велика сила зимы в её королевстве.
# Для этого вычислите значение выражения: F(4952)+2×F(4958)+F(4964).
'''
from functools import *

@lru_cache(None)
def F(n):
    if n <= 3:
        return n - 1
    if n > 3 and n % 2 == 0:
        return F(n - 2) + n / 2 - F(n - 4)
    if n > 3 and n % 2 != 0:
        return F(n - 1) * n + F(n - 2)

for n in range(5000):
    F(n)

print(F(4952)+2 * F(4958)+F(4964))
'''

# endregion Урок: *************************************************************
# #
# #
# region Разобрать: *************************************************************


# endregion Разобрать: *************************************************************
# #
# #
# ФИПИ = [5, 8, 9, 14, 15, 16, 17, 25]
# КЕГЭ = []
# на следующем уроке: 23, 19-21
